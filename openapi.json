{
    "openapi": "3.1.0",
    "info": {
        "title": "Commvoice API",
        "version": "1"
    },
    "servers": [
        {
            "url": "https:\/\/api.comm.com\/api",
            "description": "Live"
        }
    ],
    "security": [
        {
            "http": []
        }
    ],
    "paths": {
        "\/v1\/voice\/post-processing": {
            "get": {
                "operationId": "voice.post-processing.index",
                "tags": [
                    "AgentPostProcessing"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `AgentPostProcessingResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AgentPostProcessingResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "voice.post-processing.store",
                "tags": [
                    "AgentPostProcessing"
                ],
                "requestBody": {
                    "description": "`AgentPostProcessingMetaDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AgentPostProcessingMetaDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/voice\/post-processing\/{postProcessing}": {
            "get": {
                "operationId": "voice.post-processing.show",
                "tags": [
                    "AgentPostProcessing"
                ],
                "parameters": [
                    {
                        "name": "postProcessing",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "voice.post-processing.update",
                "tags": [
                    "AgentPostProcessing"
                ],
                "parameters": [
                    {
                        "name": "postProcessing",
                        "in": "path",
                        "required": true,
                        "description": "The post processing ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`AgentPostProcessingMetaDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AgentPostProcessingMetaDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AgentPostProcessing`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/AgentPostProcessing"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "voice.post-processing.destroy",
                "tags": [
                    "AgentPostProcessing"
                ],
                "parameters": [
                    {
                        "name": "postProcessing",
                        "in": "path",
                        "required": true,
                        "description": "The post processing ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/post-processing\/{postProcessing}\/run": {
            "post": {
                "operationId": "agentPostProcessing.testRun",
                "tags": [
                    "AgentPostProcessing"
                ],
                "parameters": [
                    {
                        "name": "postProcessing",
                        "in": "path",
                        "required": true,
                        "description": "The post processing ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "call_id": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "call_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/post-processing\/{postProcessing}\/run-logs": {
            "post": {
                "operationId": "agentPostProcessing.runLogs",
                "tags": [
                    "AgentPostProcessing"
                ],
                "parameters": [
                    {
                        "name": "postProcessing",
                        "in": "path",
                        "required": true,
                        "description": "The post processing ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "run_id": {
                                                        "type": "string"
                                                    },
                                                    "last_run": {
                                                        "type": "string"
                                                    },
                                                    "agent_tools_count": {
                                                        "type": "integer"
                                                    },
                                                    "agent_post_processing_id": {
                                                        "type": "string"
                                                    },
                                                    "agent_id": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "run_id",
                                                    "last_run",
                                                    "agent_tools_count",
                                                    "agent_post_processing_id",
                                                    "agent_id"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/post-processing\/{postProcessing}\/tool-logs": {
            "post": {
                "operationId": "agentPostProcessing.toolLogs",
                "tags": [
                    "AgentPostProcessing"
                ],
                "parameters": [
                    {
                        "name": "postProcessing",
                        "in": "path",
                        "required": true,
                        "description": "The post processing ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "run_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "required": [
                                    "run_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "agent_id": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string"
                                                    },
                                                    "call_id": {
                                                        "type": "string"
                                                    },
                                                    "agent_tool_id": {
                                                        "type": "string"
                                                    },
                                                    "meta": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "agent_id",
                                                    "created_at",
                                                    "call_id",
                                                    "agent_tool_id",
                                                    "meta"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/{agent}\/prompts": {
            "get": {
                "operationId": "voice.prompts.index",
                "tags": [
                    "AgentPrompts"
                ],
                "parameters": [
                    {
                        "name": "agent",
                        "in": "path",
                        "required": true,
                        "description": "The agent ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `AgentPromptResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AgentPromptResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "voice.prompts.store",
                "tags": [
                    "AgentPrompts"
                ],
                "parameters": [
                    {
                        "name": "agent",
                        "in": "path",
                        "required": true,
                        "description": "The agent ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "welcome_message": {
                                        "type": "string"
                                    },
                                    "prompt": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "voice_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "voice_name": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "welcome_message"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`AgentPromptResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/AgentPromptResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Failed to create prompt"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "An error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Error overview.",
                                            "example": ""
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/{agent}\/prompts\/{prompt}": {
            "put": {
                "operationId": "voice.prompts.update",
                "tags": [
                    "AgentPrompts"
                ],
                "parameters": [
                    {
                        "name": "agent",
                        "in": "path",
                        "required": true,
                        "description": "The agent ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "prompt",
                        "in": "path",
                        "required": true,
                        "description": "The prompt ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "welcome_message": {
                                        "type": "string"
                                    },
                                    "prompt": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "voice_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "voice_name": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AgentPromptResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/AgentPromptResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Failed to update prompt"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "An error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Error overview.",
                                            "example": ""
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "voice.prompts.destroy",
                "tags": [
                    "AgentPrompts"
                ],
                "parameters": [
                    {
                        "name": "agent",
                        "in": "path",
                        "required": true,
                        "description": "The agent ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "prompt",
                        "in": "path",
                        "required": true,
                        "description": "The prompt ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Failed to delete prompt"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "An error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Error overview.",
                                            "example": ""
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/tools": {
            "get": {
                "operationId": "voice.tools.index",
                "tags": [
                    "AgentTools"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `AgentToolsResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AgentToolsResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "voice.tools.store",
                "tags": [
                    "AgentTools"
                ],
                "requestBody": {
                    "description": "`AgentToolMetaDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AgentToolMetaDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AgentToolsResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/AgentToolsResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/voice\/tools\/{tool}": {
            "put": {
                "operationId": "voice.tools.update",
                "tags": [
                    "AgentTools"
                ],
                "parameters": [
                    {
                        "name": "tool",
                        "in": "path",
                        "required": true,
                        "description": "The tool ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`AgentToolMetaDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AgentToolMetaDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AgentToolsResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/AgentToolsResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "voice.tools.destroy",
                "tags": [
                    "AgentTools"
                ],
                "parameters": [
                    {
                        "name": "tool",
                        "in": "path",
                        "required": true,
                        "description": "The tool ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/hangup": {
            "get": {
                "operationId": "agents.hangupCallByNumber",
                "tags": [
                    "Agents"
                ],
                "parameters": [
                    {
                        "name": "team_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to_number",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to hang up call"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Call ended successfully"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Invalid number or team"
                                                }
                                            },
                                            "required": [
                                                "error"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Missing number or team"
                                                }
                                            },
                                            "required": [
                                                "error"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/webhooks\/agents\/tools\/execute": {
            "get": {
                "operationId": "agents.toolExecute",
                "tags": [
                    "Agents"
                ],
                "parameters": [
                    {
                        "name": "tool_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "call_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "team_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tool executed successfully"
                                        },
                                        "tool_result": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "tool_result"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to execute tool"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents": {
            "get": {
                "operationId": "voice.agents.index",
                "tags": [
                    "Agents"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `AgentResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AgentResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "voice.agents.store",
                "tags": [
                    "Agents"
                ],
                "requestBody": {
                    "description": "`AgentMetaDataRequest`",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AgentMetaDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`AgentResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/AgentResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Failed to create agent"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/{agent}": {
            "put": {
                "operationId": "voice.agents.update",
                "tags": [
                    "Agents"
                ],
                "parameters": [
                    {
                        "name": "agent",
                        "in": "path",
                        "required": true,
                        "description": "The agent ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`AgentMetaDataRequest`",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/AgentMetaDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AgentResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/AgentResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Failed to update agent"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "voice.agents.destroy",
                "tags": [
                    "Agents"
                ],
                "parameters": [
                    {
                        "name": "agent",
                        "in": "path",
                        "required": true,
                        "description": "The agent ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "null"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Failed to delete agent"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/{agent}\/duplicate": {
            "post": {
                "operationId": "voice.agents.duplicate",
                "tags": [
                    "Agents"
                ],
                "parameters": [
                    {
                        "name": "agent",
                        "in": "path",
                        "required": true,
                        "description": "The agent ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "`AgentResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/AgentResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/{agent}\/generate\/conversations": {
            "post": {
                "operationId": "voice.agents.generate-conversations",
                "tags": [
                    "Agents"
                ],
                "parameters": [
                    {
                        "name": "agent",
                        "in": "path",
                        "required": true,
                        "description": "The agent ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "language": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 10
                                    },
                                    "conversations_count": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ],
                                        "minimum": 1,
                                        "maximum": 10
                                    },
                                    "user_behavior": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "user_behavior"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "conversations": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "conversations"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/{agent}\/chat": {
            "post": {
                "operationId": "voice.agents.chat",
                "tags": [
                    "Agents"
                ],
                "parameters": [
                    {
                        "name": "agent",
                        "in": "path",
                        "required": true,
                        "description": "The agent ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "maxLength": 500
                                    },
                                    "language": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 10
                                    },
                                    "conversation_history": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "role": {
                                                    "type": "string",
                                                    "enum": [
                                                        "user",
                                                        "agent"
                                                    ]
                                                },
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": [
                                    "message"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to generate chat response. Please try again."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/{agent}\/create\/prompt": {
            "post": {
                "operationId": "voice.agents.create-prompt",
                "tags": [
                    "Agents"
                ],
                "parameters": [
                    {
                        "name": "agent",
                        "in": "path",
                        "required": true,
                        "description": "The agent ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "maxLength": 5000
                                    }
                                },
                                "required": [
                                    "description"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to generate agent prompt. Please try again."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "prompt": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "prompt"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/hangup-call": {
            "post": {
                "operationId": "agents.hangupCall",
                "tags": [
                    "Agents"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "call_id": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "call_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to hang up call"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Call ended successfully"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/voices": {
            "post": {
                "operationId": "agents.voices",
                "tags": [
                    "Agents"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "search": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/test-call": {
            "post": {
                "operationId": "agents.testCall",
                "tags": [
                    "Agents"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "from_number": {
                                        "type": "integer"
                                    },
                                    "to_number": {
                                        "type": "integer"
                                    },
                                    "greeting_message": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "prompt": {
                                        "type": "string"
                                    },
                                    "tools": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "agent_id": {
                                        "type": "string"
                                    },
                                    "voice_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "language": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "from_number",
                                    "to_number",
                                    "prompt",
                                    "agent_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "call_id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "call_id"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Failed to create call"
                                                }
                                            },
                                            "required": [
                                                "error"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "error"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Error overview.",
                                            "example": "Greeting message is required when start_with_greeting is enabled."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/analytics\/filters": {
            "get": {
                "operationId": "dataGrid.filters",
                "description": "Example response:\n```json\n{\n\"data\": [\n{\n\"label\": \"Sms Id\",\n\"key\": \"sms_id\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Team Id\",\n\"key\": \"team_id\",\n\"type\": \"text\",\n\"canGroup\": true,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Updated Datetime\",\n\"key\": \"updated_datetime\",\n\"type\": \"date\",\n\"canGroup\": false,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"greaterThan\",\n\"lessThan\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Sms Campaign Id\",\n\"key\": \"sms_campaign_id\",\n\"type\": \"text\",\n\"canGroup\": true,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Sms Campaign Send Id\",\n\"key\": \"sms_campaign_send_id\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Segment Id\",\n\"key\": \"segment_id\",\n\"type\": \"text\",\n\"canGroup\": true,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Contact Id\",\n\"key\": \"contact_id\",\n\"type\": \"text\",\n\"canGroup\": true,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Phone\",\n\"key\": \"phone_normalized\",\n\"type\": \"text\",\n\"canGroup\": true,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Network Id\",\n\"key\": \"network_id\",\n\"type\": \"number\",\n\"canGroup\": true,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"lessThan\",\n\"lessThanOrEqual\",\n\"greaterThan\",\n\"greaterThanOrEqual\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Country Id\",\n\"key\": \"country_id\",\n\"type\": \"number\",\n\"canGroup\": true,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"lessThan\",\n\"lessThanOrEqual\",\n\"greaterThan\",\n\"greaterThanOrEqual\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Foreign Id\",\n\"key\": \"foreign_id\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Fail Reason\",\n\"key\": \"fail_reason\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Sent\",\n\"key\": \"is_sent\",\n\"type\": \"number\",\n\"canGroup\": false,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"lessThan\",\n\"lessThanOrEqual\",\n\"greaterThan\",\n\"greaterThanOrEqual\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Is Clicked\",\n\"key\": \"is_clicked\",\n\"type\": \"number\",\n\"canGroup\": false,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"lessThan\",\n\"lessThanOrEqual\",\n\"greaterThan\",\n\"greaterThanOrEqual\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Is Lead\",\n\"key\": \"is_lead\",\n\"type\": \"number\",\n\"canGroup\": false,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"lessThan\",\n\"lessThanOrEqual\",\n\"greaterThan\",\n\"greaterThanOrEqual\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Is Sale\",\n\"key\": \"is_sale\",\n\"type\": \"number\",\n\"canGroup\": false,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"lessThan\",\n\"lessThanOrEqual\",\n\"greaterThan\",\n\"greaterThanOrEqual\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Unsubscribed Method\",\n\"key\": \"unsubscribed_method\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Domain Id\",\n\"key\": \"domain_id\",\n\"type\": \"text\",\n\"canGroup\": true,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Shortened Url\",\n\"key\": \"shortened_url\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Offer Id\",\n\"key\": \"offer_id\",\n\"type\": \"text\",\n\"canGroup\": true,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Campaign Text Id\",\n\"key\": \"campaign_text_id\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Final Text\",\n\"key\": \"final_text\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Text Parts\",\n\"key\": \"text_parts\",\n\"type\": \"number\",\n\"canGroup\": false,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"lessThan\",\n\"lessThanOrEqual\",\n\"greaterThan\",\n\"greaterThanOrEqual\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Sms Routing Plan Id\",\n\"key\": \"sms_routing_plan_id\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Sms Routing Plan Rule Id\",\n\"key\": \"sms_routing_plan_rule_id\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Sms Routing Route Id\",\n\"key\": \"sms_routing_route_id\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Sms Rule Selected Data\",\n\"key\": \"sms_rule_selected_data\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Sender Id\",\n\"key\": \"sender_id\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Sender Id Id\",\n\"key\": \"sender_id_id\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Sms Parts\",\n\"key\": \"sms_parts\",\n\"type\": \"number\",\n\"canGroup\": false,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"lessThan\",\n\"lessThanOrEqual\",\n\"greaterThan\",\n\"greaterThanOrEqual\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Dlr Code\",\n\"key\": \"dlr_code\",\n\"type\": \"number\",\n\"canGroup\": false,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"lessThan\",\n\"lessThanOrEqual\",\n\"greaterThan\",\n\"greaterThanOrEqual\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Dlr Str\",\n\"key\": \"dlr_str\",\n\"type\": \"text\",\n\"canGroup\": false,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Sent At\",\n\"key\": \"sent_at\",\n\"type\": \"date\",\n\"canGroup\": false,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"greaterThan\",\n\"lessThan\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Time Clicked\",\n\"key\": \"time_clicked\",\n\"type\": \"date\",\n\"canGroup\": false,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"greaterThan\",\n\"lessThan\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Campaign Name\",\n\"key\": \"campaign_name\",\n\"type\": \"text\",\n\"canGroup\": true,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Network Brand\",\n\"key\": \"network_brand\",\n\"type\": \"text\",\n\"canGroup\": true,\n\"operators\": [\n\"contains\",\n\"notContains\",\n\"equals\",\n\"notEqual\",\n\"startsWith\",\n\"endsWith\",\n\"blank\",\n\"notBlank\"\n]\n},\n{\n\"label\": \"Ctr\",\n\"key\": \"ctr\",\n\"type\": \"number\",\n\"canGroup\": false,\n\"operators\": [\n\"equals\",\n\"notEqual\",\n\"lessThan\",\n\"lessThanOrEqual\",\n\"greaterThan\",\n\"greaterThanOrEqual\",\n\"inRange\",\n\"blank\",\n\"notBlank\"\n]\n}\n]\n}\n```",
                "summary": "analytics.filters",
                "tags": [
                    "Analytics",
                    "DataGrid"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "sms_contacts",
                                "sms_reports",
                                "route_company",
                                "connected_routes"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `DataGridFilterResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DataGridFilterResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/webhooks\/audience\/feed": {
            "post": {
                "operationId": "webhooks.audience.feed",
                "tags": [
                    "AudienceFeeds"
                ],
                "requestBody": {
                    "description": "`ContactFeedDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/ContactFeedDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/audience\/feeds\/logs": {
            "get": {
                "operationId": "audience.feeds.logs",
                "tags": [
                    "AudienceFeeds"
                ],
                "parameters": [
                    {
                        "name": "feed_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AudienceFeedLogData"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "total",
                                                "current_page",
                                                "last_page",
                                                "per_page"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/audience\/feeds": {
            "get": {
                "operationId": "audience.feeds.index",
                "tags": [
                    "AudienceFeeds"
                ],
                "parameters": [
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "enum": [
                                "logs_count"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `AudienceFeedResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/AudienceFeedResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "audience.feeds.store",
                "tags": [
                    "AudienceFeeds"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`AudienceFeedResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/AudienceFeedResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/audience\/feeds\/{feed}": {
            "put": {
                "operationId": "audience.feeds.update",
                "tags": [
                    "AudienceFeeds"
                ],
                "parameters": [
                    {
                        "name": "feed",
                        "in": "path",
                        "required": true,
                        "description": "The feed ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "token": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "name",
                                    "tags"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`AudienceFeedResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/AudienceFeedResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "audience.feeds.destroy",
                "tags": [
                    "AudienceFeeds"
                ],
                "parameters": [
                    {
                        "name": "feed",
                        "in": "path",
                        "required": true,
                        "description": "The feed ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/token\/login": {
            "post": {
                "operationId": "auth.login",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "remember": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "access_token",
                                        "token_type",
                                        "expires_in"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                },
                "security": [
                    {}
                ]
            }
        },
        "\/v1\/token\/refresh": {
            "post": {
                "operationId": "auth.refresh",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "access_token",
                                        "token_type",
                                        "expires_in"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/token\/logout": {
            "post": {
                "operationId": "auth.logout",
                "summary": "Log the user out (Invalidate the token)",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/user": {
            "get": {
                "operationId": "auth.me",
                "summary": "Get the authenticated User",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "`UserData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "two_factor_confirmed_at": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "profile_photo_path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "platform_domain_account_id": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "current_team": {
                                                    "anyOf": [
                                                        {
                                                            "$ref": "#\/components\/schemas\/TeamData"
                                                        },
                                                        {
                                                            "type": "null"
                                                        }
                                                    ]
                                                },
                                                "role": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "platform_role": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "created_at",
                                                "two_factor_confirmed_at",
                                                "profile_photo_path",
                                                "platform_domain_account_id",
                                                "role",
                                                "platform_role"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "profile.update",
                "tags": [
                    "Profile"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "website": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "from": {
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                },
                                "required": [
                                    "name",
                                    "website",
                                    "from"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/login": {
            "post": {
                "operationId": "authenticatedSession.store",
                "summary": "Handle an incoming authentication request",
                "tags": [
                    "AuthenticatedSession"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "403": {
                        "$ref": "#\/components\/responses\/AuthorizationException"
                    }
                }
            }
        },
        "\/v1\/automations": {
            "get": {
                "operationId": "automations.index",
                "tags": [
                    "Automations"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "automations.store",
                "tags": [
                    "Automations"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "marketing",
                                            "hub"
                                        ]
                                    }
                                },
                                "required": [
                                    "name",
                                    "type"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`Automation`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Automation"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/automations\/{automation}": {
            "get": {
                "operationId": "automations.show",
                "tags": [
                    "Automations"
                ],
                "parameters": [
                    {
                        "name": "automation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`Automation`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/Automation"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/automations\/{id}": {
            "put": {
                "operationId": "automations.update",
                "tags": [
                    "Automations"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "meta": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "automations.destroy",
                "tags": [
                    "Automations"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Automation deleted successfully"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/automations\/{id}\/toggle-status": {
            "patch": {
                "operationId": "automations.toggleStatus",
                "tags": [
                    "Automations"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/automations\/{automation}\/nodes\/stats": {
            "post": {
                "operationId": "automations.smsAmountOfNodes",
                "tags": [
                    "Automations"
                ],
                "parameters": [
                    {
                        "name": "automation",
                        "in": "path",
                        "required": true,
                        "description": "The automation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "date_start": {
                                        "type": "string"
                                    },
                                    "date_end": {
                                        "type": "string"
                                    },
                                    "node_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "node_ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "node_id": {
                                                        "type": "string"
                                                    },
                                                    "total": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "node_id",
                                                    "total"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/automations\/{automation}\/mnp\/stats": {
            "post": {
                "operationId": "automations.mnpNodeStats",
                "tags": [
                    "Automations"
                ],
                "parameters": [
                    {
                        "name": "automation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "node_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "date_start": {
                                        "type": "string"
                                    },
                                    "date_end": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "node_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": "integer"
                                        },
                                        "amount": {
                                            "type": "number"
                                        }
                                    },
                                    "required": [
                                        "total",
                                        "amount"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/billing\/charge": {
            "post": {
                "operationId": "billing.charge",
                "tags": [
                    "Billing"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "cost": {
                                        "type": "number"
                                    },
                                    "meta": {
                                        "type": "object",
                                        "properties": {
                                            "integration_id": {
                                                "type": "string",
                                                "format": "uuid"
                                            },
                                            "reason": {
                                                "type": "string"
                                            },
                                            "webhook_request_id": {
                                                "type": [
                                                    "string",
                                                    "null"
                                                ],
                                                "format": "uuid"
                                            }
                                        },
                                        "required": [
                                            "integration_id",
                                            "reason"
                                        ]
                                    }
                                },
                                "required": [
                                    "cost",
                                    "meta"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "success"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Integration does not support managed balance"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/billing\/top-up": {
            "get": {
                "operationId": "billing.top-up.show",
                "tags": [
                    "Billing"
                ],
                "parameters": [
                    {
                        "name": "include",
                        "in": "query",
                        "schema": {
                            "type": [
                                "array",
                                "null"
                            ],
                            "items": {
                                "type": "string",
                                "enum": [
                                    "balance"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`TeamTopUpResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/TeamTopUpResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "billing.top-up.disable",
                "tags": [
                    "Billing"
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/billing\/billing-information": {
            "get": {
                "operationId": "billing.billing-information.show",
                "tags": [
                    "Billing"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "billing.billing-information.store",
                "tags": [
                    "Billing"
                ],
                "requestBody": {
                    "description": "`BillingInformationDataRequest`",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BillingInformationDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/classifiers\/call-outcome": {
            "get": {
                "operationId": "voice.classifiers.call-outcome.index",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `CallOutcomeClassifierResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CallOutcomeClassifierResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "voice.classifiers.call-outcome.store",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "prompt": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "name",
                                    "prompt"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`CallOutcomeClassifierResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CallOutcomeClassifierResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/classifiers\/call-outcome\/{callOutcome}": {
            "put": {
                "operationId": "voice.classifiers.call-outcome.update",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "parameters": [
                    {
                        "name": "callOutcome",
                        "in": "path",
                        "required": true,
                        "description": "The call outcome ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "prompt": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CallOutcomeClassifierResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CallOutcomeClassifierResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/classifiers\/call-outcome\/{call_outcome}": {
            "delete": {
                "operationId": "voice.classifiers.call-outcome.destroy",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "parameters": [
                    {
                        "name": "call_outcome",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/classifiers\/call-outcome\/active": {
            "get": {
                "operationId": "voice.classifiers.call-outcome.active",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "responses": {
                    "200": {
                        "description": "`CallOutcomeClassifierResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CallOutcomeClassifierResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/classifiers\/call-outcome\/definitions": {
            "get": {
                "operationId": "voice.classifiers.call-outcome.definitions",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "definitions": {
                                            "type": "array",
                                            "prefixItems": [
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Select this ONLY if:\n- User explicitly agrees to the product or service\n- User gives clear confirmation to proceed\n- User accepts the offer\nIMPORTANT: General engagement, neutral responses, or inability to act immediately should NOT be counted as interest without explicit agreement to the product\/service"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "outcome: interested\nreason: (why you think the user is interested)"
                                                        }
                                                    },
                                                    "required": [
                                                        "description",
                                                        "format"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Select this ONLY if:\n- User does not have enough money"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "outcome: not_qualified\nreason: (why you think the user is not qualified)"
                                                        }
                                                    },
                                                    "required": [
                                                        "description",
                                                        "format"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Select this ONLY if:\n- User mentions a bad experience with the product\/service\n- User expresses frustration or disappointment with the product\/service\n- User shares a negative story or feedback about the product\/service\nIMPORTANT: DO NOT select if the user is interested or explicitly declines"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "outcome: burned_experience\nreason: (why you think the user had a burned experience)"
                                                        }
                                                    },
                                                    "required": [
                                                        "description",
                                                        "format"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Select this ONLY if HAVE AT LEAST 3 TURNS IN THE CONVERSATION AND :\nDO NOT SELECT IF CONVERSATION IS SHORT OR USER DID NOT EXPRESS ANY EXPLICIT INTEREST OR DISINTEREST\n- MUST HAVE AT LEAST 3 TURNS IN THE CONVERSATION\n- User explicitly says they're not interested\n- DO NOT select if the user said \"I'm busy\" or \"call me later\" without further engagement\n- DO NOT select if user only had 2 turns (\"user:\") or less! f.e: \"user: This is..\" is not not_interested outcome\n"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "outcome: not_interested\nreason: (why you think the user is not interested)"
                                                        }
                                                    },
                                                    "required": [
                                                        "description",
                                                        "format"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Select quick_hangup ONLY IF ANY OF FOLLOWING CONDITIONS ARE MET:\n- SELECT IF USER HANGS UP QUICKLY AFTER AGENT STARTED SPEAKING\n- IF the user hangs up without saying anything meaningful and agent spoke - it's probably quick_hangup\n\n**ONLY USE THIS quick_hangup outcome if \"user:\" AND \"agent:\" exist in transcript**\n\nDO NOT SELECT quick_hangup if you do not see \"agent:\" in transcript!\n\nexample for quick_hangup outcome:\n1. user: Hello\nagent: Hi, I'm calling you about...\n<end of call, user hangs up quickly>\n\n\n"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "outcome: quick_hangup\nreason: (why you think the user hung up quickly)"
                                                        }
                                                    },
                                                    "required": [
                                                        "description",
                                                        "format"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Select this ONLY if:\n- The user speaks and theres no \"agent:\" at all in transcript!!.\n- Only for cases where there might be a technical issue with agent. if the agent didnt have a good sales pitch its not agent_issue!\n- if the user repeatedly says \"hello\" or \"are you there?\" theres an agent issue.\nIF USER HANGS UP ON AGENT AFTER AGENT STARTED SPEAKING INITITALLY DO NOT SELECT agent_issue.\n\nEXAMPLE for agent_issue outcome:\n1. user: Hello\n<end of call, agent did not respond at all, user hangs up quickly before agent speaks>\n"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "outcome: agent_issue\nreason: (why you think the user hung up quickly)"
                                                        }
                                                    },
                                                    "required": [
                                                        "description",
                                                        "format"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Select this if ANY of these occur:\n- The call reaches an automated voicemail or messaging system.\n- The call is answered by an automated system or machine response (not a human).\n- You hear a pre-recorded menu options or instructions.\n- If the user said hello or similar, it can't be a voice mail.\n- The speaker is primarily pronouncing numbers (e.g., leaving a phone number).\n- The user said \"I'm not available right now\" or \"Answer machine..\" or similar without further engagement.\nIMPORTANT:\n- DO NOT select if the user answering and taking messages\n- DO NOT select if the user said ONLY greetings or \"hello\" without further engagement\n\nExamples of voice_mail outcome:\n- Es el servicio de contestador para 3...\n- Encuentra disponible.\n"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "outcome: voice_mail\nreason: (why you think the call reached voicemail)"
                                                        }
                                                    },
                                                    "required": [
                                                        "description",
                                                        "format"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Select this ONLY if:\n- User explicitly requests a callback\n- User suggests a specific time for future contact\n- User says something like \"call me tomorrow\/next week\/etc.\"\n- User says he's busy right now.\n- Call ended reason is not \"customer-did-not-answer\"\nIMPORTANT:\n    - DO NOT select night hours (after 9 PM or before 9 AM) for callback\n    - Must include specific date\/time information when user provides it\nNote: If only date is provided without time, use format YYYY-MM-DD"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "outcome: call_me_later\ndate: YYYY-MM-DD HH:mm:ss\nreason: (why you think the user wants a callback)"
                                                        }
                                                    },
                                                    "required": [
                                                        "description",
                                                        "format"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Select this ONLY if:\n- User explicitly asks to not be called again\n- User requests removal from call list\n- User states they don't want to receive any future calls\nIMPORTANT: Must be an explicit request, not just current rejection"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "outcome: do_not_call\nreason: (why you think the user doesn't want to be called)"
                                                        }
                                                    },
                                                    "required": [
                                                        "description",
                                                        "format"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Select this ONLY if:\n- User shows some interest but is not fully committed\n- User asks for more information or details\n- User expresses uncertainty or hesitation\n- User asks for a follow-up or more time to think\nIMPORTANT:\n- DO NOT select if the user explicitly declines or says they're not interested"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "outcome: maybe_interested\nreason: (why you think the user is maybe interested)"
                                                        }
                                                    },
                                                    "required": [
                                                        "description",
                                                        "format"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Select this ONLY if:\n- User mentions any audio issues\n- User complains about not hearing the agent\n- User expresses frustration about the call quality\nIMPORTANT: DO NOT select if the user is not interested or explicitly declines"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "outcome: audio_issue\nreason: (why you think the user had an audio issue)"
                                                        }
                                                    },
                                                    "required": [
                                                        "description",
                                                        "format"
                                                    ]
                                                },
                                                {
                                                    "type": "null"
                                                },
                                                {
                                                    "type": "null"
                                                },
                                                {
                                                    "type": "null"
                                                },
                                                {
                                                    "type": "null"
                                                }
                                            ],
                                            "minItems": 15,
                                            "maxItems": 15,
                                            "additionalItems": false
                                        }
                                    },
                                    "required": [
                                        "definitions"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/classifiers\/call-outcome\/test": {
            "post": {
                "operationId": "voice.classifiers.call-outcome.test",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "batch_size": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 100
                                    },
                                    "prompt": {
                                        "type": "string"
                                    },
                                    "call_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                },
                                "required": [
                                    "batch_size",
                                    "prompt"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Test classification started successfully."
                                        },
                                        "classifier_id": {
                                            "type": "string"
                                        },
                                        "calls": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "classifier_id",
                                        "calls"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/classifiers\/call-outcome\/rerun": {
            "post": {
                "operationId": "voice.classifiers.call-outcome.rerun-all",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "dry-run": {
                                        "type": "boolean"
                                    },
                                    "cancel-pending": {
                                        "type": "boolean"
                                    },
                                    "limit": {
                                        "type": "integer",
                                        "minimum": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "classifier_id": {
                                                    "type": "string"
                                                },
                                                "calls_count": {
                                                    "type": "string"
                                                },
                                                "run_id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message",
                                                "classifier_id",
                                                "calls_count",
                                                "run_id"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Dry run completed successfully."
                                                },
                                                "classifier_id": {
                                                    "type": "string"
                                                },
                                                "calls_count": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message",
                                                "classifier_id",
                                                "calls_count"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/classifiers\/call-outcome\/rerun-filtered": {
            "post": {
                "operationId": "voice.classifiers.call-outcome.rerun-filtered",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filter_params": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "dry-run": {
                                        "type": "boolean"
                                    },
                                    "cancel-pending": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "filter_params"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                },
                                                "classifier_id": {
                                                    "type": "string"
                                                },
                                                "calls_count": {
                                                    "type": "string"
                                                },
                                                "run_id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message",
                                                "classifier_id",
                                                "calls_count",
                                                "run_id"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Dry run completed successfully."
                                                },
                                                "classifier_id": {
                                                    "type": "string"
                                                },
                                                "calls_count": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "message",
                                                "classifier_id",
                                                "calls_count"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/classifiers\/{classifier}\/logs": {
            "get": {
                "operationId": "voice.classifiers.classifier.logs",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "parameters": [
                    {
                        "name": "classifier",
                        "in": "path",
                        "required": true,
                        "description": "The classifier ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "in_progress",
                                "completed",
                                "failed",
                                "skipped",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `CallOutcomeClassifierLogResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CallOutcomeClassifierLogResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/classifiers\/{classifier}\/runs": {
            "get": {
                "operationId": "voice.classifiers.classifier.runs",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "parameters": [
                    {
                        "name": "classifier",
                        "in": "path",
                        "required": true,
                        "description": "The classifier ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "completed",
                                "failed",
                                "running",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/classifiers\/runs\/{run}\/progress": {
            "get": {
                "operationId": "voice.classifiers.run.progress",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "parameters": [
                    {
                        "name": "run",
                        "in": "path",
                        "required": true,
                        "description": "The run ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "run": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                },
                                                "total_calls": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "status",
                                                "total_calls",
                                                "created_at"
                                            ]
                                        },
                                        "logs": {
                                            "type": "string"
                                        },
                                        "status_counts": {
                                            "type": "object",
                                            "properties": {
                                                "pending": {
                                                    "type": "string"
                                                },
                                                "processing": {
                                                    "type": "string"
                                                },
                                                "completed": {
                                                    "type": "string"
                                                },
                                                "failed": {
                                                    "type": "string"
                                                },
                                                "cancelled": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "pending",
                                                "processing",
                                                "completed",
                                                "failed",
                                                "cancelled"
                                            ]
                                        },
                                        "total_processed": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "run",
                                        "logs",
                                        "status_counts",
                                        "total_processed"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/lead-submitter\/settings": {
            "get": {
                "operationId": "voice.lead-submitter.settings.view",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "responses": {
                    "200": {
                        "description": "`LeadSubmitterData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/LeadSubmitterData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "voice.lead-submitter.settings.update",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "url": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "method": {
                                        "type": "string",
                                        "enum": [
                                            "POST",
                                            "PUT",
                                            "PATCH"
                                        ]
                                    },
                                    "transcript_as_text": {
                                        "type": "boolean"
                                    },
                                    "field_aliases": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "call_outcomes": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "enum": [
                                                "interested",
                                                "not_interested",
                                                "voice_mail",
                                                "call_me_later",
                                                "do_not_call",
                                                "wrong_number",
                                                "no_user_response",
                                                "not_qualified",
                                                "burned_experience",
                                                "quick_hangup",
                                                "maybe_interested",
                                                "agent_issue",
                                                "no_answer",
                                                "failed",
                                                "audio_issue",
                                                "busy",
                                                "unknown_error"
                                            ]
                                        }
                                    },
                                    "tags_on_complete": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "maxLength": 50
                                        },
                                        "maxItems": 10
                                    },
                                    "headers": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string",
                                                    "maxLength": 100
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "maxLength": 500
                                                }
                                            }
                                        },
                                        "maxItems": 10
                                    },
                                    "additional_data": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "key": {
                                                    "type": "string",
                                                    "maxLength": 100
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "maxLength": 500
                                                }
                                            }
                                        },
                                        "maxItems": 10
                                    }
                                },
                                "required": [
                                    "enabled",
                                    "url",
                                    "method",
                                    "transcript_as_text",
                                    "call_outcomes"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LeadSubmitterData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/LeadSubmitterData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/lead-submitter\/logs": {
            "get": {
                "operationId": "voice.lead-submitter.logs",
                "tags": [
                    "CallOutcomeClassifiers"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `VoiceLeadSubmitterLogResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoiceLeadSubmitterLogResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/{call}\/listen": {
            "get": {
                "operationId": "calls.listen",
                "tags": [
                    "Calls"
                ],
                "parameters": [
                    {
                        "name": "call",
                        "in": "path",
                        "required": true,
                        "description": "The call ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No recording url found"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/{call}": {
            "patch": {
                "operationId": "calls.update",
                "tags": [
                    "Calls"
                ],
                "parameters": [
                    {
                        "name": "call",
                        "in": "path",
                        "required": true,
                        "description": "The call ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "is_lead": {
                                        "type": "boolean"
                                    },
                                    "is_answered": {
                                        "type": "boolean"
                                    },
                                    "is_answer_machine": {
                                        "type": "boolean"
                                    },
                                    "is_sale": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CallResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CallResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/events\/ai": {
            "post": {
                "operationId": "calls.aiEvents",
                "tags": [
                    "Calls"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "agent_id": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "agent_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/events": {
            "post": {
                "operationId": "calls.events",
                "tags": [
                    "Calls"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "agent_id": {
                                        "type": "string"
                                    },
                                    "call_id": {
                                        "type": "string"
                                    },
                                    "CallSid": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "ok"
                                                }
                                            },
                                            "required": [
                                                "status"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "ok": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "ok"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Call not found"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/receive\/vapi": {
            "post": {
                "operationId": "calls.receiveVapi",
                "tags": [
                    "Calls"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "message": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "required": [
                                        "status"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid secret"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Call not found"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to create contact"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/{call}\/tool-events": {
            "get": {
                "operationId": "calls.toolEvents",
                "tags": [
                    "Calls"
                ],
                "parameters": [
                    {
                        "name": "call",
                        "in": "path",
                        "required": true,
                        "description": "The call ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/{call}\/change-outcome": {
            "patch": {
                "operationId": "calls.changeCallOutcome",
                "tags": [
                    "Calls"
                ],
                "parameters": [
                    {
                        "name": "call",
                        "in": "path",
                        "required": true,
                        "description": "The call ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "call_outcome": {
                                        "type": "string",
                                        "enum": [
                                            "interested",
                                            "not_interested",
                                            "voice_mail",
                                            "call_me_later",
                                            "do_not_call",
                                            "wrong_number",
                                            "no_user_response",
                                            "not_qualified",
                                            "burned_experience",
                                            "quick_hangup",
                                            "maybe_interested",
                                            "agent_issue",
                                            "no_answer",
                                            "failed",
                                            "audio_issue",
                                            "busy",
                                            "unknown_error"
                                        ]
                                    }
                                },
                                "required": [
                                    "call_outcome"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CallResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CallResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/receive\/twilio": {
            "post": {
                "operationId": "calls.receiveTwilio",
                "tags": [
                    "Calls"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "host": {
                                        "type": "string"
                                    },
                                    "agent_id": {
                                        "type": "string"
                                    },
                                    "call_id": {
                                        "type": "string"
                                    },
                                    "CallSid": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/byoc": {
            "post": {
                "operationId": "calls.receiveByoc",
                "tags": [
                    "Calls"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "CallSid": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/receive\/twilio-inbound": {
            "post": {
                "operationId": "calls.receiveTwilioInbound",
                "tags": [
                    "Calls"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "agent_id": {
                                        "type": "string"
                                    },
                                    "To": {
                                        "type": "string"
                                    },
                                    "From": {
                                        "type": "string"
                                    },
                                    "CallerCountry": {
                                        "type": "string"
                                    },
                                    "CallSid": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Failed to create call"
                                                }
                                            },
                                            "required": [
                                                "error"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "string",
                                                    "example": "Failed to create contact"
                                                }
                                            },
                                            "required": [
                                                "error"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Country not allowed"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Number not found"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/receive\/11labs-hangup": {
            "get": {
                "operationId": "calls.receive11LabsHangup",
                "tags": [
                    "Calls"
                ],
                "parameters": [
                    {
                        "name": "agent",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "required": [
                                        "status"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Call not found"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/receive\/openai-hangup": {
            "patch": {
                "operationId": "calls.receiveOpenAiHangup",
                "tags": [
                    "Calls"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "call_id": {
                                        "type": "string"
                                    },
                                    "reason": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "required": [
                                        "status"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/webhooks\/calls\/{call}\/transcription": {
            "patch": {
                "operationId": "calls.updateCallTranscription",
                "tags": [
                    "Calls"
                ],
                "parameters": [
                    {
                        "name": "call",
                        "in": "path",
                        "required": true,
                        "description": "The call ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "transcription": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "transcription"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    },
                                    "required": [
                                        "status"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    }
                }
            }
        },
        "\/v1\/voice\/calls": {
            "get": {
                "operationId": "calls.index",
                "tags": [
                    "Calls"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "voice_campaign_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "voice_campaign_send_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "agent_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "campaign",
                                "inbound",
                                "test",
                                "scheduled",
                                "retry"
                            ]
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "enum": [
                                "callOutcomeClassifierLogs"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "numbers",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `CallResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CallResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/calls\/stats": {
            "get": {
                "operationId": "calls.stats",
                "tags": [
                    "Calls"
                ],
                "parameters": [
                    {
                        "name": "voice_campaign_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "calls": {
                                                    "type": "integer"
                                                },
                                                "no_answer": {
                                                    "type": "integer"
                                                },
                                                "leads": {
                                                    "type": "integer"
                                                },
                                                "answered": {
                                                    "type": "integer"
                                                },
                                                "answer_machine": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "calls",
                                                "no_answer",
                                                "leads",
                                                "answered",
                                                "answer_machine"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/calls\/dashboard": {
            "get": {
                "operationId": "calls.dashboard",
                "tags": [
                    "Calls"
                ],
                "parameters": [
                    {
                        "name": "from_date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agent_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "voice_campaign_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "total_calls": {
                                                    "type": "integer"
                                                },
                                                "answered_calls": {
                                                    "type": "integer"
                                                },
                                                "picked_up_calls": {
                                                    "type": "integer"
                                                },
                                                "leads": {
                                                    "type": "integer"
                                                },
                                                "sales": {
                                                    "type": "integer"
                                                },
                                                "answer_machines": {
                                                    "type": "integer"
                                                },
                                                "total_cost": {
                                                    "type": "number"
                                                },
                                                "total_duration_sec": {
                                                    "type": "integer"
                                                },
                                                "average_call_duration": {
                                                    "type": "number"
                                                },
                                                "answer_rate": {
                                                    "type": "number"
                                                },
                                                "lead_rate": {
                                                    "type": "number"
                                                },
                                                "sales_rate": {
                                                    "type": "number"
                                                },
                                                "hourly_breakdown": {
                                                    "type": "array",
                                                    "items": {}
                                                },
                                                "daily_breakdown": {
                                                    "type": "array",
                                                    "items": {}
                                                }
                                            },
                                            "required": [
                                                "total_calls",
                                                "answered_calls",
                                                "picked_up_calls",
                                                "leads",
                                                "sales",
                                                "answer_machines",
                                                "total_cost",
                                                "total_duration_sec",
                                                "average_call_duration",
                                                "answer_rate",
                                                "lead_rate",
                                                "sales_rate",
                                                "hourly_breakdown",
                                                "daily_breakdown"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/calls\/ai-filter": {
            "post": {
                "operationId": "calls.aiFilter",
                "tags": [
                    "Calls"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "query": {
                                        "type": "string",
                                        "maxLength": 1000
                                    }
                                },
                                "required": [
                                    "query"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to generate filter. Please try rephrasing your request."
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "filter_code": {
                                            "type": "string"
                                        },
                                        "query": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "filter_code",
                                        "query"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/calls\/analyses": {
            "get": {
                "operationId": "calls.callAnalyses",
                "tags": [
                    "Calls"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "team_id": {
                                                        "type": "string"
                                                    },
                                                    "meta": {
                                                        "type": "object",
                                                        "properties": {
                                                            "insights": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "summary": {
                                                                        "type": "string"
                                                                    },
                                                                    "trends": {
                                                                        "type": "string"
                                                                    },
                                                                    "anomalies": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "summary",
                                                                    "trends",
                                                                    "anomalies"
                                                                ]
                                                            },
                                                            "agents_performance": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "agent_id": {
                                                                            "type": "string"
                                                                        },
                                                                        "voice_id": {
                                                                            "type": "string"
                                                                        },
                                                                        "performance_score": {
                                                                            "type": "number"
                                                                        },
                                                                        "conversion_rate": {
                                                                            "type": "number"
                                                                        },
                                                                        "average_call_duration": {
                                                                            "type": "number"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "agent_id",
                                                                        "voice_id",
                                                                        "performance_score",
                                                                        "conversion_rate",
                                                                        "average_call_duration"
                                                                    ]
                                                                }
                                                            },
                                                            "suggested_agents": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "agent_id": {
                                                                            "type": "string"
                                                                        },
                                                                        "new_agent_name": {
                                                                            "type": "string"
                                                                        },
                                                                        "voice_speed": {
                                                                            "type": "number"
                                                                        },
                                                                        "voice_id": {
                                                                            "type": "string"
                                                                        },
                                                                        "agent_speak_first": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "background_noise": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "prompt": {
                                                                            "type": "string"
                                                                        },
                                                                        "welcome_messages": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "reasons": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "agent_id",
                                                                        "new_agent_name",
                                                                        "voice_speed",
                                                                        "voice_id",
                                                                        "agent_speak_first",
                                                                        "background_noise",
                                                                        "prompt",
                                                                        "welcome_messages",
                                                                        "reasons"
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "required": [
                                                            "insights",
                                                            "agents_performance",
                                                            "suggested_agents"
                                                        ]
                                                    },
                                                    "created_at": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "team_id",
                                                    "meta",
                                                    "created_at"
                                                ]
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/voice\/agents\/{call}\/events": {
            "get": {
                "operationId": "calls.callEventsIndex",
                "tags": [
                    "Calls"
                ],
                "parameters": [
                    {
                        "name": "call",
                        "in": "path",
                        "required": true,
                        "description": "The call ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "campaign_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agent_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "events": {
                                                            "type": "string"
                                                        },
                                                        "chat": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "agent",
                                                                            "user"
                                                                        ]
                                                                    },
                                                                    "text": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type",
                                                                    "text"
                                                                ]
                                                            }
                                                        }
                                                    },
                                                    "required": [
                                                        "events",
                                                        "chat"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "events": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "minItems": 0,
                                                            "maxItems": 0,
                                                            "additionalItems": false
                                                        },
                                                        "chat": {
                                                            "type": "null",
                                                            "description": "todo?"
                                                        }
                                                    },
                                                    "required": [
                                                        "events",
                                                        "chat"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "data"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/audience\/companies": {
            "get": {
                "operationId": "audience.companies.index",
                "tags": [
                    "Companies"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "show_balance",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `CompanyResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CompanyResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "audience.companies.store",
                "tags": [
                    "Companies"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "overdraft_enabled": {
                                        "type": "boolean"
                                    },
                                    "overdraft_limit": {
                                        "type": "integer",
                                        "minimum": 0
                                    }
                                },
                                "required": [
                                    "name",
                                    "overdraft_enabled"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`CompanyResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CompanyResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/audience\/companies\/{company}": {
            "put": {
                "operationId": "audience.companies.update",
                "tags": [
                    "Companies"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "required": true,
                        "description": "The company ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "overdraft_enabled": {
                                        "type": "boolean"
                                    },
                                    "overdraft_limit": {
                                        "type": "integer",
                                        "minimum": 0
                                    }
                                },
                                "required": [
                                    "name",
                                    "overdraft_enabled"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CompanyResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CompanyResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/audience\/companies\/{company}\/balance": {
            "get": {
                "operationId": "companies.checkBalance",
                "tags": [
                    "Companies"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "required": true,
                        "description": "The company ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "client_balance": {
                                            "type": "string"
                                        },
                                        "vendor_balance": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "client_balance",
                                        "vendor_balance"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "companies.addBalance",
                "tags": [
                    "Companies"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "required": true,
                        "description": "The company ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "minimum": 1
                                    },
                                    "balance_type": {
                                        "type": "string",
                                        "enum": [
                                            "client",
                                            "vendor"
                                        ]
                                    },
                                    "show_balance": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "amount",
                                    "balance_type"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CompanyResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CompanyResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/audience\/companies\/{company}\/balance-checker": {
            "post": {
                "operationId": "companies.balanceChecker",
                "tags": [
                    "Companies"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "required": true,
                        "description": "The company ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`BalanceCheckerDataRequest`",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BalanceCheckerDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CompanyResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CompanyResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/audience\/companies\/{company}\/balance-checker-test": {
            "post": {
                "operationId": "companies.balanceCheckerTest",
                "tags": [
                    "Companies"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "required": true,
                        "description": "The company ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`BalanceCheckerDataRequest`",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/BalanceCheckerDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`BalanceCheckerResponseData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/BalanceCheckerResponseData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/audience\/companies\/{company}\/balance-sync": {
            "post": {
                "operationId": "companies.syncPlatformBalance",
                "tags": [
                    "Companies"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "required": true,
                        "description": "The company ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CompanyResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CompanyResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/audience\/companies\/validate-custom-request": {
            "post": {
                "operationId": "companies.validateCustomAuth",
                "tags": [
                    "Companies"
                ],
                "requestBody": {
                    "description": "`CustomAuthDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CustomAuthDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "nothing to do here, just validate the data"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/audience\/companies\/balance\/summary": {
            "post": {
                "operationId": "companies.balanceSummary",
                "tags": [
                    "Companies"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sortModel": {
                                        "type": "array",
                                        "example": [
                                            {
                                                "sort": "asc",
                                                "colId": "log_date"
                                            }
                                        ],
                                        "prefixItems": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "colId": {
                                                        "type": "string"
                                                    },
                                                    "sort": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "colId",
                                                    "sort"
                                                ]
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "filterModel": {
                                        "type": "array",
                                        "example": {
                                            "campaign_name": {
                                                "filterType": "text",
                                                "type": "contains",
                                                "filter": "multi"
                                            }
                                        },
                                        "prefixItems": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "colId": {
                                                        "type": "object",
                                                        "properties": {
                                                            "filterType": {
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "filter": {}
                                                        },
                                                        "required": [
                                                            "filterType",
                                                            "type",
                                                            "filter"
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "colId"
                                                ]
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "rowGroupCols": {
                                        "type": "array",
                                        "example": [
                                            {
                                                "id": "campaign_name",
                                                "displayName": "Campaign_name",
                                                "field": "campaign_name"
                                            }
                                        ],
                                        "prefixItems": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "displayName": {
                                                        "type": "string"
                                                    },
                                                    "field": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "displayName",
                                                    "field"
                                                ]
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "groupKeys": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "startRow": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "endRow": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "groupByAll": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "endRow"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DataGridRouteCompanyBalanceResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/audience\/companies\/{company}\/toggle-active": {
            "patch": {
                "operationId": "companies.toggleActiveState",
                "tags": [
                    "Companies"
                ],
                "parameters": [
                    {
                        "name": "company",
                        "in": "path",
                        "required": true,
                        "description": "The company ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CompanyResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CompanyResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/contacts\/upsert": {
            "post": {
                "operationId": "contacts.upsertContacts",
                "tags": [
                    "Contacts"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "webhook_request_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "contacts": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "contact_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "phone_normalized": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "email_normalized": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "'contacts.*.phone_is_good' => 'nullable|numeric',\n'contacts.*.phone_is_good_reason' => 'nullable|numeric',"
                                                },
                                                "email_is_good": {
                                                    "type": [
                                                        "number",
                                                        "null"
                                                    ]
                                                },
                                                "email_is_good_reason": {
                                                    "type": [
                                                        "number",
                                                        "null"
                                                    ]
                                                },
                                                "name": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "description": "ISO 3166-1 alpha-2 country code"
                                                },
                                                "state_id": {
                                                    "type": [
                                                        "number",
                                                        "null"
                                                    ]
                                                },
                                                "state_id_reason": {
                                                    "type": [
                                                        "number",
                                                        "null"
                                                    ]
                                                },
                                                "custom_fields": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "description": "if type is set, custom field will be created if it doesn't exist",
                                                                "$ref": "#\/components\/schemas\/CustomFieldTypeEnum"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "value"
                                                        ]
                                                    }
                                                },
                                                "network_brand": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "'contacts.*.custom1_str' => 'nullable|string',\n'contacts.*.custom2_str' => 'nullable|string',\n'contacts.*.custom3_str' => 'nullable|string',\n'contacts.*.custom4_str' => 'nullable|string',\n'contacts.*.custom5_str' => 'nullable|string',\n'contacts.*.custom1_int' => 'nullable|numeric',\n'contacts.*.custom2_int' => 'nullable|numeric',\n'contacts.*.custom3_int' => 'nullable|numeric',\n'contacts.*.custom4_int' => 'nullable|numeric',\n'contacts.*.custom5_int' => 'nullable|numeric',\n'contacts.*.custom1_dec' => 'nullable|numeric',\n'contacts.*.custom2_dec' => 'nullable|numeric',\n'contacts.*.custom1_datetime' => 'nullable|string',\n'contacts.*.custom2_datetime' => 'nullable|string',\n'contacts.*.custom3_datetime' => 'nullable|string',\n'contacts.*.custom4_datetime' => 'nullable|string',\n'contacts.*.custom5_datetime' => 'nullable|string',"
                                                },
                                                "mcc": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "mnc": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "foreign_id": {
                                                    "type": "string"
                                                },
                                                "raw_response": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "'contacts.*.network_brand_id' => 'sometimes|string',"
                                                }
                                            },
                                            "required": [
                                                "country"
                                            ]
                                        },
                                        "maxItems": 1000
                                    }
                                },
                                "required": [
                                    "contacts"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Job dispatched"
                                        },
                                        "jobs_count": {
                                            "type": "string"
                                        },
                                        "automation_run_id": {
                                            "type": "string"
                                        },
                                        "webhook_request_id": {
                                            "type": "string"
                                        },
                                        "contacts_count": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "jobs_count",
                                        "automation_run_id",
                                        "webhook_request_id",
                                        "contacts_count"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/audience\/contacts": {
            "get": {
                "operationId": "contacts.index",
                "description": "Returns also pagination data, not shown in docs",
                "summary": "contacts.index",
                "tags": [
                    "Contacts"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_from",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_to",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "date_created"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "stats"
                                ]
                            }
                        }
                    },
                    {
                        "name": "numbers",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/audience\/contacts\/report": {
            "post": {
                "operationId": "contacts.report",
                "tags": [
                    "Contacts"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sortModel": {
                                        "type": "array",
                                        "example": [
                                            {
                                                "sort": "asc",
                                                "colId": "updated_datetime"
                                            }
                                        ],
                                        "prefixItems": [
                                            {
                                                "$ref": "#\/components\/schemas\/SortModelData"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "filterModel": {
                                        "type": "array",
                                        "example": "{\"is_sent\":{\"filterType\":\"number\",\"type\":\"greaterThan\",\"filter\":5}}\n\nnote that it needs to be col_id: {FilterModel}, PHP doesn't support this kind of description.",
                                        "prefixItems": [
                                            {
                                                "type": "array",
                                                "prefixItems": [
                                                    {
                                                        "$ref": "#\/components\/schemas\/FilterModelData"
                                                    }
                                                ],
                                                "minItems": 1,
                                                "maxItems": 1,
                                                "additionalItems": false
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "rowGroupCols": {
                                        "type": "array",
                                        "example": [
                                            {
                                                "id": "campaign_id",
                                                "displayName": "Campaign_Id",
                                                "field": "campaign_id"
                                            }
                                        ],
                                        "prefixItems": [
                                            {
                                                "$ref": "#\/components\/schemas\/RowGroupColsData"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "groupKeys": {
                                        "type": "array",
                                        "example": "[\"campaign_uuid\"]\nNot the column type, it's a filter of the query",
                                        "prefixItems": [
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "startRow": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "endRow": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "selectCols": {
                                        "type": "array",
                                        "prefixItems": [
                                            {
                                                "$ref": "#\/components\/schemas\/ContactSmsFieldEnum"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "groupByAll": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string",
                                                    "description": "'from' => $this->firstItem(),"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "description": "'to' => $this->lastItem(),"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/audience\/contacts\/dashboard": {
            "get": {
                "operationId": "contacts.dashboard",
                "tags": [
                    "Contacts"
                ],
                "parameters": [
                    {
                        "name": "from_date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "contacts_count": {
                                                    "type": "integer"
                                                },
                                                "contacts_per_day": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "call_outcomes": {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "calls_per_contact": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "contacts_count",
                                                "contacts_per_day",
                                                "call_outcomes",
                                                "calls_per_contact"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/audience\/tags": {
            "get": {
                "operationId": "contacts.tags",
                "description": "Returns all possible tags for contacts",
                "summary": "contacts.tags",
                "tags": [
                    "Contacts"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/audience\/contacts\/tags": {
            "post": {
                "operationId": "contacts.createTags",
                "tags": [
                    "Contacts"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tags": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "truncate": {
                                        "type": "boolean"
                                    },
                                    "contact_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                },
                                "required": [
                                    "contact_ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tags added"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/webhooks\/conversion-pixel": {
            "post": {
                "operationId": "webhooks.conversion-pixel",
                "tags": [
                    "ConversionPixel"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "object_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "phone_number": {
                                        "type": "string"
                                    },
                                    "team_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "object_type": {
                                        "type": "string",
                                        "enum": [
                                            "sms_campaign",
                                            "sms_api",
                                            "voice_call"
                                        ]
                                    },
                                    "event_type": {
                                        "type": "string",
                                        "enum": [
                                            "click",
                                            "lead",
                                            "sale"
                                        ]
                                    },
                                    "ip": {
                                        "type": "string"
                                    },
                                    "user_agent": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "country_code": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "minLength": 2,
                                        "maxLength": 2
                                    },
                                    "event_profit": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    },
                                    "is_lead": {
                                        "type": "boolean"
                                    },
                                    "is_sale": {
                                        "type": "boolean"
                                    },
                                    "sale_amount": {
                                        "type": [
                                            "number",
                                            "null"
                                        ],
                                        "minimum": 0
                                    }
                                },
                                "required": [
                                    "object_type",
                                    "event_type"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`ConversionPixelResponseData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/ConversionPixelResponseData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/conversion-pixels\/reports": {
            "post": {
                "operationId": "conversionPixel.reports",
                "tags": [
                    "ConversionPixel"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sortModel": {
                                        "type": "array",
                                        "example": [
                                            {
                                                "sort": "asc",
                                                "colId": "updated_datetime"
                                            }
                                        ],
                                        "prefixItems": [
                                            {
                                                "$ref": "#\/components\/schemas\/App.Domain.Campaigns.Data.Reports.Sendlogs.SortModelData"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "filterModel": {
                                        "type": "array",
                                        "example": "{\"is_sent\":{\"filterType\":\"number\",\"type\":\"greaterThan\",\"filter\":5}}\n\nnote that it needs to be col_id: {FilterModel}, PHP doesn't support this kind of description.",
                                        "prefixItems": [
                                            {
                                                "type": "array",
                                                "prefixItems": [
                                                    {
                                                        "$ref": "#\/components\/schemas\/FilterModelData"
                                                    }
                                                ],
                                                "minItems": 1,
                                                "maxItems": 1,
                                                "additionalItems": false
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "rowGroupCols": {
                                        "type": "array",
                                        "example": [
                                            {
                                                "id": "campaign_id",
                                                "displayName": "Campaign_Id",
                                                "field": "campaign_id"
                                            }
                                        ],
                                        "prefixItems": [
                                            {
                                                "$ref": "#\/components\/schemas\/ApiSendlogRowGroupColsData"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "selectCols": {
                                        "type": "array",
                                        "example": "[\"country_id\"]\nWill make a select query with only the columns in the array, if not provided default columns will be selected",
                                        "prefixItems": [
                                            {
                                                "$ref": "#\/components\/schemas\/ConversionPixelFieldEnum"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "groupKeys": {
                                        "type": "array",
                                        "example": "[\"campaign_uuid\"]\nNot the column type, it's a filter of the query",
                                        "prefixItems": [
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "startRow": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "endRow": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "groupByAll": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DataGridConversionPixelResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/countries": {
            "get": {
                "operationId": "countries.index",
                "tags": [
                    "Countries"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `CountryResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CountryResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/billing\/crypto-transactions": {
            "post": {
                "operationId": "billing.crypto-transactions.store",
                "tags": [
                    "CryptoTransactions"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "transaction_hash": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "transaction_hash"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Crypto transaction created"
                                        },
                                        "transaction_id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "transaction_id"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/custom-fields": {
            "get": {
                "operationId": "custom-fields.index",
                "tags": [
                    "CustomFields"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `CustomFieldResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/CustomFieldResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "custom-fields.store",
                "tags": [
                    "CustomFields"
                ],
                "requestBody": {
                    "description": "`CustomFieldDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/CustomFieldDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CustomFieldResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "errors": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "array",
                                                            "prefixItems": [
                                                                {
                                                                    "type": "string"
                                                                }
                                                            ],
                                                            "minItems": 1,
                                                            "maxItems": 1,
                                                            "additionalItems": false
                                                        }
                                                    },
                                                    "required": [
                                                        "type"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "errors"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "errors": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "array",
                                                            "prefixItems": [
                                                                {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "Please contact support for boolean type",
                                                                        "Invalid field type"
                                                                    ]
                                                                }
                                                            ],
                                                            "minItems": 1,
                                                            "maxItems": 1,
                                                            "additionalItems": false
                                                        }
                                                    },
                                                    "required": [
                                                        "type"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "errors"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "errors": {
                                                    "type": "object",
                                                    "properties": {
                                                        "key": {
                                                            "type": "array",
                                                            "prefixItems": [
                                                                {
                                                                    "type": "string",
                                                                    "example": "Field key already exists"
                                                                }
                                                            ],
                                                            "minItems": 1,
                                                            "maxItems": 1,
                                                            "additionalItems": false
                                                        }
                                                    },
                                                    "required": [
                                                        "key"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "errors"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/custom-fields\/{customField}": {
            "put": {
                "operationId": "custom-fields.update",
                "tags": [
                    "CustomFields"
                ],
                "parameters": [
                    {
                        "name": "customField",
                        "in": "path",
                        "required": true,
                        "description": "The custom field ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "key": {
                                        "type": "string",
                                        "enum": [
                                            "custom1_str",
                                            "custom2_str",
                                            "custom3_str",
                                            "custom4_str",
                                            "custom5_str",
                                            "custom1_int",
                                            "custom2_int",
                                            "custom3_int",
                                            "custom4_int",
                                            "custom5_int",
                                            "custom1_dec",
                                            "custom2_dec",
                                            "custom1_datetime",
                                            "custom2_datetime",
                                            "custom3_datetime",
                                            "custom4_datetime",
                                            "custom5_datetime",
                                            "foreign_id"
                                        ],
                                        "maxLength": 255
                                    }
                                },
                                "required": [
                                    "name",
                                    "key"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CustomFieldResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CustomFieldResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "custom-fields.destroy",
                "tags": [
                    "CustomFields"
                ],
                "parameters": [
                    {
                        "name": "customField",
                        "in": "path",
                        "required": true,
                        "description": "The custom field ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/data-files": {
            "get": {
                "operationId": "dataFiles.index",
                "tags": [
                    "DataFiles"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "processing",
                                "completed",
                                "failed"
                            ]
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `DataFileResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DataFileResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/data-files\/{dataFile}\/sample": {
            "get": {
                "operationId": "dataFiles.sample",
                "tags": [
                    "DataFiles"
                ],
                "parameters": [
                    {
                        "name": "dataFile",
                        "in": "path",
                        "required": true,
                        "description": "The data file ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`SampleRowsResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SampleRowsResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/data-files\/contacts\/upload-file": {
            "post": {
                "operationId": "dataFiles.uploadContacts",
                "tags": [
                    "DataFiles"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart\/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "contentMediaType": "application\/octet-stream",
                                        "maxLength": 51200
                                    }
                                },
                                "required": [
                                    "file"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`DataFileResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DataFileResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/data-files\/{dataFile}\/import": {
            "post": {
                "operationId": "dataFiles.startImport",
                "tags": [
                    "DataFiles"
                ],
                "parameters": [
                    {
                        "name": "dataFile",
                        "in": "path",
                        "required": true,
                        "description": "The data file ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "fixed_country_id": {
                                        "type": "number"
                                    },
                                    "fixed_network_brand": {
                                        "type": "string"
                                    },
                                    "columns": {
                                        "type": "object",
                                        "properties": {
                                            "number": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "country": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "email": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "name": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom1_str": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom2_str": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom3_str": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom4_str": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom5_str": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom1_int": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom2_int": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom3_int": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom4_int": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom5_int": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom1_dec": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom2_dec": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom1_datetime": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom2_datetime": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom3_datetime": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom4_datetime": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "custom5_datetime": {
                                                "type": "number",
                                                "minimum": 0
                                            },
                                            "foreign_id": {
                                                "type": "string"
                                            },
                                            "timezone": {
                                                "type": "number",
                                                "minimum": 0
                                            }
                                        }
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "columns"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`DataFileResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DataFileResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/domains\/accounts": {
            "get": {
                "operationId": "domains.accounts.index",
                "tags": [
                    "DomainAccounts"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `DomainAccountData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DomainAccountData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "domains.accounts.store",
                "tags": [
                    "DomainAccounts"
                ],
                "requestBody": {
                    "description": "`DomainAccountDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DomainAccountDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DomainAccountData"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "properties": {
                                                "meta.apiKey": {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "string",
                                                            "example": "Invalid credentials, failed to connect to Domain provider"
                                                        }
                                                    ],
                                                    "minItems": 1,
                                                    "maxItems": 1,
                                                    "additionalItems": false
                                                }
                                            },
                                            "required": [
                                                "meta.apiKey"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/domains\/accounts\/{account}": {
            "get": {
                "operationId": "domains.accounts.show",
                "tags": [
                    "DomainAccounts"
                ],
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "required": true,
                        "description": "The account ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DomainAccountData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainAccountData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "domains.accounts.update",
                "tags": [
                    "DomainAccounts"
                ],
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`DomainAccountDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DomainAccountDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`DomainAccountData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainAccountData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "domains.accounts.destroy",
                "tags": [
                    "DomainAccounts"
                ],
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "required": true,
                        "description": "The account ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/domains\/accounts\/{account}\/tlds": {
            "get": {
                "operationId": "domainAccounts.fetchTLDs",
                "tags": [
                    "DomainAccounts"
                ],
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "required": true,
                        "description": "The account ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `TldResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/TldResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/domains\/accounts\/platform\/tlds": {
            "get": {
                "operationId": "domainAccounts.platformTlds",
                "tags": [
                    "DomainAccounts"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `TldResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/TldResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "errors": {
                                                    "type": "string",
                                                    "example": "No platform account found"
                                                }
                                            },
                                            "required": [
                                                "errors"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "errors": {
                                                    "type": "string",
                                                    "example": "No platform plan found"
                                                }
                                            },
                                            "required": [
                                                "errors"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/domains\/plans\/{domainPlan}\/rules": {
            "get": {
                "operationId": "domains.rules.index",
                "tags": [
                    "DomainPlanRules"
                ],
                "parameters": [
                    {
                        "name": "domainPlan",
                        "in": "path",
                        "required": true,
                        "description": "The domain plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `DomainPlanRuleData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DomainPlanRuleData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "domains.rules.store",
                "tags": [
                    "DomainPlanRules"
                ],
                "parameters": [
                    {
                        "name": "domainPlan",
                        "in": "path",
                        "required": true,
                        "description": "The domain plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`DomainPlanRuleDataRequest`",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DomainPlanRuleDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`DomainPlanRuleData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainPlanRuleData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/domains\/plans\/{domainPlan}\/rules\/{rule}": {
            "get": {
                "operationId": "domains.rules.show",
                "tags": [
                    "DomainPlanRules"
                ],
                "parameters": [
                    {
                        "name": "domainPlan",
                        "in": "path",
                        "required": true,
                        "description": "The domain plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "rule",
                        "in": "path",
                        "required": true,
                        "description": "The rule ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DomainPlanRuleData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainPlanRuleData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "domains.rules.update",
                "tags": [
                    "DomainPlanRules"
                ],
                "parameters": [
                    {
                        "name": "domainPlan",
                        "in": "path",
                        "required": true,
                        "description": "The domain plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "rule",
                        "in": "path",
                        "required": true,
                        "description": "The rule ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`DomainPlanRuleDataRequest`",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DomainPlanRuleDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`DomainPlanRuleData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainPlanRuleData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "domains.rules.destroy",
                "tags": [
                    "DomainPlanRules"
                ],
                "parameters": [
                    {
                        "name": "domainPlan",
                        "in": "path",
                        "required": true,
                        "description": "The domain plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "rule",
                        "in": "path",
                        "required": true,
                        "description": "The rule ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/domains\/plans": {
            "get": {
                "operationId": "domains.plans.index",
                "tags": [
                    "DomainPlans"
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `DomainPlanData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DomainPlanData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/domains\/plans\/{plan}": {
            "get": {
                "operationId": "domains.plans.show",
                "tags": [
                    "DomainPlans"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "$plan->load('domainAccounts');\n\n\n\n`DomainPlanData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainPlanData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "domains.plans.update",
                "tags": [
                    "DomainPlans"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`DomainPlanDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DomainPlanDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`DomainPlanData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainPlanData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/management\/domains\/proxies": {
            "get": {
                "operationId": "management.domains.proxies.index",
                "tags": [
                    "DomainProxies"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `DomainProxyResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DomainProxyResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "management.domains.proxies.store",
                "tags": [
                    "DomainProxies"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "ip": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "ip"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`DomainProxyResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainProxyResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/management\/domains\/proxies\/{proxy}": {
            "get": {
                "operationId": "management.domains.proxies.show",
                "tags": [
                    "DomainProxies"
                ],
                "parameters": [
                    {
                        "name": "proxy",
                        "in": "path",
                        "required": true,
                        "description": "The proxy ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`DomainProxyResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainProxyResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "management.domains.proxies.destroy",
                "tags": [
                    "DomainProxies"
                ],
                "parameters": [
                    {
                        "name": "proxy",
                        "in": "path",
                        "required": true,
                        "description": "The proxy ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/domains": {
            "get": {
                "operationId": "domains.index",
                "tags": [
                    "Domains"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `DomainData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DomainData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/domains\/{domain}": {
            "put": {
                "operationId": "domains.update",
                "tags": [
                    "Domains"
                ],
                "parameters": [
                    {
                        "name": "domain",
                        "in": "path",
                        "required": true,
                        "description": "The domain ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "is_active"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`DomainData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Domain is not ready."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/domains\/platform": {
            "get": {
                "operationId": "domains.platform",
                "tags": [
                    "Domains"
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `PlatformDomainData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/PlatformDomainData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/domains\/purchase": {
            "post": {
                "operationId": "domains.purchase",
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "domain_name": {
                                        "type": "string"
                                    },
                                    "domain_tld_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "domain_account_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "required": [
                                    "domain_name",
                                    "domain_tld_id",
                                    "domain_account_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`DomainData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Domain purchase failed."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Domain account not found."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/domains\/connect": {
            "post": {
                "operationId": "domains.connect",
                "tags": [
                    "Domains"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "domain_name": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "domain_name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`DomainData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/DomainData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Domain health check failed."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/email\/templates": {
            "get": {
                "operationId": "email.templates.index",
                "tags": [
                    "EmailCampaignTemplates"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "email.templates.store",
                "tags": [
                    "EmailCampaignTemplates"
                ],
                "requestBody": {
                    "description": "`EmailCampaignTemplateDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/EmailCampaignTemplateDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/EmailCampaignTemplateData"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/email\/templates\/{template}": {
            "get": {
                "operationId": "email.templates.show",
                "tags": [
                    "EmailCampaignTemplates"
                ],
                "parameters": [
                    {
                        "name": "template",
                        "in": "path",
                        "required": true,
                        "description": "The template ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/EmailCampaignTemplate"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "email.templates.update",
                "tags": [
                    "EmailCampaignTemplates"
                ],
                "parameters": [
                    {
                        "name": "template",
                        "in": "path",
                        "required": true,
                        "description": "The template ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`EmailCampaignTemplateDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/EmailCampaignTemplateDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/EmailCampaignTemplate"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "email.templates.destroy",
                "tags": [
                    "EmailCampaignTemplates"
                ],
                "parameters": [
                    {
                        "name": "template",
                        "in": "path",
                        "required": true,
                        "description": "The template ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "null"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/email\/verification-notification": {
            "post": {
                "operationId": "verification.send",
                "tags": [
                    "EmailVerificationNotification"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/enrichment\/mnp": {
            "get": {
                "operationId": "enrichment.index",
                "tags": [
                    "EnrichmentMnp"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `LookupCheckResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/LookupCheckResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "enrichment.start-check",
                "tags": [
                    "EnrichmentMnp"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filterModel": {
                                        "type": "array",
                                        "example": {
                                            "country_id": {
                                                "filterType": "number",
                                                "type": "equals",
                                                "filter": 225
                                            }
                                        },
                                        "prefixItems": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "colId": {
                                                        "type": "object",
                                                        "properties": {
                                                            "filterType": {
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "filter": {}
                                                        },
                                                        "required": [
                                                            "filterType",
                                                            "type",
                                                            "filter"
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "colId"
                                                ]
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "amount": {
                                        "type": "integer",
                                        "minimum": 1
                                    }
                                },
                                "required": [
                                    "amount"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Lookup queued and will be started soon"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/enrichment\/mnp\/calc-contacts-count": {
            "post": {
                "operationId": "enrichment.calc-contacts-count",
                "tags": [
                    "EnrichmentMnp"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filterModel": {
                                        "type": "array",
                                        "example": {
                                            "country_id": {
                                                "filterType": "number",
                                                "type": "equals",
                                                "filter": 225
                                            }
                                        },
                                        "prefixItems": [
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "colId": {
                                                        "type": "object",
                                                        "properties": {
                                                            "filterType": {
                                                                "type": "string"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "filter": {}
                                                        },
                                                        "required": [
                                                            "filterType",
                                                            "type",
                                                            "filter"
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "colId"
                                                ]
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "amount": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "amount"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/enrichment\/mnp\/{check}\/requests": {
            "get": {
                "operationId": "enrichment.requests-list",
                "tags": [
                    "EnrichmentMnp"
                ],
                "parameters": [
                    {
                        "name": "check",
                        "in": "path",
                        "required": true,
                        "description": "The check ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "startRow",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "endRow",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "enum": [
                                "result"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string",
                                                    "description": "'from' => $this->firstItem(),"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "description": "'to' => $this->lastItem(),"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/integrations": {
            "get": {
                "operationId": "integrations.index",
                "tags": [
                    "Integrations"
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `IntegrationData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/IntegrationData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/integrations\/vendors": {
            "get": {
                "operationId": "integrations.vendors",
                "tags": [
                    "Integrations"
                ]
            }
        },
        "\/v1\/integrations\/{integration}\/activate": {
            "post": {
                "operationId": "integrations.activate",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "integration",
                        "in": "path",
                        "required": true,
                        "description": "The integration ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`IntegrationTeamMetaDataRequest`",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/IntegrationTeamMetaDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Integration activated"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/integrations\/{integration}\/disable": {
            "post": {
                "operationId": "integrations.disable",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "integration",
                        "in": "path",
                        "required": true,
                        "description": "The integration ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Integration disabled"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/integrations\/{integration}\/requests": {
            "post": {
                "operationId": "integrations.requests",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "integration",
                        "in": "path",
                        "required": true,
                        "description": "The integration ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PaginatedRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Array of `IntegrationRequestResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/IntegrationRequestResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/integrations\/{integration}\/billings": {
            "post": {
                "operationId": "integrations.billings",
                "tags": [
                    "Integrations"
                ],
                "parameters": [
                    {
                        "name": "integration",
                        "in": "path",
                        "required": true,
                        "description": "The integration ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PaginatedRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/IntegrationBillingResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/public\/integrations": {
            "get": {
                "operationId": "integrations.public",
                "tags": [
                    "Integrations"
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `IntegrationData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/IntegrationData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/management\/live-phones-sms\/action-logs": {
            "get": {
                "operationId": "management.live-phones-sms.action-logs",
                "tags": [
                    "LivePhoneSms"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "live_phone_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "sms_route_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "minItems": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `LivePhoneActionLogResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/LivePhoneActionLogResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/management\/live-phones-sms": {
            "get": {
                "operationId": "management.live-phones-sms.index",
                "tags": [
                    "LivePhoneSms"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "live_phone_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "network_brand_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "manual",
                                "auto"
                            ]
                        }
                    },
                    {
                        "name": "time_filter",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "12h",
                                "24h",
                                "72h",
                                "all"
                            ]
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "country_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    {
                        "name": "network_brand_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "sms_route_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `LivePhoneSmsResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/LivePhoneSmsResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/management\/live-phones-sms\/{live_phones_sm}": {
            "get": {
                "operationId": "management.live-phones-sms.show",
                "tags": [
                    "LivePhoneSms"
                ],
                "parameters": [
                    {
                        "name": "live_phones_sm",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`LivePhoneSmsResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/LivePhoneSmsResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/management\/live-phones-sms\/send": {
            "post": {
                "operationId": "management.live-phones-sms.send",
                "tags": [
                    "LivePhoneSms"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phone_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "minItems": 1
                                    },
                                    "message": {
                                        "type": "string"
                                    },
                                    "sender_id": {
                                        "type": "string"
                                    },
                                    "sms_route_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "phone_ids",
                                    "message",
                                    "sender_id",
                                    "sms_route_ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/management\/live-phone-status-logs": {
            "get": {
                "operationId": "management.live-phone-status-logs.index",
                "summary": "Display a listing of the status logs",
                "tags": [
                    "LivePhoneStatusLogs"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "phone_number",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "live_phone_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/webhooks\/live-phone": {
            "post": {
                "operationId": "webhooks.live-phone",
                "summary": "Handle webhook requests from phones\nRoutes to the appropriate handler based on the request type",
                "tags": [
                    "LivePhoneWebhook"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "ping",
                                            "sms"
                                        ]
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "sms_id": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "sms_id"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "updated_count": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "created_count": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "updated_count",
                                                "created_count"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No pending SMS found"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/management\/live-phones": {
            "get": {
                "operationId": "management.live-phones.index",
                "tags": [
                    "LivePhones"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `LivePhoneResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/LivePhoneResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "management.live-phones.store",
                "tags": [
                    "LivePhones"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phone_number": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "network_brand_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "required": [
                                    "phone_number",
                                    "country_id",
                                    "network_brand_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`LivePhoneResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/LivePhoneResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/management\/live-phones\/{livePhone}": {
            "get": {
                "operationId": "management.live-phones.show",
                "tags": [
                    "LivePhones"
                ],
                "parameters": [
                    {
                        "name": "livePhone",
                        "in": "path",
                        "required": true,
                        "description": "The live phone ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`LivePhoneResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/LivePhoneResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "management.live-phones.update",
                "tags": [
                    "LivePhones"
                ],
                "parameters": [
                    {
                        "name": "livePhone",
                        "in": "path",
                        "required": true,
                        "description": "The live phone ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "phone_number": {
                                        "type": "string"
                                    },
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "network_brand_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "phone_number",
                                    "country_id",
                                    "network_brand_id",
                                    "is_active"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`LivePhoneResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/LivePhoneResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "management.live-phones.destroy",
                "tags": [
                    "LivePhones"
                ],
                "parameters": [
                    {
                        "name": "livePhone",
                        "in": "path",
                        "required": true,
                        "description": "The live phone ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/networks": {
            "get": {
                "operationId": "sms.routing.networks.index",
                "tags": [
                    "MobileNetworks"
                ],
                "parameters": [
                    {
                        "name": "filter_country_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter_network_brand_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "show_empty_brand_values",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `MobileNetworkResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/MobileNetworkResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/network-brands": {
            "get": {
                "operationId": "sms.routing.network-brands.index",
                "tags": [
                    "NetworkBrands"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `NetworkBrandResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/NetworkBrandResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/reset-password": {
            "post": {
                "operationId": "password.store",
                "tags": [
                    "NewPassword"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/voice\/numbers": {
            "get": {
                "operationId": "number.index",
                "tags": [
                    "Number"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `NumberResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/NumberResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/numbers\/{number}": {
            "put": {
                "operationId": "number.update",
                "tags": [
                    "Number"
                ],
                "parameters": [
                    {
                        "name": "number",
                        "in": "path",
                        "required": true,
                        "description": "The number ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "voice_account_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "number": {
                                        "type": "integer"
                                    },
                                    "sip_domain": {
                                        "type": "string"
                                    },
                                    "sip_username": {
                                        "type": "string"
                                    },
                                    "sip_password": {
                                        "type": "string"
                                    },
                                    "sip_byoc_token": {
                                        "type": "string"
                                    },
                                    "disallowed_countries": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "inbound_agent_id": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "voice_account_id",
                                    "number",
                                    "sip_domain",
                                    "sip_username",
                                    "sip_password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`NumberResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/NumberResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/numbers\/sync": {
            "post": {
                "operationId": "number.sync",
                "tags": [
                    "Number"
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "account_id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "error",
                                        "account_id"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/numbers\/sip": {
            "post": {
                "operationId": "number.createSipNumber",
                "tags": [
                    "Number"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "voice_account_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "number": {
                                        "type": "integer"
                                    },
                                    "sip_domain": {
                                        "type": "string"
                                    },
                                    "sip_username": {
                                        "type": "string"
                                    },
                                    "sip_password": {
                                        "type": "string"
                                    },
                                    "sip_byoc_token": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "number",
                                    "sip_domain",
                                    "sip_username",
                                    "sip_password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`NumberResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/NumberResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Number already exist"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/numbers\/sip\/{number}": {
            "delete": {
                "operationId": "number.deleteSipNumber",
                "tags": [
                    "Number"
                ],
                "parameters": [
                    {
                        "name": "number",
                        "in": "path",
                        "required": true,
                        "description": "The number ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Number is not a SIP number"
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/offers": {
            "get": {
                "operationId": "offers.index",
                "tags": [
                    "Offers"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `OfferResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/OfferResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "offers.store",
                "tags": [
                    "Offers"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Offer name"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "http:\/\/offerurl.com"
                                    },
                                    "profit": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "name",
                                    "url"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`OfferResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/OfferResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/offers\/{offer}": {
            "put": {
                "operationId": "offers.update",
                "tags": [
                    "Offers"
                ],
                "parameters": [
                    {
                        "name": "offer",
                        "in": "path",
                        "required": true,
                        "description": "The offer ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": "string"
                                    },
                                    "profit": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "name",
                                    "url"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`OfferResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/OfferResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "offers.destroy",
                "tags": [
                    "Offers"
                ],
                "parameters": [
                    {
                        "name": "offer",
                        "in": "path",
                        "required": true,
                        "description": "The offer ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "null"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/forgot-password": {
            "post": {
                "operationId": "password.email",
                "tags": [
                    "PasswordResetLink"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/billing\/paypal\/client-token": {
            "get": {
                "operationId": "billing.paypal.client-token",
                "tags": [
                    "PaypalTransactions"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "client_token": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "client_token"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/billing\/paypal\/create-transaction": {
            "post": {
                "operationId": "billing.paypal.create-transaction",
                "tags": [
                    "PaypalTransactions"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "minimum": 1
                                    },
                                    "device_data": {
                                        "type": "string"
                                    },
                                    "subscription": {
                                        "type": "boolean"
                                    },
                                    "threshold": {
                                        "type": "string"
                                    },
                                    "reference": {
                                        "type": "string"
                                    },
                                    "checkout_data": {
                                        "type": "object",
                                        "properties": {
                                            "nonce": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "nonce"
                                        ]
                                    }
                                },
                                "required": [
                                    "amount",
                                    "device_data",
                                    "subscription",
                                    "checkout_data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/billing\/paypal\/log": {
            "post": {
                "operationId": "billing.paypal.log",
                "tags": [
                    "PaypalTransactions"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/management\/domains\/plans": {
            "get": {
                "operationId": "management.domains.plans.index",
                "tags": [
                    "PlatformDomainPlans"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `DomainPlanData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DomainPlanData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "management.domains.plans.store",
                "tags": [
                    "PlatformDomainPlans"
                ],
                "requestBody": {
                    "description": "`DomainPlanDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/DomainPlanDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/DomainPlanData"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/platform\/notifications": {
            "get": {
                "operationId": "platform\/notifications.index",
                "tags": [
                    "PlatformNotifications"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The paginated collection of `TeamNotificationData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "description": "The list of items",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/TeamNotificationData"
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "description": "Generated paginator links.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    },
                                                    "active": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "required": [
                                                    "url",
                                                    "label",
                                                    "active"
                                                ]
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "first_page_url": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "last_page_url": {
                                                    "type": "string"
                                                },
                                                "next_page_url": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "prev_page_url": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "first_page_url",
                                                "from",
                                                "last_page",
                                                "last_page_url",
                                                "next_page_url",
                                                "path",
                                                "per_page",
                                                "prev_page_url",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/platform\/notifications\/{notification}\/read": {
            "patch": {
                "operationId": "platform\/notifications.read",
                "tags": [
                    "PlatformNotifications"
                ],
                "parameters": [
                    {
                        "name": "notification",
                        "in": "path",
                        "required": true,
                        "description": "The notification ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notification marked as read"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/platform\/notifications\/{notification}\/unread": {
            "patch": {
                "operationId": "platform\/notifications.unread",
                "tags": [
                    "PlatformNotifications"
                ],
                "parameters": [
                    {
                        "name": "notification",
                        "in": "path",
                        "required": true,
                        "description": "The notification ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notification marked as unread"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/platform\/notifications\/read-all": {
            "patch": {
                "operationId": "platform\/notifications.read-all",
                "tags": [
                    "PlatformNotifications"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "All notifications marked as read"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/platform\/notifications\/has-unread": {
            "get": {
                "operationId": "platform\/notifications.has-unread",
                "tags": [
                    "PlatformNotifications"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "has_unread": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "has_unread"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/platform\/notifications\/types": {
            "get": {
                "operationId": "platform\/notifications.types",
                "tags": [
                    "PlatformNotifications"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "categories": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "uniq": {
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "suppress": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "type",
                                                    "categories",
                                                    "uniq",
                                                    "title",
                                                    "reason",
                                                    "suppress"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/rate-parser\/routes\/{route}\/settings": {
            "post": {
                "operationId": "sms.rate-parser.update",
                "tags": [
                    "RateParser"
                ],
                "parameters": [
                    {
                        "name": "route",
                        "in": "path",
                        "required": true,
                        "description": "The route ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`PriceParserColumnsDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PriceParserColumnsDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "sms.rate-parser.destroy",
                "tags": [
                    "RateParser"
                ],
                "parameters": [
                    {
                        "name": "route",
                        "in": "path",
                        "required": true,
                        "description": "The route ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/rate-parser\/files\/{file}\/sample": {
            "get": {
                "operationId": "sms.rate-parser.sample",
                "tags": [
                    "RateParser"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "path",
                        "required": true,
                        "description": "The file ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ],
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "file_name": {
                                            "type": "string"
                                        },
                                        "total_rows": {
                                            "type": "integer"
                                        },
                                        "rows": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "cols": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "file_name",
                                        "total_rows",
                                        "rows",
                                        "cols"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/rate-parser\/files\/{file}\/preview": {
            "post": {
                "operationId": "sms.rate-parser.preview",
                "tags": [
                    "RateParser"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "path",
                        "required": true,
                        "description": "The file ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`PriceParserColumnsDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/PriceParserColumnsDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "logs": {
                                            "type": "object",
                                            "properties": {
                                                "line_no": {
                                                    "type": "integer"
                                                },
                                                "event_type": {
                                                    "type": "string"
                                                },
                                                "old_rate": {
                                                    "type": "number"
                                                },
                                                "new_rate": {
                                                    "type": "number"
                                                },
                                                "country_name": {
                                                    "type": "string"
                                                },
                                                "network": {
                                                    "type": "object",
                                                    "properties": {
                                                        "mcc": {
                                                            "type": "string"
                                                        },
                                                        "mnc": {
                                                            "type": "string"
                                                        },
                                                        "brand_name": {
                                                            "type": "string"
                                                        },
                                                        "operator_name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "mcc",
                                                        "mnc",
                                                        "brand_name",
                                                        "operator_name"
                                                    ]
                                                },
                                                "fail_reason": {
                                                    "type": "string"
                                                },
                                                "row": {
                                                    "type": "array",
                                                    "items": {}
                                                }
                                            },
                                            "required": [
                                                "line_no",
                                                "event_type",
                                                "old_rate",
                                                "new_rate",
                                                "country_name",
                                                "network",
                                                "fail_reason",
                                                "row"
                                            ]
                                        },
                                        "stats": {
                                            "type": "object",
                                            "properties": {
                                                "rate_created": {
                                                    "type": "integer"
                                                },
                                                "rate_updated": {
                                                    "type": "integer"
                                                },
                                                "rate_deleted": {
                                                    "type": "integer"
                                                },
                                                "rate_failed": {
                                                    "type": "integer"
                                                },
                                                "network_created": {
                                                    "type": "integer"
                                                },
                                                "network_updated": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "rate_created",
                                                "rate_updated",
                                                "rate_deleted",
                                                "rate_failed",
                                                "network_created",
                                                "network_updated"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "logs",
                                        "stats"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/rate-parser\/files\/{file}\/handle": {
            "post": {
                "operationId": "sms.rate-parser.handle",
                "tags": [
                    "RateParser"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "path",
                        "required": true,
                        "description": "The file ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "File successfully queued for processing"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "File already queued for processing. Please wait."
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Price parser settings not found"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "File not found"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/register": {
            "post": {
                "operationId": "auth.registeredUser.store_0",
                "tags": [
                    "RegisteredUser"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3360
                                        }
                                    },
                                    "required": [
                                        "access_token",
                                        "token_type",
                                        "expires_in"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/register": {
            "post": {
                "operationId": "auth.registeredUser.store_0",
                "tags": [
                    "RegisteredUser"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3360
                                        }
                                    },
                                    "required": [
                                        "access_token",
                                        "token_type",
                                        "expires_in"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/segments\/fields": {
            "get": {
                "operationId": "segments.fields",
                "description": "Example response:\n```json\n{\n\"fields\": [\n{\n\"field\": \"clicked_count\",\n\"label\": \"Clicked Count\",\n\"type\": \"integer\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"sent_count\",\n\"label\": \"Sent Count\",\n\"type\": \"integer\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"country_id\",\n\"label\": \"Country\",\n\"type\": \"integer\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"in\",\n\"not_in\"\n]\n},\n{\n\"field\": \"state_id\",\n\"label\": \"State\",\n\"type\": \"integer\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"in\",\n\"not_in\"\n]\n},\n{\n\"field\": \"network_brand\",\n\"label\": \"Network Brand\",\n\"type\": \"string\",\n\"operators\": [\n\"contains\",\n\"not_contains\",\n\"begins_with\",\n\"not_ends_with\",\n\"ends_with\",\n\"not_ends_with\",\n\"is_empty\",\n\"is_not_empty\"\n]\n},\n{\n\"field\": \"date_created\",\n\"label\": \"Date Created\",\n\"type\": \"date\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"last_sent\",\n\"label\": \"Last Sent\",\n\"type\": \"date\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"last_clicked\",\n\"label\": \"Last Clicked\",\n\"type\": \"date\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"leads_count\",\n\"label\": \"Leads Count\",\n\"type\": \"integer\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"sales_count\",\n\"label\": \"Sales Count\",\n\"type\": \"integer\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"custom1_str\",\n\"label\": \"Qwerty\",\n\"type\": \"string\",\n\"operators\": [\n\"contains\",\n\"not_contains\",\n\"begins_with\",\n\"not_ends_with\",\n\"ends_with\",\n\"not_ends_with\",\n\"is_empty\",\n\"is_not_empty\"\n]\n},\n{\n\"field\": \"custom2_str\",\n\"label\": \"Custom 2 String\",\n\"type\": \"string\",\n\"operators\": [\n\"contains\",\n\"not_contains\",\n\"begins_with\",\n\"not_ends_with\",\n\"ends_with\",\n\"not_ends_with\",\n\"is_empty\",\n\"is_not_empty\"\n]\n},\n{\n\"field\": \"custom3_str\",\n\"label\": \"Custom 3 String\",\n\"type\": \"string\",\n\"operators\": [\n\"contains\",\n\"not_contains\",\n\"begins_with\",\n\"not_ends_with\",\n\"ends_with\",\n\"not_ends_with\",\n\"is_empty\",\n\"is_not_empty\"\n]\n},\n{\n\"field\": \"custom4_str\",\n\"label\": \"Custom 4 String\",\n\"type\": \"string\",\n\"operators\": [\n\"contains\",\n\"not_contains\",\n\"begins_with\",\n\"not_ends_with\",\n\"ends_with\",\n\"not_ends_with\",\n\"is_empty\",\n\"is_not_empty\"\n]\n},\n{\n\"field\": \"custom5_str\",\n\"label\": \"Custom 5 String\",\n\"type\": \"string\",\n\"operators\": [\n\"contains\",\n\"not_contains\",\n\"begins_with\",\n\"not_ends_with\",\n\"ends_with\",\n\"not_ends_with\",\n\"is_empty\",\n\"is_not_empty\"\n]\n},\n{\n\"field\": \"custom1_dec\",\n\"label\": \"Custom 1 Decimal\",\n\"type\": \"double\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"custom2_dec\",\n\"label\": \"Custom 2 Decimal\",\n\"type\": \"double\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"custom1_datetime\",\n\"label\": \"Dt\",\n\"type\": \"datetime\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"custom2_datetime\",\n\"label\": \"Custom 2 Datetime\",\n\"type\": \"datetime\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"custom3_datetime\",\n\"label\": \"Custom 3 Datetime\",\n\"type\": \"datetime\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"custom4_datetime\",\n\"label\": \"Custom 4 Datetime\",\n\"type\": \"datetime\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"custom5_datetime\",\n\"label\": \"Custom 5 Datetime\",\n\"type\": \"datetime\",\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\"\n]\n},\n{\n\"field\": \"tags\",\n\"label\": \"Tag\",\n\"type\": \"string\",\n\"operators\": [\n\"contains\",\n\"not_contains\",\n\"begins_with\",\n\"not_ends_with\",\n\"ends_with\",\n\"not_ends_with\"\n]\n}\n],\n\"operators\": [\n\"equal\",\n\"not_equal\",\n\"in\",\n\"not_in\",\n\"less\",\n\"less_or_equal\",\n\"greater\",\n\"greater_or_equal\",\n\"begins_with\",\n\"not_begins_with\",\n\"contains\",\n\"not_contains\",\n\"ends_with\",\n\"not_ends_with\",\n\"is_empty\",\n\"is_not_empty\"\n]\n}\n```",
                "summary": "\/v1\/segments\/fields",
                "tags": [
                    "Segments"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "fields": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/JqFieldResource"
                                                    }
                                                },
                                                "operators": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "fields",
                                                "operators"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/segments\/preview": {
            "post": {
                "operationId": "segments.preview",
                "tags": [
                    "Segments"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "numbers",
                                            "emails"
                                        ]
                                    },
                                    "query": {
                                        "type": "object",
                                        "example": {
                                            "condition": "AND",
                                            "rules": [
                                                {
                                                    "field": "clicked_count",
                                                    "operator": "greater",
                                                    "value": 0
                                                },
                                                {
                                                    "field": "country_id",
                                                    "operator": "equal",
                                                    "value": 225
                                                },
                                                {
                                                    "condition": "OR",
                                                    "rules": [
                                                        {
                                                            "field": "leads_count",
                                                            "operator": "equal",
                                                            "value": 1
                                                        },
                                                        {
                                                            "field": "sales_count",
                                                            "operator": "equal",
                                                            "value": 1
                                                        }
                                                    ]
                                                },
                                                {
                                                    "field": "date_created",
                                                    "operator": "equal",
                                                    "value": "2023-07-05"
                                                }
                                            ]
                                        },
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "page": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "per_page": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 100
                                    }
                                },
                                "required": [
                                    "type",
                                    "query"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "rows": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#\/components\/schemas\/ContactSmsResource"
                                                    }
                                                },
                                                "stats": {
                                                    "type": "object",
                                                    "description": "only for admins (elapsed, rows_read, bytes_read) (null for users)",
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    }
                                                },
                                                "sql": {
                                                    "type": "string",
                                                    "description": "only for admins (null for users)"
                                                }
                                            },
                                            "required": [
                                                "total",
                                                "rows",
                                                "stats",
                                                "sql"
                                            ]
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/segments\/contacts": {
            "post": {
                "operationId": "segments.contacts",
                "tags": [
                    "Segments"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "startRow": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "endRow": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "ids": {
                                        "type": "array",
                                        "description": "UUID's of segments",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string",
                                                    "description": "'from' => $this->firstItem(),"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "description": "'to' => $this->lastItem(),"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/segments\/progress": {
            "post": {
                "operationId": "segments.progress",
                "tags": [
                    "Segments"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filter_segment_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "with_dashboards": {
                                        "type": "boolean"
                                    },
                                    "segment_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "contacts_left": {
                                            "type": "integer"
                                        },
                                        "contacts_total": {
                                            "type": "integer"
                                        },
                                        "views": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/MetabaseData"
                                            }
                                        },
                                        "debug": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "contacts_left",
                                        "contacts_total",
                                        "views",
                                        "debug"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid segment_ids"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/segments\/summary": {
            "post": {
                "operationId": "segments.summary",
                "tags": [
                    "Segments"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "segment_ids": {
                                        "type": "array",
                                        "description": "UUID's of segments",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                },
                                "required": [
                                    "segment_ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`CampaignSummaryData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CampaignSummaryData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/segments\/reset-progress": {
            "post": {
                "operationId": "segments.reset-progress",
                "tags": [
                    "Segments"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filter_segment_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "segment_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid segment_ids"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/segments": {
            "get": {
                "operationId": "segments.index",
                "tags": [
                    "Segments"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "numbers",
                                "emails"
                            ]
                        }
                    },
                    {
                        "name": "campaign_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `SegmentResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SegmentResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "segments.store",
                "tags": [
                    "Segments"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "numbers",
                                            "emails"
                                        ]
                                    },
                                    "query": {
                                        "type": "object",
                                        "example": {
                                            "condition": "AND",
                                            "rules": [
                                                {
                                                    "field": "clicked_count",
                                                    "operator": "greater",
                                                    "value": 0
                                                },
                                                {
                                                    "field": "country_id",
                                                    "operator": "equal",
                                                    "value": 225
                                                },
                                                {
                                                    "condition": "OR",
                                                    "rules": [
                                                        {
                                                            "field": "leads_count",
                                                            "operator": "equal",
                                                            "value": 1
                                                        },
                                                        {
                                                            "field": "sales_count",
                                                            "operator": "equal",
                                                            "value": 1
                                                        }
                                                    ]
                                                },
                                                {
                                                    "field": "date_created",
                                                    "operator": "equal",
                                                    "value": "2023-07-05"
                                                }
                                            ]
                                        },
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "campaign_id": {
                                        "type": "string",
                                        "format": "uuid",
                                        "description": "use for campaign filter"
                                    }
                                },
                                "required": [
                                    "name",
                                    "type",
                                    "query"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`SegmentResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SegmentResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/segments\/{segment}": {
            "get": {
                "operationId": "segments.show",
                "tags": [
                    "Segments"
                ],
                "parameters": [
                    {
                        "name": "segment",
                        "in": "path",
                        "required": true,
                        "description": "The segment ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`SegmentResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SegmentResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "segments.update",
                "tags": [
                    "Segments"
                ],
                "parameters": [
                    {
                        "name": "segment",
                        "in": "path",
                        "required": true,
                        "description": "The segment ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "query": {
                                        "type": "object",
                                        "example": {
                                            "condition": "AND",
                                            "rules": [
                                                {
                                                    "field": "clicked_count",
                                                    "operator": "greater",
                                                    "value": 0
                                                },
                                                {
                                                    "field": "country_id",
                                                    "operator": "equal",
                                                    "value": 225
                                                },
                                                {
                                                    "condition": "OR",
                                                    "rules": [
                                                        {
                                                            "field": "leads_count",
                                                            "operator": "equal",
                                                            "value": 1
                                                        },
                                                        {
                                                            "field": "sales_count",
                                                            "operator": "equal",
                                                            "value": 1
                                                        }
                                                    ]
                                                },
                                                {
                                                    "field": "date_created",
                                                    "operator": "equal",
                                                    "value": "2023-07-05"
                                                }
                                            ]
                                        },
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "name",
                                    "query"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SegmentResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SegmentResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "segments.destroy",
                "tags": [
                    "Segments"
                ],
                "parameters": [
                    {
                        "name": "segment",
                        "in": "path",
                        "required": true,
                        "description": "The segment ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/hub\/endpoints\/{endpoint}\/apply-rates": {
            "post": {
                "operationId": "hub.endpoints.apply-rates",
                "tags": [
                    "SellerEndpoints"
                ],
                "parameters": [
                    {
                        "name": "endpoint",
                        "in": "path",
                        "required": true,
                        "description": "The endpoint ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "send_rates": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Job has been dispatched."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No rates to apply."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/hub\/endpoints\/{endpoint}\/send-rates": {
            "post": {
                "operationId": "hub.endpoints.send-updates",
                "tags": [
                    "SellerEndpoints"
                ],
                "parameters": [
                    {
                        "name": "endpoint",
                        "in": "path",
                        "required": true,
                        "description": "The endpoint ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Job has been dispatched."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Job is already running."
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "No email to send updates."
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/hub\/endpoints\/{endpoint}\/email-updates": {
            "get": {
                "operationId": "hub.endpoints.email-updates",
                "tags": [
                    "SellerEndpoints"
                ],
                "parameters": [
                    {
                        "name": "endpoint",
                        "in": "path",
                        "required": true,
                        "description": "The endpoint ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `SellerEmailUpdateResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SellerEmailUpdateResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/hub\/endpoints\/tags": {
            "get": {
                "operationId": "hub.endpoints.tags",
                "tags": [
                    "SellerEndpoints"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tags": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "tags"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/hub\/endpoints": {
            "get": {
                "operationId": "hub.endpoints.index",
                "tags": [
                    "SellerEndpoints"
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `SellerEndpointData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "name": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "username": {
                                                        "type": "string"
                                                    },
                                                    "password": {
                                                        "type": "string"
                                                    },
                                                    "client_company_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "sms_routing_plan_id": {
                                                        "type": "string",
                                                        "format": "uuid"
                                                    },
                                                    "default_route_id": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "format": "uuid"
                                                    },
                                                    "pricing_update_email": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ],
                                                        "format": "email"
                                                    },
                                                    "allowed_ips": {
                                                        "type": [
                                                            "array",
                                                            "null"
                                                        ],
                                                        "default": [],
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "tags": {
                                                        "type": [
                                                            "array",
                                                            "null"
                                                        ],
                                                        "default": [],
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "tx": {
                                                        "type": "integer",
                                                        "default": 1
                                                    },
                                                    "rx": {
                                                        "type": "integer",
                                                        "default": 1
                                                    },
                                                    "trx": {
                                                        "type": "integer",
                                                        "default": 1
                                                    },
                                                    "is_sending_allowed": {
                                                        "type": "boolean",
                                                        "default": true
                                                    },
                                                    "max_price": {
                                                        "type": "number",
                                                        "default": 0
                                                    },
                                                    "is_max_price_enabled": {
                                                        "type": "boolean",
                                                        "default": false
                                                    },
                                                    "min_margin": {
                                                        "type": [
                                                            "integer",
                                                            "null"
                                                        ]
                                                    },
                                                    "active_connections": {
                                                        "anyOf": [
                                                            {
                                                                "$ref": "#\/components\/schemas\/SellerEndpointConnectionData"
                                                            },
                                                            {
                                                                "type": "null"
                                                            }
                                                        ]
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "name",
                                                    "username",
                                                    "password",
                                                    "client_company_id",
                                                    "sms_routing_plan_id",
                                                    "default_route_id",
                                                    "pricing_update_email",
                                                    "allowed_ips",
                                                    "tags",
                                                    "tx",
                                                    "rx",
                                                    "trx",
                                                    "is_sending_allowed",
                                                    "max_price",
                                                    "is_max_price_enabled",
                                                    "min_margin",
                                                    "active_connections"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "hub.endpoints.store",
                "tags": [
                    "SellerEndpoints"
                ],
                "requestBody": {
                    "description": "`SellerEndpointDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SellerEndpointDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden username\/password combination."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "properties": {
                                                "username": {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "string",
                                                            "example": "Forbidden username\/password combination."
                                                        }
                                                    ],
                                                    "minItems": 1,
                                                    "maxItems": 1,
                                                    "additionalItems": false
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "string",
                                                            "example": "Forbidden username\/password combination."
                                                        }
                                                    ],
                                                    "minItems": 1,
                                                    "maxItems": 1,
                                                    "additionalItems": false
                                                }
                                            },
                                            "required": [
                                                "username",
                                                "password"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/hub\/endpoints\/{endpoint}": {
            "get": {
                "operationId": "hub.endpoints.show",
                "tags": [
                    "SellerEndpoints"
                ],
                "parameters": [
                    {
                        "name": "endpoint",
                        "in": "path",
                        "required": true,
                        "description": "The endpoint ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`SellerEndpointData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "name": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "username": {
                                                    "type": "string"
                                                },
                                                "password": {
                                                    "type": "string"
                                                },
                                                "client_company_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "sms_routing_plan_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "default_route_id": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "format": "uuid"
                                                },
                                                "pricing_update_email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "format": "email"
                                                },
                                                "allowed_ips": {
                                                    "type": [
                                                        "array",
                                                        "null"
                                                    ],
                                                    "default": [],
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "tags": {
                                                    "type": [
                                                        "array",
                                                        "null"
                                                    ],
                                                    "default": [],
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "tx": {
                                                    "type": "integer",
                                                    "default": 1
                                                },
                                                "rx": {
                                                    "type": "integer",
                                                    "default": 1
                                                },
                                                "trx": {
                                                    "type": "integer",
                                                    "default": 1
                                                },
                                                "is_sending_allowed": {
                                                    "type": "boolean",
                                                    "default": true
                                                },
                                                "max_price": {
                                                    "type": "number",
                                                    "default": 0
                                                },
                                                "is_max_price_enabled": {
                                                    "type": "boolean",
                                                    "default": false
                                                },
                                                "min_margin": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "active_connections": {
                                                    "anyOf": [
                                                        {
                                                            "$ref": "#\/components\/schemas\/SellerEndpointConnectionData"
                                                        },
                                                        {
                                                            "type": "null"
                                                        }
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "username",
                                                "password",
                                                "client_company_id",
                                                "sms_routing_plan_id",
                                                "default_route_id",
                                                "pricing_update_email",
                                                "allowed_ips",
                                                "tags",
                                                "tx",
                                                "rx",
                                                "trx",
                                                "is_sending_allowed",
                                                "max_price",
                                                "is_max_price_enabled",
                                                "min_margin",
                                                "active_connections"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "hub.endpoints.update",
                "tags": [
                    "SellerEndpoints"
                ],
                "parameters": [
                    {
                        "name": "endpoint",
                        "in": "path",
                        "required": true,
                        "description": "The endpoint ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`SellerEndpointDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SellerEndpointDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SellerEndpointData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "name": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "username": {
                                                    "type": "string"
                                                },
                                                "password": {
                                                    "type": "string"
                                                },
                                                "client_company_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "sms_routing_plan_id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "default_route_id": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "format": "uuid"
                                                },
                                                "pricing_update_email": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "format": "email"
                                                },
                                                "allowed_ips": {
                                                    "type": [
                                                        "array",
                                                        "null"
                                                    ],
                                                    "default": [],
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "tags": {
                                                    "type": [
                                                        "array",
                                                        "null"
                                                    ],
                                                    "default": [],
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "tx": {
                                                    "type": "integer",
                                                    "default": 1
                                                },
                                                "rx": {
                                                    "type": "integer",
                                                    "default": 1
                                                },
                                                "trx": {
                                                    "type": "integer",
                                                    "default": 1
                                                },
                                                "is_sending_allowed": {
                                                    "type": "boolean",
                                                    "default": true
                                                },
                                                "max_price": {
                                                    "type": "number",
                                                    "default": 0
                                                },
                                                "is_max_price_enabled": {
                                                    "type": "boolean",
                                                    "default": false
                                                },
                                                "min_margin": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "active_connections": {
                                                    "anyOf": [
                                                        {
                                                            "$ref": "#\/components\/schemas\/SellerEndpointConnectionData"
                                                        },
                                                        {
                                                            "type": "null"
                                                        }
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "username",
                                                "password",
                                                "client_company_id",
                                                "sms_routing_plan_id",
                                                "default_route_id",
                                                "pricing_update_email",
                                                "allowed_ips",
                                                "tags",
                                                "tx",
                                                "rx",
                                                "trx",
                                                "is_sending_allowed",
                                                "max_price",
                                                "is_max_price_enabled",
                                                "min_margin",
                                                "active_connections"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "hub.endpoints.destroy",
                "tags": [
                    "SellerEndpoints"
                ],
                "parameters": [
                    {
                        "name": "endpoint",
                        "in": "path",
                        "required": true,
                        "description": "The endpoint ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/hub\/profit-logic": {
            "get": {
                "operationId": "hub.profit-logic.show",
                "tags": [
                    "SellerProfitLogic"
                ],
                "responses": {
                    "200": {
                        "description": "`SellerProfitLogicData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SellerProfitLogicData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "hub.profit-logic.store",
                "tags": [
                    "SellerProfitLogic"
                ],
                "requestBody": {
                    "description": "`SellerProfitLogicDataRequest`",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SellerProfitLogicDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SellerProfitLogicData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SellerProfitLogicData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/hub\/profit-logic\/rules\/apply": {
            "post": {
                "operationId": "hub.profit-logic.rules.apply",
                "tags": [
                    "SellerProfitLogic"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Job has been dispatched."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No rates to apply."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/hub\/profit-logic\/rules": {
            "get": {
                "operationId": "hub.profit-logic.rules.index",
                "tags": [
                    "SellerProfitLogicRules"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "show_upcoming",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The paginated collection of `SellerProfitLogicRuleData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "description": "The list of items",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SellerProfitLogicRuleData"
                                            }
                                        },
                                        "links": {
                                            "type": "array",
                                            "description": "Generated paginator links.",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "label": {
                                                        "type": "string"
                                                    },
                                                    "active": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "required": [
                                                    "url",
                                                    "label",
                                                    "active"
                                                ]
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "first_page_url": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "last_page_url": {
                                                    "type": "string"
                                                },
                                                "next_page_url": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "prev_page_url": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "first_page_url",
                                                "from",
                                                "last_page",
                                                "last_page_url",
                                                "next_page_url",
                                                "path",
                                                "per_page",
                                                "prev_page_url",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "hub.profit-logic.rules.store",
                "tags": [
                    "SellerProfitLogicRules"
                ],
                "requestBody": {
                    "description": "`SellerProfitLogicRuleDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SellerProfitLogicRuleDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SellerProfitLogicRuleData"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "properties": {
                                                "country_id": {
                                                    "type": "array",
                                                    "prefixItems": [
                                                        {
                                                            "type": "string",
                                                            "example": "This rule already exists"
                                                        }
                                                    ],
                                                    "minItems": 1,
                                                    "maxItems": 1,
                                                    "additionalItems": false
                                                }
                                            },
                                            "required": [
                                                "country_id"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/hub\/profit-logic\/rules\/{rule}": {
            "put": {
                "operationId": "hub.profit-logic.rules.update",
                "tags": [
                    "SellerProfitLogicRules"
                ],
                "parameters": [
                    {
                        "name": "rule",
                        "in": "path",
                        "required": true,
                        "description": "The rule ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`SellerProfitLogicRuleDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SellerProfitLogicRuleDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SellerProfitLogicRuleData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SellerProfitLogicRuleData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "hub.profit-logic.rules.destroy",
                "tags": [
                    "SellerProfitLogicRules"
                ],
                "parameters": [
                    {
                        "name": "rule",
                        "in": "path",
                        "required": true,
                        "description": "The rule ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/hub\/reports": {
            "post": {
                "operationId": "hub.seller-reports",
                "tags": [
                    "SellerReports"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sortModel": {
                                        "type": "array",
                                        "example": [
                                            {
                                                "sort": "asc",
                                                "colId": "updated_datetime"
                                            }
                                        ],
                                        "prefixItems": [
                                            {
                                                "$ref": "#\/components\/schemas\/App.Domain.Campaigns.Data.Reports.Sendlogs.SortModelData"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "filterModel": {
                                        "type": "array",
                                        "example": "{\"is_sent\":{\"filterType\":\"number\",\"type\":\"greaterThan\",\"filter\":5}}\n\nnote that it needs to be col_id: {FilterModel}, PHP doesn't support this kind of description.",
                                        "prefixItems": [
                                            {
                                                "type": "array",
                                                "prefixItems": [
                                                    {
                                                        "$ref": "#\/components\/schemas\/FilterModelData"
                                                    }
                                                ],
                                                "minItems": 1,
                                                "maxItems": 1,
                                                "additionalItems": false
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "rowGroupCols": {
                                        "type": "array",
                                        "example": [
                                            {
                                                "id": "campaign_id",
                                                "displayName": "Campaign_Id",
                                                "field": "campaign_id"
                                            }
                                        ],
                                        "prefixItems": [
                                            {
                                                "$ref": "#\/components\/schemas\/ApiSendlogRowGroupColsData"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "selectCols": {
                                        "type": "array",
                                        "example": "[\"country_id\"]\nWill make a select query with only the columns in the array, if not provided default columns will be selected",
                                        "prefixItems": [
                                            {
                                                "$ref": "#\/components\/schemas\/ApiSendLogFieldEnum"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "groupKeys": {
                                        "type": "array",
                                        "example": "[\"campaign_uuid\"]\nNot the column type, it's a filter of the query",
                                        "prefixItems": [
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "startRow": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "endRow": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "groupByAll": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/DataGridApiSendLogResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "required": [
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/webhooks\/slack\/critical": {
            "get": {
                "operationId": "slack.critical",
                "tags": [
                    "Slack"
                ],
                "parameters": [
                    {
                        "name": "text",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}\/offers": {
            "get": {
                "operationId": "sms.campaigns.offers.index",
                "tags": [
                    "SmsCampaignOffers"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `OfferCampaignResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/OfferCampaignResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}\/offers\/{offer}": {
            "put": {
                "operationId": "sms.campaigns.offers.update",
                "tags": [
                    "SmsCampaignOffers"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "offer",
                        "in": "path",
                        "required": true,
                        "description": "The offer ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "is_active"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`OfferCampaignResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/OfferCampaignResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "sms.campaigns.offers.destroy",
                "tags": [
                    "SmsCampaignOffers"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "offer",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "null"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "sms.campaigns.offers.store",
                "tags": [
                    "SmsCampaignOffers"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "offer",
                        "in": "path",
                        "required": true,
                        "description": "The offer ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "`OfferCampaignResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/OfferCampaignResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}\/senderids": {
            "get": {
                "operationId": "sms.campaigns.senderids.index",
                "tags": [
                    "SmsCampaignSenderids"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `SmsCampaignSenderidResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsCampaignSenderidResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "sms.campaigns.senderids.store",
                "tags": [
                    "SmsCampaignSenderids"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "text": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "text"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`SmsCampaignSenderidResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsCampaignSenderidResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}\/senderids\/{senderid}": {
            "put": {
                "operationId": "sms.campaigns.senderids.update",
                "tags": [
                    "SmsCampaignSenderids"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "senderid",
                        "in": "path",
                        "required": true,
                        "description": "The senderid ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "text": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SmsCampaignSenderidResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsCampaignSenderidResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "sms.campaigns.senderids.destroy",
                "tags": [
                    "SmsCampaignSenderids"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "senderid",
                        "in": "path",
                        "required": true,
                        "description": "The senderid ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "null"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}\/texts": {
            "get": {
                "operationId": "sms.campaigns.texts.index",
                "tags": [
                    "SmsCampaignTexts"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `SmsCampaignTextData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsCampaignTextData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "sms.campaigns.texts.store",
                "tags": [
                    "SmsCampaignTexts"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`SmsCampaignTextDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SmsCampaignTextDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SmsCampaignTextData"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}\/texts\/{text}": {
            "put": {
                "operationId": "sms.campaigns.texts.update",
                "tags": [
                    "SmsCampaignTexts"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "text",
                        "in": "path",
                        "required": true,
                        "description": "The text ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`SmsCampaignTextDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SmsCampaignTextDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SmsCampaignTextData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsCampaignTextData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "sms.campaigns.texts.destroy",
                "tags": [
                    "SmsCampaignTexts"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "text",
                        "in": "path",
                        "required": true,
                        "description": "The text ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "null"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}": {
            "put": {
                "operationId": "sms.campaigns.update",
                "tags": [
                    "SmsCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`SmsCampaignDataRequest`",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/SmsCampaignDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SmsCampaignData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsCampaignData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "get": {
                "operationId": "sms.campaigns.show",
                "tags": [
                    "SmsCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "with[]",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "offers",
                                    "sends",
                                    "logs"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`SmsCampaignResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsCampaignResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "sms.campaigns.destroy",
                "tags": [
                    "SmsCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns": {
            "get": {
                "operationId": "sms.campaigns.index",
                "tags": [
                    "SmsCampaigns"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "planned",
                                "default"
                            ]
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "with[]",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "offers",
                                    "sends",
                                    "logs"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `SmsCampaignResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsCampaignResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "sms.campaigns.store",
                "tags": [
                    "SmsCampaigns"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`SmsCampaignResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsCampaignResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}\/logs": {
            "get": {
                "operationId": "sms.campaigns.logs",
                "tags": [
                    "SmsCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `SmsCampaignLogResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsCampaignLogResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/reports": {
            "post": {
                "operationId": "sms.campaigns.reports",
                "description": "Examples:\n- **Getting clicks, sent count per campaign**\nrequest:\n```json\n{\n\"rowGroupCols\": [\n{\n\"field\": \"campaign_id\"\n}\n]\n}\n```\n\nresponse:\n```json\n{\n\"data\": [\n{\n...\n\"campaign_id\": \"2bdb6f47-ac08-34b8-9c89-6497b3be237f\",\n\"is_sent\": \"4\",\n\"is_clicked\": \"0\",\n...\n},\n\"meta\": { ... }\n}\n```\n\n- **Getting clicks, sent count per country**\nrequest:\n```json\n{\n\"rowGroupCols\": [\n{\n\"field\": \"country_id\"\n}\n]\n}\n```\n\nresponse:\n```json\n{\n\"data\": [\n{\n...\n\"country_id\": 226,\n\"is_sent\": \"4\",\n\"is_clicked\": \"0\",\n...\n},\n\"meta\": { ... }\n}\n```\n\n- **Group per hour\/date\/year-week, year-month**\n\nUse `show_as` to specify the group type\nDateTime columns can be group by `hour`, `date`, `year-week`, `year-month`\n\nexample:\n```json\n{\n\"rowGroupCols\": [\n{\n\"field\": \"sent_at\",\n\"show_as\": \"date\"\n}\n]\n}\n```\n\nresponse:\n```json\n{\n\"data\": [\n{\n...\n\"sent_at\": \"2023-08-03\",\n\"is_sent\": \"230\",\n\"is_clicked\": \"25\",\n\"is_lead\": \"0\",\n\"is_sale\": \"0\",\n\"ctr\": 10.87,\n...\n},\n```\n\n- **Group by multiple columns**\n\nUse `groupByAll` to group by all columns that are in rowGroupCols\n\nexample:\n```json\n{\n\"rowGroupCols\": [\n{\n\"field\": \"sent_at\",\n\"show_as\": \"date\"\n},\n{\n\"field\": \"country_id\"\n}\n],\n\"groupByAll\": true\n}\n```\n\nresponse:\n```json\n{\n\"data\": [\n{\n...\n\"sent_at\": \"2023-08-03\",\n\"country_id\": 226,\n\"is_sent\": \"210\",\n\"is_clicked\": \"25\",\n\"is_lead\": \"0\",\n\"is_sale\": \"0\",\n\"ctr\": 11.9,\n...\n\"sent_at\": \"2023-08-03\",\n\"country_id\": 13,\n\"is_sent\": \"20\",\n\"is_clicked\": \"0\",\n\"is_lead\": \"0\",\n\"is_sale\": \"0\",\n\"ctr\": 0,\n...\n},\n```\nwithout `groupByAll` parameter the response will be grouped by the first column in `rowGroupCols`.  .\nusually this response is used for the AG-grid component:\n```\n| sent_at ______ | country_id | is_sent | is_clicked | ctr __ |\n| -------------- | ---------- | ------- | ---------- | ------ |\n| [+] 2023-08-03 | 2 ________ | 230 ___ | 25 _______ | 11.9 _ |\n```\nafter this the user can expand the row and see the data for each country:\n```\n| sent_at ______ | country_id __ | is_sent | is_clicked | ctr_ |\n--------------------------------------------------------------- |\n| [-] 2023-08-03 | 2 ___________ | 230 ___ | 25 _______ | 11.9 |\n--------------------------------------------------------------- |\n| ______________ | 226 _________ | 210 ___ | 25 _______ | 11.9 |\n--------------------------------------------------------------- |\n| ______________ | 13 __________ | 20 ____ | 0 ________ | 0 __ |\n```",
                "summary": "sms.campaigns.reports",
                "tags": [
                    "SmsCampaigns"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sortModel": {
                                        "type": "array",
                                        "example": [
                                            {
                                                "sort": "asc",
                                                "colId": "updated_datetime"
                                            }
                                        ],
                                        "prefixItems": [
                                            {
                                                "$ref": "#\/components\/schemas\/App.Domain.Campaigns.Data.Reports.Sendlogs.SortModelData"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "filterModel": {
                                        "type": "array",
                                        "example": "{\"is_sent\":{\"filterType\":\"number\",\"type\":\"greaterThan\",\"filter\":5}}\n\nnote that it needs to be col_id: {FilterModel}, PHP doesn't support this kind of description.",
                                        "prefixItems": [
                                            {
                                                "type": "array",
                                                "prefixItems": [
                                                    {
                                                        "$ref": "#\/components\/schemas\/FilterModelData"
                                                    }
                                                ],
                                                "minItems": 1,
                                                "maxItems": 1,
                                                "additionalItems": false
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "rowGroupCols": {
                                        "type": "array",
                                        "example": [
                                            {
                                                "id": "campaign_id",
                                                "displayName": "Campaign_Id",
                                                "field": "campaign_id"
                                            }
                                        ],
                                        "prefixItems": [
                                            {
                                                "$ref": "#\/components\/schemas\/SmsSendlogRowGroupColsData"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "groupKeys": {
                                        "type": "array",
                                        "example": "[\"campaign_uuid\"]\nNot the column type, it's a filter of the query",
                                        "prefixItems": [
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "selectCols": {
                                        "type": "array",
                                        "prefixItems": [
                                            {
                                                "$ref": "#\/components\/schemas\/SmsSendLogFieldEnum"
                                            }
                                        ],
                                        "minItems": 1,
                                        "maxItems": 1,
                                        "additionalItems": false
                                    },
                                    "startRow": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "endRow": {
                                        "type": "integer",
                                        "minimum": 1
                                    },
                                    "groupByAll": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string",
                                                    "description": "'from' => $this->firstItem(),"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string",
                                                    "description": "'to' => $this->lastItem(),"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}\/send": {
            "post": {
                "operationId": "sms.campaigns.send",
                "tags": [
                    "SmsCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Campaign is scheduled!"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "errors": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "errors"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Campaign cannot be scheduled! Please check your campaign settings. (#NTZ)"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}\/is-ready": {
            "post": {
                "operationId": "sms.campaigns.is-ready",
                "tags": [
                    "SmsCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "is_ready": {
                                                    "type": "boolean"
                                                },
                                                "errors": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                }
                                            },
                                            "required": [
                                                "is_ready",
                                                "errors"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "is_ready": {
                                                    "type": "boolean"
                                                },
                                                "errors": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "is_ready",
                                                "errors"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}\/planner\/stop": {
            "post": {
                "operationId": "sms.campaigns.planner.stop",
                "tags": [
                    "SmsCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "errors": {
                                            "type": "array",
                                            "prefixItems": [
                                                {
                                                    "type": "string",
                                                    "example": "Campaign does not have planner"
                                                }
                                            ],
                                            "minItems": 1,
                                            "maxItems": 1,
                                            "additionalItems": false
                                        }
                                    },
                                    "required": [
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}\/stop\/{campaignSend}": {
            "post": {
                "operationId": "sms.campaigns.stop-send",
                "tags": [
                    "SmsCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "campaignSend",
                        "in": "path",
                        "required": true,
                        "description": "The campaign send ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`SmsCampaignSendResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsCampaignSendResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign send does not belong to campaign."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/campaigns\/{campaign}\/domains-cost": {
            "get": {
                "operationId": "sms.campaigns.domains-cost",
                "tags": [
                    "SmsCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`CampaignDomainsCostData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/CampaignDomainsCostData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/plans\/{plan}\/rules": {
            "get": {
                "operationId": "sms.routing.plans.rules.index",
                "tags": [
                    "SmsRoutingPlanRules"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `SmsRoutingPlanRuleResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsRoutingPlanRuleResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "sms.routing.plans.rules.store",
                "description": "To store a rule for a plan you need to specify the following fields.\nTo store a split rule you need to call the `\/api\/v1\/sms\/routing\/plans\/{plan}\/rules\/split` endpoint.",
                "summary": "sms.routing.plans.rules.store",
                "tags": [
                    "SmsRoutingPlanRules"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "country_id": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    },
                                    "network_id": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    },
                                    "network_brand_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    },
                                    "priority": {
                                        "type": "integer"
                                    },
                                    "action": {
                                        "type": "string",
                                        "description": "To create a split rule please check POST .\/rules\/split endpoint.",
                                        "enum": [
                                            "send",
                                            "drop",
                                            "filter"
                                        ]
                                    },
                                    "sms_route_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "required": [
                                    "action"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`SmsRoutingPlanRuleResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRoutingPlanRuleResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/plans\/{plan}\/rules\/{rule}": {
            "put": {
                "operationId": "sms.routing.plans.rules.update",
                "tags": [
                    "SmsRoutingPlanRules"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "rule",
                        "in": "path",
                        "required": true,
                        "description": "The rule ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sms_route_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "country_id": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    },
                                    "network_id": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    },
                                    "network_brand_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    },
                                    "priority": {
                                        "type": "integer"
                                    },
                                    "action": {
                                        "type": "string",
                                        "description": "To create a split rule please check POST .\/route\/split endpoint.",
                                        "enum": [
                                            "send",
                                            "split",
                                            "drop",
                                            "filter"
                                        ]
                                    },
                                    "action_vars": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "action"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SmsRoutingPlanRuleResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRoutingPlanRuleResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "sms.routing.plans.rules.destroy",
                "tags": [
                    "SmsRoutingPlanRules"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "rule",
                        "in": "path",
                        "required": true,
                        "description": "The rule ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/plans\/{plan}\/rules\/split": {
            "post": {
                "operationId": "sms.routing.plans.rules.split",
                "tags": [
                    "SmsRoutingPlanRules"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "country_id": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    },
                                    "network_id": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    },
                                    "network_brand_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    },
                                    "priority": {
                                        "type": "integer"
                                    },
                                    "route_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "limit": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "route_ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`SmsRoutingPlanRuleResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRoutingPlanRuleResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/plans\/{plan}\/rules\/{rule}\/split": {
            "put": {
                "operationId": "sms.routing.plans.rules.split.patch",
                "tags": [
                    "SmsRoutingPlanRules"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "rule",
                        "in": "path",
                        "required": true,
                        "description": "The rule ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "country_id": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    },
                                    "network_id": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    },
                                    "network_brand_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    },
                                    "priority": {
                                        "type": "integer"
                                    },
                                    "route_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "limit": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "route_ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SmsRoutingPlanRuleResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRoutingPlanRuleResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/plans": {
            "get": {
                "operationId": "sms.routing.plans.index",
                "tags": [
                    "SmsRoutingPlans"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "with[]",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "team"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `SmsRoutingPlanResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsRoutingPlanResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "sms.routing.plans.store",
                "tags": [
                    "SmsRoutingPlans"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "is_default": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`SmsRoutingPlanResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRoutingPlanResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/plans\/{plan}": {
            "get": {
                "operationId": "sms.routing.plans.show",
                "tags": [
                    "SmsRoutingPlans"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`SmsRoutingPlanResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRoutingPlanResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "sms.routing.plans.update",
                "tags": [
                    "SmsRoutingPlans"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "is_default": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SmsRoutingPlanResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRoutingPlanResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "sms.routing.plans.destroy",
                "tags": [
                    "SmsRoutingPlans"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/plans\/{plan}\/simulate\/country": {
            "post": {
                "operationId": "sms.routing.simulate.country",
                "tags": [
                    "SmsRoutingPlans"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "network_id": {
                                        "type": "integer"
                                    },
                                    "counter": {
                                        "type": "integer",
                                        "minimum": 0
                                    }
                                },
                                "required": [
                                    "country_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SimulateResponseData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/plans\/{plan}\/simulate\/routes": {
            "post": {
                "operationId": "sms.routing.simulate.routes",
                "tags": [
                    "SmsRoutingPlans"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filter_segment_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "segment_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "contacts_count": {
                                                        "type": "integer"
                                                    },
                                                    "country_id": {
                                                        "type": "integer"
                                                    },
                                                    "network_id": {
                                                        "type": [
                                                            "integer",
                                                            "null"
                                                        ]
                                                    },
                                                    "network_brand": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "routes": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "company_id": {
                                                                    "type": "string"
                                                                },
                                                                "cost": {
                                                                    "type": "number"
                                                                },
                                                                "rate_id": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "id",
                                                                "name",
                                                                "company_id",
                                                                "cost",
                                                                "rate_id"
                                                            ]
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "contacts_count",
                                                    "country_id",
                                                    "network_id",
                                                    "network_brand",
                                                    "routes"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/plans\/{plan}\/simulate\/rules": {
            "post": {
                "operationId": "sms.routing.simulate.rules",
                "tags": [
                    "SmsRoutingPlans"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filter_segment_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "segment_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "sms_routing_rule_id": {
                                                        "type": "string"
                                                    },
                                                    "contacts_count": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "sms_routing_rule_id",
                                                    "contacts_count"
                                                ]
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/plans\/{plan}\/simulate\/segments": {
            "post": {
                "operationId": "sms.routing.simulate.segments",
                "tags": [
                    "SmsRoutingPlans"
                ],
                "parameters": [
                    {
                        "name": "plan",
                        "in": "path",
                        "required": true,
                        "description": "The plan ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "filter_segment_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "counter": {
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "segment_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "uuid"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SimulateResponseData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/rates\/inboxes": {
            "get": {
                "operationId": "sms.routing.rates.inboxes",
                "tags": [
                    "SmsRoutingRates"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `RateInboxResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/RateInboxResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/rates\/inboxes\/aliases\/{route}": {
            "post": {
                "operationId": "sms.routing.rates.inboxes.aliases",
                "tags": [
                    "SmsRoutingRates"
                ],
                "parameters": [
                    {
                        "name": "route",
                        "in": "path",
                        "required": true,
                        "description": "The route ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "emails": {
                                        "type": [
                                            "array",
                                            "null"
                                        ],
                                        "items": {
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "minItems": 0,
                                        "maxItems": 5
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/rates\/inboxes\/messages": {
            "get": {
                "operationId": "sms.routing.rates.inboxes.messages",
                "tags": [
                    "SmsRoutingRates"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `SmsRoutePriceMessageResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsRoutePriceMessageResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/rates\/inboxes\/messages\/{message}\/logs": {
            "get": {
                "operationId": "sms.routing.rates.inboxes.messages.logs",
                "tags": [
                    "SmsRoutingRates"
                ],
                "parameters": [
                    {
                        "name": "message",
                        "in": "path",
                        "required": true,
                        "description": "The message ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "rate_created",
                                    "rate_updated",
                                    "rate_deleted",
                                    "rate_failed",
                                    "rate_no_changes",
                                    "network_created",
                                    "network_updated"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `SmsRoutePriceMessageLogResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsRoutePriceMessageLogResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/rates\/updates": {
            "get": {
                "operationId": "sms.routing.rates.updates",
                "tags": [
                    "SmsRoutingRates"
                ],
                "parameters": [
                    {
                        "name": "route_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "route_rate_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "message_id",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "enum": [
                                "smsRoute",
                                "country",
                                "network",
                                "message"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `SmsRoutePriceUpdateResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsRoutePriceUpdateResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/rates\/logs": {
            "get": {
                "operationId": "sms.routing.rates.logs",
                "tags": [
                    "SmsRoutingRates"
                ],
                "responses": {
                    "200": {
                        "description": "`SmsRoutingLogsCollection`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/SmsRoutingLogsCollection"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/rates": {
            "get": {
                "operationId": "sms.routing.rates.index",
                "tags": [
                    "SmsRoutingRates"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `SmsRoutingRateResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsRoutingRateResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "sms.routing.rates.store",
                "tags": [
                    "SmsRoutingRates"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "rate": {
                                        "type": "number"
                                    },
                                    "country_id": {
                                        "type": "number"
                                    },
                                    "sms_route_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "network_id": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    },
                                    "network_brand_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    }
                                },
                                "required": [
                                    "rate",
                                    "country_id",
                                    "sms_route_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`SmsRoutingRateResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRoutingRateResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/rates\/{rate}": {
            "put": {
                "operationId": "sms.routing.rates.update",
                "tags": [
                    "SmsRoutingRates"
                ],
                "parameters": [
                    {
                        "name": "rate",
                        "in": "path",
                        "required": true,
                        "description": "The rate ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "rate": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "rate"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SmsRoutingRateResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRoutingRateResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "sms.routing.rates.destroy",
                "tags": [
                    "SmsRoutingRates"
                ],
                "parameters": [
                    {
                        "name": "rate",
                        "in": "path",
                        "required": true,
                        "description": "The rate ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "null"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/rates\/countries": {
            "get": {
                "operationId": "sms.routing.rates.countries",
                "tags": [
                    "SmsRoutingRates"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sms_route_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "company_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "country_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `SmsRoutingRateCountryResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsRoutingRateCountryResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/rates\/operators": {
            "get": {
                "operationId": "sms.routing.rates.operators",
                "tags": [
                    "SmsRoutingRates"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sms_route_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "company_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "country_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "number"
                            }
                        }
                    },
                    {
                        "name": "network_brand_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `SmsRoutingRateOperatorResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsRoutingRateOperatorResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/routes": {
            "get": {
                "operationId": "sms.routing.routes.index",
                "tags": [
                    "SmsRoutingRoutes"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_connected",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1",
                                "pending"
                            ]
                        }
                    },
                    {
                        "name": "show_balance",
                        "in": "query",
                        "description": "smsRouteRates slows down the response",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "connection",
                                    "smsRoutingCompany"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `SmsRoutingRouteResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsRoutingRouteResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "sms.routing.routes.store",
                "tags": [
                    "SmsRoutingRoutes"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "company_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "connection_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "clicks_webhook_url": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uri"
                                    }
                                },
                                "required": [
                                    "name",
                                    "company_id",
                                    "connection_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SmsRoutingRouteResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRoutingRouteResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/routes\/{route}": {
            "put": {
                "operationId": "sms.routing.routes.update",
                "tags": [
                    "SmsRoutingRoutes"
                ],
                "parameters": [
                    {
                        "name": "route",
                        "in": "path",
                        "required": true,
                        "description": "The route ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "connection_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "clicks_webhook_url": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uri"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SmsRoutingRouteResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRoutingRouteResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "sms.routing.routes.destroy",
                "tags": [
                    "SmsRoutingRoutes"
                ],
                "parameters": [
                    {
                        "name": "route",
                        "in": "path",
                        "required": true,
                        "description": "The route ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/routes\/{connection_id}\/logs": {
            "get": {
                "operationId": "sms.routing.routes.logs",
                "tags": [
                    "SmsRoutingRoutes"
                ],
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "0",
                                    "1",
                                    "null"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `SmsRouteConnectionLogResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/SmsRouteConnectionLogResource"
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "links",
                                        "meta"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/routes\/smpp-connections": {
            "post": {
                "operationId": "sms.routing.routes.smpp-connections.store",
                "tags": [
                    "SmsRoutingSmppConnections"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "url": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    },
                                    "dlr_url": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "dlr_port": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    },
                                    "workers_count": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ],
                                        "minimum": 1,
                                        "maximum": 10
                                    },
                                    "workers_delay": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    },
                                    "system_type": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "url",
                                    "username",
                                    "password",
                                    "port"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SmsRouteSmppConnectionResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRouteSmppConnectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/routes\/smpp-connections\/test": {
            "post": {
                "operationId": "sms.routing.routes.smpp-connections.test",
                "tags": [
                    "SmsRoutingSmppConnections"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "url": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    },
                                    "dlr_url": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "dlr_port": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    },
                                    "workers_count": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ],
                                        "minimum": 1,
                                        "maximum": 10
                                    },
                                    "workers_delay": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    },
                                    "system_type": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "url",
                                    "username",
                                    "password",
                                    "port"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "required": [
                                                "success"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "success"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/routes\/smpp-connections\/{smpp}": {
            "post": {
                "operationId": "sms.routing.routes.smpp-connections.update",
                "tags": [
                    "SmsRoutingSmppConnections"
                ],
                "parameters": [
                    {
                        "name": "smpp",
                        "in": "path",
                        "required": true,
                        "description": "The smpp ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "url": {
                                        "type": "string"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    },
                                    "dlr_url": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "dlr_port": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    },
                                    "workers_count": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ],
                                        "minimum": 1,
                                        "maximum": 10
                                    },
                                    "workers_delay": {
                                        "type": [
                                            "number",
                                            "null"
                                        ]
                                    },
                                    "system_type": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "url",
                                    "username",
                                    "password",
                                    "port"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`SmsRouteSmppConnectionResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRouteSmppConnectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/routes\/smpp-connections\/{smpp_connection}\/view": {
            "get": {
                "operationId": "sms.routing.routes.smpp-connections.show",
                "tags": [
                    "SmsRoutingSmppConnections"
                ],
                "parameters": [
                    {
                        "name": "smpp_connection",
                        "in": "path",
                        "required": true,
                        "description": "The smpp connection ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`SmsRouteSmppConnectionResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/SmsRouteSmppConnectionResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/test-sms": {
            "get": {
                "operationId": "sms.routing.test-sms.index",
                "tags": [
                    "SmsRoutingTest"
                ]
            },
            "post": {
                "operationId": "sms.routing.test-sms.store",
                "tags": [
                    "SmsRoutingTest"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sms_route_id": {
                                        "type": "integer"
                                    },
                                    "phone_number": {
                                        "type": "string"
                                    },
                                    "content": {
                                        "type": "string"
                                    },
                                    "sender_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    }
                                },
                                "required": [
                                    "sms_route_id",
                                    "phone_number",
                                    "content"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Test SMS submitted to queue"
                                        },
                                        "sms_id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "sms_id"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/routing\/test-sms\/{test_sm}": {
            "get": {
                "operationId": "sms.routing.test-sms.show",
                "tags": [
                    "SmsRoutingTest"
                ],
                "parameters": [
                    {
                        "name": "test_sm",
                        "in": "path",
                        "required": true,
                        "description": "The test sm ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "country_id": {
                                            "type": "string"
                                        },
                                        "cost": {
                                            "type": "string"
                                        },
                                        "sent_at": {
                                            "type": "string"
                                        },
                                        "fail_reason": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "country_id",
                                        "cost",
                                        "sent_at",
                                        "fail_reason"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/texts\/generate\/simulate": {
            "post": {
                "operationId": "sms.simulate",
                "tags": [
                    "SmsTextsGenerate"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "instruction": {
                                        "type": "string",
                                        "maxLength": 200
                                    }
                                },
                                "required": [
                                    "instruction"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "required": [
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "error": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "error"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/sms\/texts\/generate\/{smsCampaignText}": {
            "get": {
                "operationId": "sms.index",
                "tags": [
                    "SmsTextsGenerate"
                ],
                "parameters": [
                    {
                        "name": "smsCampaignText",
                        "in": "path",
                        "required": true,
                        "description": "The sms campaign text ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `GeneratedTextsResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/GeneratedTextsResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "An error",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Error overview.",
                                            "example": ""
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/auth\/google\/redirect": {
            "get": {
                "operationId": "google.redirect",
                "tags": [
                    "Socialite"
                ],
                "parameters": [
                    {
                        "name": "http_origin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "redirect_url": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Redirecting to Google for authentication."
                                        }
                                    },
                                    "required": [
                                        "redirect_url",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/auth\/google\/callback": {
            "get": {
                "operationId": "google.callback",
                "tags": [
                    "Socialite"
                ],
                "parameters": [
                    {
                        "name": "http_origin",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "authuser",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prompt",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to authenticate with Google. Please try again."
                                        }
                                    },
                                    "required": [
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "access_token",
                                        "token_type",
                                        "expires_in"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/hub\/endpoints\/{endpoint}\/static-client-rates": {
            "get": {
                "operationId": "hub.static-client-rates.index",
                "tags": [
                    "StaticClientRates"
                ],
                "parameters": [
                    {
                        "name": "endpoint",
                        "in": "path",
                        "required": true,
                        "description": "The endpoint ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `StaticClientRateResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/StaticClientRateResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "post": {
                "operationId": "hub.static-client-rates.store",
                "tags": [
                    "StaticClientRates"
                ],
                "parameters": [
                    {
                        "name": "endpoint",
                        "in": "path",
                        "required": true,
                        "description": "The endpoint ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "sms_route_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "network_brand_id": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "format": "uuid"
                                    },
                                    "network_id": {
                                        "type": [
                                            "integer",
                                            "null"
                                        ]
                                    },
                                    "rate": {
                                        "type": "number",
                                        "minimum": 0
                                    }
                                },
                                "required": [
                                    "country_id",
                                    "rate"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`StaticClientRateResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/StaticClientRateResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/hub\/endpoints\/{endpoint}\/static-client-rates\/{static_client_rate}": {
            "get": {
                "operationId": "hub.static-client-rates.show",
                "tags": [
                    "StaticClientRates"
                ],
                "parameters": [
                    {
                        "name": "endpoint",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "static_client_rate",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "put": {
                "operationId": "hub.static-client-rates.update",
                "tags": [
                    "StaticClientRates"
                ],
                "parameters": [
                    {
                        "name": "endpoint",
                        "in": "path",
                        "required": true,
                        "description": "The endpoint ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "static_client_rate",
                        "in": "path",
                        "required": true,
                        "description": "The static client rate ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "rate": {
                                        "type": "number",
                                        "minimum": 0
                                    }
                                },
                                "required": [
                                    "rate"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`StaticClientRateResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/StaticClientRateResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "hub.static-client-rates.destroy",
                "tags": [
                    "StaticClientRates"
                ],
                "parameters": [
                    {
                        "name": "endpoint",
                        "in": "path",
                        "required": true,
                        "description": "The endpoint ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "static_client_rate",
                        "in": "path",
                        "required": true,
                        "description": "The static client rate ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/teams\/accept-invite\/{invitation}": {
            "post": {
                "operationId": "teams.accept-invite",
                "tags": [
                    "TeamInvitations"
                ],
                "parameters": [
                    {
                        "name": "invitation",
                        "in": "path",
                        "required": true,
                        "description": "The invitation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/teams\/{team}\/invitations": {
            "get": {
                "operationId": "teams.invitations.index",
                "tags": [
                    "TeamInvitations"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "if (! $request->user()->hasTeamPermission($team, 'team:management')) {\nreturn response()->json(['message' => 'Action not allowed'], 403);\n}",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "teams.invitations.store",
                "tags": [
                    "TeamInvitations"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "member"
                                        ]
                                    },
                                    "emails": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "minItems": 1,
                                        "maxItems": 15
                                    }
                                },
                                "required": [
                                    "emails"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invitations created"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Invalid origin"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Action not allowed"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/teams\/{team}\/invitations\/{invitation}": {
            "delete": {
                "operationId": "teams.invitations.destroy",
                "tags": [
                    "TeamInvitations"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "invitation",
                        "in": "path",
                        "required": true,
                        "description": "The invitation ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Action not allowed"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/teams\/{team}\/create-user": {
            "post": {
                "operationId": "teams.create-user",
                "tags": [
                    "TeamInvitations"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "member"
                                        ]
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created and added to team successfully"
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "role"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "user"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Action not allowed"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/billing\/invoices": {
            "get": {
                "operationId": "billing.invoices.index",
                "tags": [
                    "TeamInvoices"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "schema": {
                            "type": [
                                "string",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `TeamInvoiceResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/TeamInvoiceResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/billing\/invoices\/{invoice}\/download": {
            "get": {
                "operationId": "billing.invoices.download",
                "tags": [
                    "TeamInvoices"
                ],
                "parameters": [
                    {
                        "name": "invoice",
                        "in": "path",
                        "required": true,
                        "description": "The invoice ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/platform\/team\/tokens": {
            "get": {
                "operationId": "tokens.index",
                "tags": [
                    "TeamTokens"
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `TeamAccessTokenData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/TeamAccessTokenData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "tokens.store",
                "tags": [
                    "TeamTokens"
                ],
                "requestBody": {
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": [
                                            "string",
                                            "null"
                                        ]
                                    },
                                    "scope_all": {
                                        "type": "boolean",
                                        "description": "if true will allow all scopes"
                                    },
                                    "scopes": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "method": {
                                                    "type": "string",
                                                    "enum": [
                                                        "get",
                                                        "post",
                                                        "patch",
                                                        "delete",
                                                        "*"
                                                    ]
                                                },
                                                "endpoint": {
                                                    "type": "string",
                                                    "description": "\\* is a wildcard for all endpoints"
                                                },
                                                "reason": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "method",
                                                "endpoint"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`TeamAccessTokenData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/TeamAccessTokenData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/platform\/team\/tokens\/{id}": {
            "delete": {
                "operationId": "tokens.destroy",
                "tags": [
                    "TeamTokens"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/teams": {
            "get": {
                "operationId": "teams.index",
                "tags": [
                    "UserTeams"
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `UserTeamData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/UserTeamData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "teams.store",
                "tags": [
                    "UserTeams"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`UserTeamData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/UserTeamData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/teams\/{team}": {
            "put": {
                "operationId": "teams.update",
                "tags": [
                    "UserTeams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "currency": {
                                        "type": "string",
                                        "enum": [
                                            "EUR",
                                            "USD",
                                            "GBP"
                                        ]
                                    }
                                },
                                "required": [
                                    "name",
                                    "currency"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`UserTeamData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/UserTeamData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Action not allowed"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/teams\/{team}\/switch": {
            "post": {
                "operationId": "teams.switch",
                "tags": [
                    "UserTeams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Team switched"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Already on this team"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/teams\/{team}\/members": {
            "get": {
                "operationId": "teams.members",
                "tags": [
                    "UserTeams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The collection of `UserData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/UserData"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not a member of this team"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/teams\/{team}\/member\/{user}": {
            "put": {
                "operationId": "teams.update-member",
                "tags": [
                    "UserTeams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "member"
                                        ]
                                    }
                                },
                                "required": [
                                    "role"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Role updated"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Action not allowed"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "teams.detach-member",
                "tags": [
                    "UserTeams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "user",
                        "in": "path",
                        "required": true,
                        "description": "The user ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Cannot remove team owner"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Cannot remove user from last team"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Cannot remove own user"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Action not allowed"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/teams\/{team}\/onboarding": {
            "get": {
                "operationId": "teams.onboarding.get",
                "tags": [
                    "UserTeams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not a member of this team"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "teams.onboarding.update",
                "tags": [
                    "UserTeams"
                ],
                "parameters": [
                    {
                        "name": "team",
                        "in": "path",
                        "required": true,
                        "description": "The team ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "onboarding_data": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "onboarding_data"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Onboarding data updated"
                                        },
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not a member of this team"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/verify-email\/{id}\/{hash}": {
            "get": {
                "operationId": "verification.verify",
                "tags": [
                    "VerifyEmail"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "The id ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    }
                }
            }
        },
        "\/v1\/voice\/accounts": {
            "get": {
                "operationId": "voice.accounts.index",
                "tags": [
                    "VoiceAccounts"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "voice.accounts.store",
                "tags": [
                    "VoiceAccounts"
                ],
                "requestBody": {
                    "description": "`VoiceAccountMetaDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/VoiceAccountMetaDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/voice\/accounts\/{account}": {
            "get": {
                "operationId": "voice.accounts.show",
                "tags": [
                    "VoiceAccounts"
                ],
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "required": true,
                        "description": "The account ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/VoiceAccount"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "voice.accounts.update",
                "tags": [
                    "VoiceAccounts"
                ],
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "required": true,
                        "description": "The account ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`VoiceAccountUpdateDataRequest`",
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/VoiceAccountUpdateDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$ref": "#\/components\/schemas\/VoiceAccount"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "voice.accounts.destroy",
                "tags": [
                    "VoiceAccounts"
                ],
                "parameters": [
                    {
                        "name": "account",
                        "in": "path",
                        "required": true,
                        "description": "The account ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Voice account deleted"
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/campaigns": {
            "get": {
                "operationId": "voice.campaigns.index",
                "tags": [
                    "VoiceCampaigns"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": [
                                "integer",
                                "null"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search_ids",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "uuid"
                            }
                        }
                    },
                    {
                        "name": "with[]",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "sends"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of `VoiceCampaignResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#\/components\/schemas\/VoiceCampaignResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "voice.campaigns.store",
                "tags": [
                    "VoiceCampaigns"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "`VoiceCampaignResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoiceCampaignResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/campaigns\/{campaign}": {
            "get": {
                "operationId": "voice.campaigns.show",
                "tags": [
                    "VoiceCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "with[]",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "sends"
                                ]
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`VoiceCampaignResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoiceCampaignResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "voice.campaigns.update",
                "tags": [
                    "VoiceCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "`VoiceCampaignDataRequest`",
                    "content": {
                        "application\/json": {
                            "schema": {
                                "$ref": "#\/components\/schemas\/VoiceCampaignDataRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "`VoiceCampaignData`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoiceCampaignData"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    }
                }
            }
        },
        "\/v1\/voice\/campaigns\/{campaign}\/send": {
            "post": {
                "operationId": "voice.campaigns.send",
                "tags": [
                    "VoiceCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Campaign is scheduled!"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "`VoiceCampaignResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoiceCampaignResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Campaign is already running."
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Campaign cannot be scheduled! Please check your campaign settings. (#NTZ)"
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/campaigns\/{campaign}\/stop\/{campaignSend}": {
            "post": {
                "operationId": "voice.campaigns.stop-send",
                "tags": [
                    "VoiceCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "campaignSend",
                        "in": "path",
                        "required": true,
                        "description": "The campaign send ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`VoiceCampaignSendResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoiceCampaignSendResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign send does not belong to campaign."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/campaigns\/{campaign}\/stop-recurring-sends": {
            "post": {
                "operationId": "voice.campaigns.stop-recurring-sends",
                "tags": [
                    "VoiceCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`VoiceCampaignResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoiceCampaignResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Campaign is not active."
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Campaign is not recurring."
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/voice\/campaigns\/{campaign}\/stop-feed": {
            "post": {
                "operationId": "voice.campaigns.stop-feed",
                "tags": [
                    "VoiceCampaigns"
                ],
                "parameters": [
                    {
                        "name": "campaign",
                        "in": "path",
                        "required": true,
                        "description": "The campaign ID",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`VoiceCampaignResource`",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#\/components\/schemas\/VoiceCampaignResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Campaign is not a feed campaign."
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#\/components\/responses\/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        },
        "\/v1\/billing\/wire-transfers": {
            "post": {
                "operationId": "billing.wire-transfers.store",
                "tags": [
                    "WireTransfers"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application\/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "minimum": 100
                                    },
                                    "reference": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "amount",
                                    "reference"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wire transfer created"
                                        },
                                        "wire_transfer_id": {
                                            "type": "string"
                                        },
                                        "invoice_id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "wire_transfer_id",
                                        "invoice_id"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#\/components\/responses\/ValidationException"
                    },
                    "401": {
                        "$ref": "#\/components\/responses\/AuthenticationException"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "http": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "ActionOnRateChangeEnum": {
                "type": "string",
                "enum": [
                    "approve",
                    "reject"
                ],
                "title": "ActionOnRateChangeEnum"
            },
            "AgentMetaData": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "greeting_message": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "prompt": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "tools": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "post_processing_agents": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "variables": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "voice_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "voice_name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "gpt_model_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "language": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "default": "multi"
                    },
                    "time_limit": {
                        "type": "integer",
                        "default": 120,
                        "minimum": 1
                    },
                    "start_with_greeting": {
                        "type": "boolean",
                        "default": false
                    },
                    "millis_sip_endpoint": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "voice_speed": {
                        "type": "number",
                        "default": 1,
                        "minimum": 0,
                        "maximum": 2
                    },
                    "background_noise": {
                        "type": "boolean",
                        "default": false
                    },
                    "suggestion_reason": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "provider": {
                        "type": "string",
                        "default": "openai"
                    },
                    "model": {
                        "type": "string",
                        "default": "gpt-4o"
                    },
                    "voice_provider": {
                        "type": "string",
                        "default": "vapi"
                    },
                    "voice_model": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "default": "eleven_turbo_v2"
                    },
                    "agent_description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "silence_timeout_seconds": {
                        "type": "integer",
                        "default": 15,
                        "minimum": 1,
                        "maximum": 3600
                    },
                    "voice_mail_detection": {
                        "type": "boolean",
                        "default": true
                    },
                    "speaking_plan_num_words": {
                        "type": "integer",
                        "default": 3,
                        "minimum": 1,
                        "maximum": 10
                    },
                    "pixel_is_lead": {
                        "type": "boolean",
                        "default": false
                    },
                    "pixel_is_sale": {
                        "type": "boolean",
                        "default": false
                    },
                    "pixel_sale_amount": {
                        "type": "integer",
                        "default": 0
                    }
                },
                "required": [
                    "name",
                    "greeting_message",
                    "prompt",
                    "tools",
                    "post_processing_agents",
                    "variables",
                    "voice_id",
                    "voice_name",
                    "gpt_model_id",
                    "language",
                    "time_limit",
                    "start_with_greeting",
                    "millis_sip_endpoint",
                    "voice_speed",
                    "background_noise",
                    "suggestion_reason",
                    "provider",
                    "model",
                    "voice_provider",
                    "voice_model",
                    "agent_description",
                    "silence_timeout_seconds",
                    "voice_mail_detection",
                    "speaking_plan_num_words",
                    "pixel_is_lead",
                    "pixel_is_sale",
                    "pixel_sale_amount"
                ],
                "title": "AgentMetaData"
            },
            "AgentMetaDataRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "greeting_message": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "prompt": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "tools": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "post_processing_agents": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "variables": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "voice_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "voice_name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "gpt_model_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "language": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "default": "multi"
                    },
                    "time_limit": {
                        "type": "integer",
                        "default": 120,
                        "minimum": 1
                    },
                    "start_with_greeting": {
                        "type": "boolean",
                        "default": false
                    },
                    "millis_sip_endpoint": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "voice_speed": {
                        "type": "number",
                        "default": 1,
                        "minimum": 0,
                        "maximum": 2
                    },
                    "background_noise": {
                        "type": "boolean",
                        "default": false
                    },
                    "suggestion_reason": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "provider": {
                        "type": "string",
                        "default": "openai"
                    },
                    "model": {
                        "type": "string",
                        "default": "gpt-4o"
                    },
                    "voice_provider": {
                        "type": "string",
                        "default": "vapi"
                    },
                    "voice_model": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "default": "eleven_turbo_v2"
                    },
                    "agent_description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "silence_timeout_seconds": {
                        "type": "integer",
                        "default": 15,
                        "minimum": 1,
                        "maximum": 3600
                    },
                    "voice_mail_detection": {
                        "type": "boolean",
                        "default": true
                    },
                    "speaking_plan_num_words": {
                        "type": "integer",
                        "default": 3,
                        "minimum": 1,
                        "maximum": 10
                    },
                    "pixel_is_lead": {
                        "type": "boolean",
                        "default": false
                    },
                    "pixel_is_sale": {
                        "type": "boolean",
                        "default": false
                    },
                    "pixel_sale_amount": {
                        "type": "integer",
                        "default": 0
                    }
                },
                "title": "AgentMetaDataRequest"
            },
            "AgentPostProcessing": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "meta": {
                        "type": "array",
                        "items": {}
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "meta",
                    "team_id",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "title": "AgentPostProcessing"
            },
            "AgentPostProcessingMetaData": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tools": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name",
                    "tools"
                ],
                "title": "AgentPostProcessingMetaData"
            },
            "AgentPostProcessingMetaDataRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "tools": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name"
                ],
                "title": "AgentPostProcessingMetaDataRequest"
            },
            "AgentPostProcessingResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/AgentPostProcessingMetaData"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "meta",
                    "created_at",
                    "updated_at"
                ],
                "title": "AgentPostProcessingResource"
            },
            "AgentPromptResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "agent_id": {
                        "type": "string"
                    },
                    "welcome_message": {
                        "type": "string"
                    },
                    "prompt": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "voice_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "voice_name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "agent_id",
                    "welcome_message",
                    "prompt",
                    "voice_id",
                    "voice_name",
                    "created_at"
                ],
                "title": "AgentPromptResource"
            },
            "AgentResource": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/AgentMetaData"
                    },
                    "default_voice": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string",
                                "example": "Eric"
                            }
                        },
                        "required": [
                            "id",
                            "name"
                        ]
                    },
                    "prompts": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/AgentPromptResource"
                        }
                    },
                    "team_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "name",
                    "meta",
                    "default_voice",
                    "prompts",
                    "team_id"
                ],
                "title": "AgentResource"
            },
            "AgentToolMetaData": {
                "type": "object",
                "properties": {
                    "tool_type": {
                        "type": "string",
                        "enum": [
                            "webhook",
                            "hangup_call",
                            "update_contact",
                            "update_call",
                            "unsubscribe",
                            "send_sms"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endpoint_url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "endpoint_method": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    },
                    "parameters": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "string",
                                        "number",
                                        "date",
                                        "boolean",
                                        "select"
                                    ]
                                },
                                "description": {
                                    "type": "string"
                                },
                                "example": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "mark_as_qualified": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "tool_type",
                    "name",
                    "description",
                    "endpoint_url",
                    "endpoint_method",
                    "parameters",
                    "mark_as_qualified"
                ],
                "title": "AgentToolMetaData"
            },
            "AgentToolMetaDataRequest": {
                "type": "object",
                "properties": {
                    "tool_type": {
                        "type": "string",
                        "enum": [
                            "webhook",
                            "hangup_call",
                            "update_contact",
                            "update_call",
                            "unsubscribe",
                            "send_sms"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "endpoint_url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "endpoint_method": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ]
                    },
                    "parameters": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "string",
                                        "number",
                                        "date",
                                        "boolean",
                                        "select"
                                    ]
                                },
                                "description": {
                                    "type": "string"
                                },
                                "example": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "mark_as_qualified": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "tool_type",
                    "name",
                    "description"
                ],
                "title": "AgentToolMetaDataRequest"
            },
            "AgentToolsResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/AgentToolMetaData"
                    }
                },
                "required": [
                    "id",
                    "team_id",
                    "meta"
                ],
                "title": "AgentToolsResource"
            },
            "ApiSendLogFieldEnum": {
                "type": "string",
                "enum": [
                    "id",
                    "endpoint_id",
                    "seller_team_id",
                    "sms_route_id",
                    "sms_routing_plan_id",
                    "client_company_id",
                    "vendor_company_id",
                    "foreign_id",
                    "country_id",
                    "network_id",
                    "network_brand",
                    "network_brand_id",
                    "source_addr",
                    "destination_addr",
                    "message_payload",
                    "dlr_status",
                    "cost",
                    "profit",
                    "created_at",
                    "sent_at",
                    "sar_total_segments",
                    "is_sent",
                    "is_clicked",
                    "is_lead",
                    "is_sale",
                    "is_delivered",
                    "sms_route_ids",
                    "country_ids",
                    "endpoint_tags",
                    "automation_node_ids"
                ],
                "title": "ApiSendLogFieldEnum"
            },
            "ApiSendlogRowGroupColsData": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#\/components\/schemas\/ApiSendLogFieldEnum"
                    },
                    "show_as": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "minute",
                            "hour",
                            "date",
                            "year-week",
                            "year-month"
                        ]
                    },
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "displayName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "field",
                    "show_as",
                    "id",
                    "displayName"
                ],
                "title": "ApiSendlogRowGroupColsData"
            },
            "App.Domain.Campaigns.Data.Reports.Sendlogs.SortModelData": {
                "type": "object",
                "properties": {
                    "colId": {
                        "$ref": "#\/components\/schemas\/SmsSendLogFieldEnum"
                    },
                    "sort": {
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    }
                },
                "required": [
                    "colId",
                    "sort"
                ],
                "title": "App.Domain.Campaigns.Data.Reports.Sendlogs.SortModelData"
            },
            "AudienceFeedLogData": {
                "type": "object",
                "properties": {
                    "feed_id": {
                        "type": "string"
                    },
                    "feed_data": {
                        "$ref": "#\/components\/schemas\/ContactFeedData"
                    },
                    "error_message": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_new": {
                        "type": "boolean"
                    },
                    "is_success": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "date_created": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "feed_id",
                    "feed_data",
                    "error_message",
                    "is_new",
                    "is_success",
                    "date_created"
                ],
                "title": "AudienceFeedLogData"
            },
            "AudienceFeedResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {}
                    },
                    "logs_count": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "team_id",
                    "name",
                    "token",
                    "tags",
                    "created_at"
                ],
                "title": "AudienceFeedResource"
            },
            "AuthTypeEnum": {
                "type": "string",
                "enum": [
                    "none",
                    "basic",
                    "bearer",
                    "custom"
                ],
                "title": "AuthTypeEnum"
            },
            "Automation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "is_active": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "type",
                    "meta",
                    "team_id",
                    "created_at",
                    "updated_at",
                    "deleted_at",
                    "is_active"
                ],
                "title": "Automation"
            },
            "BalanceCheckerData": {
                "type": "object",
                "properties": {
                    "balance_checker": {
                        "$ref": "#\/components\/schemas\/BalanceCheckerTypeEnum"
                    },
                    "balance_regex": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "api_auth_type": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/AuthTypeEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "api_auth_data": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "balance_endpoint_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "balance_endpoint_method": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "GET",
                            "POST"
                        ]
                    },
                    "balance_json_path": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "notification_if_no_data_x_days": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 1
                    }
                },
                "required": [
                    "balance_checker",
                    "balance_regex",
                    "api_auth_type",
                    "api_auth_data",
                    "balance_endpoint_url",
                    "balance_endpoint_method",
                    "balance_json_path",
                    "notification_if_no_data_x_days"
                ],
                "title": "BalanceCheckerData"
            },
            "BalanceCheckerDataRequest": {
                "type": "object",
                "properties": {
                    "balance_checker": {
                        "$ref": "#\/components\/schemas\/BalanceCheckerTypeEnum"
                    },
                    "balance_regex": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "api_auth_type": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/AuthTypeEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "api_auth_data": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "balance_endpoint_url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "balance_endpoint_method": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "GET",
                            "POST"
                        ]
                    },
                    "balance_json_path": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "notification_if_no_data_x_days": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 1
                    }
                },
                "title": "BalanceCheckerDataRequest"
            },
            "BalanceCheckerResponseData": {
                "type": "object",
                "properties": {
                    "status_code": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "balance": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "raw_response": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "error": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "status_code",
                    "balance",
                    "raw_response",
                    "error"
                ],
                "title": "BalanceCheckerResponseData"
            },
            "BalanceCheckerTypeEnum": {
                "type": "string",
                "enum": [
                    "api",
                    "email",
                    "none"
                ],
                "title": "BalanceCheckerTypeEnum"
            },
            "BillingInformationDataRequest": {
                "type": "object",
                "properties": {
                    "organization_name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "billing_email": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "vat_number": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "address": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "city": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "zip": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "country": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "BillingInformationDataRequest"
            },
            "CallOutcomeClassifierLogResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "call_id": {
                        "type": "string"
                    },
                    "call_outcome_classifier_id": {
                        "type": "string"
                    },
                    "call_outcome_classifier_run_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "initial_call_outcome": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "new_call_outcome": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "status": {
                        "type": "string"
                    },
                    "failure_reason": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "team_id",
                    "call_id",
                    "call_outcome_classifier_id",
                    "call_outcome_classifier_run_id",
                    "initial_call_outcome",
                    "new_call_outcome",
                    "status",
                    "failure_reason",
                    "created_at"
                ],
                "title": "CallOutcomeClassifierLogResource"
            },
            "CallOutcomeClassifierResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "prompt": {
                        "type": "string"
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "ver": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "team_id",
                    "name",
                    "prompt",
                    "meta",
                    "is_active",
                    "ver",
                    "created_at",
                    "updated_at"
                ],
                "title": "CallOutcomeClassifierResource"
            },
            "CallResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "contact_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "is_processed": {
                        "type": "boolean"
                    },
                    "number_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "to_number": {
                        "type": "integer"
                    },
                    "call_agent_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "too slow\n'country_id' => NumberService::getCountryIdByNumber($this->to_number),\n'contact' => $this->_contact_info,"
                    },
                    "events_count": {
                        "type": "string"
                    },
                    "tool_logs_count": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "created_at_formatted": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "agent_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "deleted_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "voice_campaign_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "voice_campaign_send_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_answer_machine": {
                        "type": "boolean"
                    },
                    "is_answered": {
                        "type": "boolean"
                    },
                    "is_lead": {
                        "type": "boolean"
                    },
                    "is_sale": {
                        "type": "boolean"
                    },
                    "is_picked_up": {
                        "type": "boolean"
                    },
                    "chat": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "call_outcome": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "call_source": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "scheduled_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "lead_submitted_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "country_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "created_at_tz": {
                        "type": "string"
                    },
                    "date_key": {
                        "type": "string"
                    },
                    "timezone": {
                        "type": "string"
                    },
                    "vapi_ended_reason": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "call_outcome_logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/CallOutcomeClassifierLogResource"
                        }
                    }
                },
                "required": [
                    "id",
                    "team_id",
                    "contact_id",
                    "meta",
                    "is_processed",
                    "number_id",
                    "to_number",
                    "call_agent_id",
                    "events_count",
                    "tool_logs_count",
                    "created_at",
                    "created_at_formatted",
                    "updated_at",
                    "agent_id",
                    "deleted_at",
                    "voice_campaign_id",
                    "voice_campaign_send_id",
                    "is_answer_machine",
                    "is_answered",
                    "is_lead",
                    "is_sale",
                    "is_picked_up",
                    "chat",
                    "status",
                    "call_outcome",
                    "call_source",
                    "scheduled_at",
                    "lead_submitted_at",
                    "country_id",
                    "created_at_tz",
                    "date_key",
                    "timezone",
                    "vapi_ended_reason"
                ],
                "title": "CallResource"
            },
            "CampaignDomainsCostData": {
                "type": "object",
                "properties": {
                    "cost": {
                        "type": "number"
                    },
                    "required_domains": {
                        "type": "integer"
                    },
                    "max_sms_per_domain": {
                        "type": "integer"
                    },
                    "contacts_count": {
                        "type": "integer"
                    }
                },
                "required": [
                    "cost",
                    "required_domains",
                    "max_sms_per_domain",
                    "contacts_count"
                ],
                "title": "CampaignDomainsCostData"
            },
            "CampaignFeedData": {
                "type": "object",
                "properties": {
                    "days_of_week": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "enum": [
                            "Mon",
                            "Tue",
                            "Wed",
                            "Thu",
                            "Fri",
                            "Sat",
                            "Sun"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1
                    },
                    "weekly_schedule": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/WeeklyScheduleData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "feed_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    },
                    "auto_analyze": {
                        "type": "boolean",
                        "default": true
                    },
                    "hourly_calls_limit": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    }
                },
                "required": [
                    "days_of_week",
                    "weekly_schedule",
                    "feed_id",
                    "is_active",
                    "auto_analyze",
                    "hourly_calls_limit"
                ],
                "title": "CampaignFeedData"
            },
            "CampaignFeedDataRequest": {
                "type": "object",
                "properties": {
                    "days_of_week": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "enum": [
                            "Mon",
                            "Tue",
                            "Wed",
                            "Thu",
                            "Fri",
                            "Sat",
                            "Sun"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1
                    },
                    "weekly_schedule": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/WeeklyScheduleDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "feed_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    },
                    "auto_analyze": {
                        "type": "boolean",
                        "default": true
                    },
                    "hourly_calls_limit": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    }
                },
                "title": "CampaignFeedDataRequest"
            },
            "CampaignManualData": {
                "type": "object",
                "properties": {
                    "send_amount": {
                        "type": "integer",
                        "default": 200,
                        "minimum": 1
                    },
                    "send_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "throttle_batch_size": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    }
                },
                "required": [
                    "send_amount",
                    "send_datetime",
                    "throttle_batch_size"
                ],
                "title": "CampaignManualData"
            },
            "CampaignManualDataRequest": {
                "type": "object",
                "properties": {
                    "send_amount": {
                        "type": "integer",
                        "default": 200,
                        "minimum": 1
                    },
                    "send_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "throttle_batch_size": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    }
                },
                "title": "CampaignManualDataRequest"
            },
            "CampaignMultistepData": {
                "type": "object",
                "properties": {
                    "step_size": {
                        "type": "integer",
                        "default": 200,
                        "minimum": 1
                    },
                    "step_delay": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "min_ctr": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "max_sms_to_send": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "max_minutes_to_send": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "send_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_active": {
                        "type": [
                            "boolean",
                            "null"
                        ],
                        "default": true
                    }
                },
                "required": [
                    "step_size",
                    "step_delay",
                    "min_ctr",
                    "max_sms_to_send",
                    "max_minutes_to_send",
                    "send_datetime",
                    "is_active"
                ],
                "title": "CampaignMultistepData"
            },
            "CampaignMultistepDataRequest": {
                "type": "object",
                "properties": {
                    "step_size": {
                        "type": "integer",
                        "default": 200,
                        "minimum": 1
                    },
                    "step_delay": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "min_ctr": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "max_sms_to_send": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "max_minutes_to_send": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "send_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_active": {
                        "type": [
                            "boolean",
                            "null"
                        ],
                        "default": true
                    }
                },
                "title": "CampaignMultistepDataRequest"
            },
            "CampaignMultistepStatusData": {
                "type": "object",
                "properties": {
                    "current_step": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "default": 0
                    },
                    "total_available_contacts": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "default": 0
                    },
                    "total_sent": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "default": 0
                    },
                    "last_sent_timestamp": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "start_timestamp": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "initial_brands": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "default": [],
                        "items": {
                            "type": "string"
                        }
                    },
                    "steps_performance": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "default": [],
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "default": "in_progress"
                    },
                    "status_reason": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsCampaignValidationErrorEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "last_timezones": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "default": [],
                        "items": {
                            "type": "string"
                        }
                    },
                    "planner_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignPlannerData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "current_step",
                    "total_available_contacts",
                    "total_sent",
                    "last_sent_timestamp",
                    "start_timestamp",
                    "initial_brands",
                    "steps_performance",
                    "status",
                    "status_reason",
                    "last_timezones",
                    "planner_data"
                ],
                "title": "CampaignMultistepStatusData"
            },
            "CampaignMultistepStatusDataRequest": {
                "type": "object",
                "properties": {
                    "current_step": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "default": 0
                    },
                    "total_available_contacts": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "default": 0
                    },
                    "total_sent": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "default": 0
                    },
                    "last_sent_timestamp": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "start_timestamp": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "initial_brands": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "default": [],
                        "items": {
                            "type": "string"
                        }
                    },
                    "steps_performance": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "default": [],
                        "items": {
                            "type": "string"
                        }
                    },
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "default": "in_progress"
                    },
                    "status_reason": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsCampaignValidationErrorEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "last_timezones": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "default": [],
                        "items": {
                            "type": "string"
                        }
                    },
                    "planner_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignPlannerDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "title": "CampaignMultistepStatusDataRequest"
            },
            "CampaignPlannerData": {
                "type": "object",
                "properties": {
                    "days_of_week": {
                        "type": "array",
                        "enum": [
                            "Mon",
                            "Tue",
                            "Wed",
                            "Thu",
                            "Fri",
                            "Sat",
                            "Sun"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1
                    },
                    "weekly_schedule": {
                        "$ref": "#\/components\/schemas\/WeeklyScheduleData"
                    },
                    "multistep_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignMultistepData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "weekly_sms_contact_limit": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "daily_sms_contact_limit": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 1
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": [
                    "days_of_week",
                    "weekly_schedule",
                    "multistep_data",
                    "weekly_sms_contact_limit",
                    "daily_sms_contact_limit",
                    "is_active"
                ],
                "title": "CampaignPlannerData"
            },
            "CampaignPlannerDataRequest": {
                "type": "object",
                "properties": {
                    "days_of_week": {
                        "type": "array",
                        "enum": [
                            "Mon",
                            "Tue",
                            "Wed",
                            "Thu",
                            "Fri",
                            "Sat",
                            "Sun"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1
                    },
                    "weekly_schedule": {
                        "$ref": "#\/components\/schemas\/WeeklyScheduleDataRequest"
                    },
                    "multistep_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignMultistepDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "weekly_sms_contact_limit": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "daily_sms_contact_limit": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 1
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": [
                    "days_of_week",
                    "weekly_schedule"
                ],
                "title": "CampaignPlannerDataRequest"
            },
            "CampaignRecurringData": {
                "type": "object",
                "properties": {
                    "days_of_week": {
                        "type": "array",
                        "enum": [
                            "Mon",
                            "Tue",
                            "Wed",
                            "Thu",
                            "Fri",
                            "Sat",
                            "Sun"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1
                    },
                    "daily_recurring_data": {
                        "$ref": "#\/components\/schemas\/DailyRecurringData"
                    },
                    "selected_recurring_time": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SelectedRecurringTime"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "weekly_contact_limit": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "daily_contact_limit": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 1
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": [
                    "days_of_week",
                    "daily_recurring_data",
                    "selected_recurring_time",
                    "weekly_contact_limit",
                    "daily_contact_limit",
                    "is_active"
                ],
                "title": "CampaignRecurringData"
            },
            "CampaignRecurringDataRequest": {
                "type": "object",
                "properties": {
                    "days_of_week": {
                        "type": "array",
                        "enum": [
                            "Mon",
                            "Tue",
                            "Wed",
                            "Thu",
                            "Fri",
                            "Sat",
                            "Sun"
                        ],
                        "items": {
                            "type": "string"
                        },
                        "minItems": 1
                    },
                    "daily_recurring_data": {
                        "$ref": "#\/components\/schemas\/DailyRecurringDataRequest"
                    },
                    "selected_recurring_time": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SelectedRecurringTimeRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "weekly_contact_limit": {
                        "type": "integer",
                        "default": 5,
                        "minimum": 1
                    },
                    "daily_contact_limit": {
                        "type": "integer",
                        "default": 1,
                        "minimum": 1
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": [
                    "days_of_week",
                    "daily_recurring_data"
                ],
                "title": "CampaignRecurringDataRequest"
            },
            "CampaignSummaryData": {
                "type": "object",
                "properties": {
                    "contacts_total": {
                        "type": "integer"
                    },
                    "contacts_left": {
                        "type": "integer"
                    },
                    "avg_sms_per_contact": {
                        "type": "number"
                    },
                    "countries_breakdown": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "contacts_total",
                    "contacts_left",
                    "avg_sms_per_contact",
                    "countries_breakdown"
                ],
                "title": "CampaignSummaryData"
            },
            "CompanyResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "overdraft_enabled": {
                        "type": "boolean"
                    },
                    "overdraft_limit": {
                        "type": "integer"
                    },
                    "client_balance": {
                        "type": "string"
                    },
                    "vendor_balance": {
                        "type": "string"
                    },
                    "provider_balance": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "provider_balance_updated_at": {
                        "type": "string"
                    },
                    "balance_checker": {
                        "type": "string"
                    },
                    "endpoints_count": {
                        "type": "string"
                    },
                    "sms_routes_count": {
                        "type": "string"
                    },
                    "balance_checker_data": {
                        "description": "balance_checker_data",
                        "$ref": "#\/components\/schemas\/BalanceCheckerData"
                    },
                    "balance_email": {
                        "type": "string"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "minItems": 0,
                        "maxItems": 0,
                        "additionalItems": false
                    }
                },
                "required": [
                    "id",
                    "team_id",
                    "name",
                    "created_at",
                    "updated_at",
                    "is_active",
                    "overdraft_enabled",
                    "overdraft_limit",
                    "provider_balance",
                    "provider_balance_updated_at",
                    "balance_checker",
                    "endpoints_count",
                    "sms_routes_count",
                    "balance_email",
                    "links"
                ],
                "title": "CompanyResource"
            },
            "ContactFeedData": {
                "type": "object",
                "properties": {
                    "feed_token": {
                        "type": "string"
                    },
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "phone_normalized": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email_normalized": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email"
                    },
                    "country_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Required if country not set"
                    },
                    "country": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Required if country_id not set"
                    },
                    "state_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "state": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom1_str": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom2_str": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom3_str": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom4_str": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom5_str": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom1_int": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "custom2_int": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "custom3_int": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "custom4_int": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "custom5_int": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "custom1_dec": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "custom2_dec": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "custom1_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom2_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom3_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom4_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom5_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "tags": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "phone_is_good": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "phone_is_good_reason": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "feed_token",
                    "name",
                    "phone_normalized",
                    "email_normalized",
                    "country_id",
                    "country",
                    "state_id",
                    "state",
                    "custom1_str",
                    "custom2_str",
                    "custom3_str",
                    "custom4_str",
                    "custom5_str",
                    "custom1_int",
                    "custom2_int",
                    "custom3_int",
                    "custom4_int",
                    "custom5_int",
                    "custom1_dec",
                    "custom2_dec",
                    "custom1_datetime",
                    "custom2_datetime",
                    "custom3_datetime",
                    "custom4_datetime",
                    "custom5_datetime",
                    "tags",
                    "phone_is_good",
                    "phone_is_good_reason"
                ],
                "title": "ContactFeedData"
            },
            "ContactFeedDataRequest": {
                "type": "object",
                "properties": {
                    "feed_token": {
                        "type": "string"
                    },
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "phone_normalized": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email_normalized": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email"
                    },
                    "country_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Required if country not set"
                    },
                    "country": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "description": "Required if country_id not set"
                    },
                    "state_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "state": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom1_str": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom2_str": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom3_str": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom4_str": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom5_str": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom1_int": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "custom2_int": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "custom3_int": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "custom4_int": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "custom5_int": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "custom1_dec": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "custom2_dec": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "custom1_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom2_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom3_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom4_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "custom5_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "tags": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "phone_is_good": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "phone_is_good_reason": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "feed_token"
                ],
                "title": "ContactFeedDataRequest"
            },
            "ContactSmsFieldEnum": {
                "type": "string",
                "enum": [
                    "team_id",
                    "phone_normalized",
                    "contact_id",
                    "foreign_id",
                    "last_sent",
                    "last_clicked",
                    "in_cache",
                    "sent_count",
                    "clicked_count",
                    "leads_count",
                    "sales_count",
                    "profit_sum",
                    "network_brand",
                    "network_brand_id",
                    "network_id",
                    "network_reason",
                    "phone_is_good",
                    "phone_is_good_reason",
                    "name",
                    "country_id",
                    "state_id",
                    "state_id_reason",
                    "timezone_id",
                    "custom1_str",
                    "custom2_str",
                    "custom3_str",
                    "custom4_str",
                    "custom5_str",
                    "custom1_int",
                    "custom2_int",
                    "custom3_int",
                    "custom4_int",
                    "custom5_int",
                    "custom1_dec",
                    "custom2_dec",
                    "custom1_datetime",
                    "custom2_datetime",
                    "custom3_datetime",
                    "custom4_datetime",
                    "custom5_datetime",
                    "meta",
                    "date_created",
                    "date_updated",
                    "is_deleted",
                    "voice_calls_count",
                    "voice_is_qualified_count",
                    "voice_calls_is_picked_up",
                    "voice_calls_is_no_answer",
                    "voice_calls_is_answer",
                    "voice_calls_is_answer_machine",
                    "last_called",
                    "last_voice_outcome",
                    "final_voice_outcome",
                    "voice_submitted_at",
                    "tags",
                    "country_name",
                    "segment_ids",
                    "filter_segment_ids",
                    "campaign_filter_segment_id"
                ],
                "title": "ContactSmsFieldEnum"
            },
            "ContactSmsResource": {
                "type": "object",
                "properties": {
                    "team_id": {
                        "type": "string"
                    },
                    "phone_normalized": {
                        "type": "string"
                    },
                    "contact_id": {
                        "type": "string"
                    },
                    "foreign_id": {
                        "type": "string"
                    },
                    "last_sent": {
                        "type": "string"
                    },
                    "last_clicked": {
                        "type": "string"
                    },
                    "sent_count": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "clicked_count": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "leads_count": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "sales_count": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "network_brand": {
                        "type": "string",
                        "description": "'profit_sum' => $this->resource['profit_sum'],"
                    },
                    "network_id": {
                        "type": "string"
                    },
                    "network_reason": {
                        "type": "string"
                    },
                    "phone_is_good": {
                        "type": "string"
                    },
                    "phone_is_good_reason": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "country_id": {
                        "type": "string"
                    },
                    "state_id": {
                        "type": "string"
                    },
                    "state_id_reason": {
                        "type": "string"
                    },
                    "custom1_str": {
                        "type": "string"
                    },
                    "custom2_str": {
                        "type": "string"
                    },
                    "custom3_str": {
                        "type": "string"
                    },
                    "custom4_str": {
                        "type": "string"
                    },
                    "custom5_str": {
                        "type": "string"
                    },
                    "custom1_int": {
                        "type": "string"
                    },
                    "custom2_int": {
                        "type": "string"
                    },
                    "custom3_int": {
                        "type": "string"
                    },
                    "custom4_int": {
                        "type": "string"
                    },
                    "custom5_int": {
                        "type": "string"
                    },
                    "custom1_dec": {
                        "type": "string"
                    },
                    "custom2_dec": {
                        "type": "string"
                    },
                    "custom1_datetime": {
                        "type": "string"
                    },
                    "custom2_datetime": {
                        "type": "string"
                    },
                    "custom3_datetime": {
                        "type": "string"
                    },
                    "custom4_datetime": {
                        "type": "string"
                    },
                    "custom5_datetime": {
                        "type": "string"
                    },
                    "meta": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "date_created": {
                        "type": "string"
                    },
                    "date_updated": {
                        "type": "string"
                    }
                },
                "required": [
                    "team_id",
                    "phone_normalized",
                    "contact_id",
                    "foreign_id",
                    "last_sent",
                    "last_clicked",
                    "sent_count",
                    "clicked_count",
                    "leads_count",
                    "sales_count",
                    "network_brand",
                    "network_id",
                    "network_reason",
                    "phone_is_good",
                    "phone_is_good_reason",
                    "name",
                    "country_id",
                    "state_id",
                    "state_id_reason",
                    "custom1_str",
                    "custom2_str",
                    "custom3_str",
                    "custom4_str",
                    "custom5_str",
                    "custom1_int",
                    "custom2_int",
                    "custom3_int",
                    "custom4_int",
                    "custom5_int",
                    "custom1_dec",
                    "custom2_dec",
                    "custom1_datetime",
                    "custom2_datetime",
                    "custom3_datetime",
                    "custom4_datetime",
                    "custom5_datetime",
                    "meta",
                    "date_created",
                    "date_updated"
                ],
                "title": "ContactSmsResource"
            },
            "ConversionObjectTypeEnum": {
                "type": "string",
                "enum": [
                    "sms_campaign",
                    "sms_api",
                    "voice_call"
                ],
                "title": "ConversionObjectTypeEnum"
            },
            "ConversionPixelFieldEnum": {
                "type": "string",
                "enum": [
                    "id",
                    "object_id",
                    "event_type",
                    "user_agent",
                    "created_at",
                    "ip_address",
                    "conversion_filter_id",
                    "country_code",
                    "team_id",
                    "related_object_id",
                    "is_bot"
                ],
                "title": "ConversionPixelFieldEnum"
            },
            "ConversionPixelResponseData": {
                "type": "object",
                "properties": {
                    "conversion_pixel_id": {
                        "type": "string"
                    },
                    "is_new": {
                        "type": "boolean"
                    },
                    "object_type": {
                        "$ref": "#\/components\/schemas\/ConversionObjectTypeEnum"
                    }
                },
                "required": [
                    "conversion_pixel_id",
                    "is_new",
                    "object_type"
                ],
                "title": "ConversionPixelResponseData"
            },
            "CountryResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "iso": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "nicename": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "iso3": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "numcode": {
                        "type": "integer"
                    },
                    "phonecode": {
                        "type": "integer"
                    },
                    "has_states": {
                        "type": "boolean"
                    },
                    "sender_id": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "iso",
                    "name",
                    "nicename",
                    "iso3",
                    "numcode",
                    "phonecode",
                    "has_states",
                    "sender_id"
                ],
                "title": "CountryResource"
            },
            "CustomAuthDataRequest": {
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string",
                        "enum": [
                            "GET",
                            "POST"
                        ]
                    },
                    "url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "json_path": {
                        "type": "string"
                    },
                    "body": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "headers": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "params": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "method",
                    "url",
                    "json_path"
                ],
                "title": "CustomAuthDataRequest"
            },
            "CustomFieldDataRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "string",
                            "number",
                            "datetime"
                        ]
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "resource": {
                        "type": "string",
                        "enum": [
                            "contact",
                            "sms"
                        ],
                        "default": "contact"
                    }
                },
                "required": [
                    "name",
                    "type"
                ],
                "title": "CustomFieldDataRequest"
            },
            "CustomFieldResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "key",
                    "type",
                    "created_at"
                ],
                "title": "CustomFieldResource"
            },
            "CustomFieldTypeEnum": {
                "type": "string",
                "enum": [
                    "string",
                    "number",
                    "datetime",
                    "boolean"
                ],
                "title": "CustomFieldTypeEnum"
            },
            "DailyRecurringData": {
                "type": "object",
                "properties": {
                    "Mon": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    },
                    "Tue": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    },
                    "Wed": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    },
                    "Thu": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    },
                    "Fri": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    },
                    "Sat": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    },
                    "Sun": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    }
                },
                "required": [
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thu",
                    "Fri",
                    "Sat",
                    "Sun"
                ],
                "title": "DailyRecurringData"
            },
            "DailyRecurringDataRequest": {
                "type": "object",
                "properties": {
                    "Mon": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    },
                    "Tue": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    },
                    "Wed": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    },
                    "Thu": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    },
                    "Fri": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    },
                    "Sat": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    },
                    "Sun": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/RecurringDay"
                        }
                    }
                },
                "title": "DailyRecurringDataRequest"
            },
            "DataFileResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "created_ago": {
                        "type": "string"
                    },
                    "columns": {
                        "type": "string"
                    },
                    "total_rows": {
                        "type": "string"
                    },
                    "processed_rows": {
                        "type": "string"
                    },
                    "can_continue": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "size",
                    "status",
                    "created_at",
                    "created_ago",
                    "columns",
                    "total_rows",
                    "processed_rows",
                    "can_continue"
                ],
                "title": "DataFileResource"
            },
            "DataGridApiSendLogResource": {
                "type": "object",
                "properties": {
                    "sms_id": {
                        "type": "string"
                    },
                    "endpoint_id": {
                        "type": "string"
                    },
                    "sms_route_id": {
                        "type": "string"
                    },
                    "sms_routing_plan_id": {
                        "type": "string"
                    },
                    "client_company_id": {
                        "type": "string"
                    },
                    "vendor_company_id": {
                        "type": "string"
                    },
                    "foreign_id": {
                        "type": "string"
                    },
                    "country_id": {
                        "type": "string"
                    },
                    "source_addr": {
                        "type": "string",
                        "description": "'registered_delivery' => $this->resource['registered_delivery'],\n'esm_class' => $this->resource['esm_class'],\n'data_coding' => $this->resource['data_coding'],\n'sm_length' => $this->resource['sm_length'],\n'user_message_reference' => $this->resource['user_message_reference'],\n'sar_msg_ref_num' => $this->resource['sar_msg_ref_num'],\n'sar_total_segments' => $this->resource['sar_total_segments'],\n'sar_segment_seqnum' => $this->resource['sar_segment_seqnum'],\n'payload_type' => $this->resource['payload_type'],\n'source_addr_ton' => $this->resource['source_addr_ton'],\n'source_addr_npi' => $this->resource['source_addr_npi'],\n'dest_addr_ton' => $this->resource['dest_addr_ton'],\n'dest_addr_npi' => $this->resource['dest_addr_npi'],\n'service_type' => $this->resource['service_type'],"
                    },
                    "destination_addr": {
                        "type": "string"
                    },
                    "message_payload": {
                        "type": "string",
                        "description": "'schedule_delivery_time' => $this->resource['schedule_delivery_time'],\n'validity_period' => $this->resource['validity_period'],"
                    },
                    "dlr_status": {
                        "type": "string",
                        "description": "'pdu' => $this->resource['pdu'],\n'error' => $this->resource['error'],\n'error_code' => $this->resource['error_code'],"
                    },
                    "network_id": {
                        "type": "string",
                        "description": "'dlr_received' => $this->resource['dlr_received'],\n'dlr_sent' => $this->resource['dlr_sent'],"
                    },
                    "network_brand": {
                        "type": "string"
                    },
                    "cost": {
                        "type": "string"
                    },
                    "profit": {
                        "type": "string"
                    },
                    "is_sent": {
                        "type": "string"
                    },
                    "is_clicked": {
                        "type": "string"
                    },
                    "is_lead": {
                        "type": "string"
                    },
                    "is_sale": {
                        "type": "string"
                    },
                    "is_delivered": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "sms_id",
                    "endpoint_id",
                    "sms_route_id",
                    "sms_routing_plan_id",
                    "client_company_id",
                    "vendor_company_id",
                    "foreign_id",
                    "country_id",
                    "source_addr",
                    "destination_addr",
                    "message_payload",
                    "dlr_status",
                    "network_id",
                    "network_brand",
                    "cost",
                    "profit",
                    "is_sent",
                    "is_clicked",
                    "is_lead",
                    "is_sale",
                    "is_delivered",
                    "created_at"
                ],
                "title": "DataGridApiSendLogResource"
            },
            "DataGridConversionPixelResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "event_type": {
                        "type": "string"
                    },
                    "event_profit": {
                        "type": "string"
                    },
                    "user_agent": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "object_type": {
                        "type": "string"
                    },
                    "ip_address": {
                        "type": "string"
                    },
                    "conversion_filter_id": {
                        "type": "string"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "related_object_id": {
                        "type": "string"
                    },
                    "is_bot": {
                        "type": "string"
                    },
                    "bot_reason": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "id",
                    "object_id",
                    "event_type",
                    "event_profit",
                    "user_agent",
                    "created_at",
                    "object_type",
                    "ip_address",
                    "conversion_filter_id",
                    "country_code",
                    "team_id",
                    "related_object_id",
                    "is_bot",
                    "bot_reason"
                ],
                "title": "DataGridConversionPixelResource"
            },
            "DataGridFilterResource": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "sortable": {
                        "type": "boolean"
                    },
                    "canGroup": {
                        "type": "boolean"
                    },
                    "operators": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "label",
                    "key",
                    "type",
                    "sortable",
                    "canGroup"
                ],
                "title": "DataGridFilterResource"
            },
            "DataGridRouteCompanyBalanceResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "client_routing_company_id": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string"
                    },
                    "balance_type": {
                        "type": "string"
                    },
                    "meta": {
                        "type": "string"
                    },
                    "date_created": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "client_routing_company_id",
                    "amount",
                    "balance_type",
                    "meta",
                    "date_created"
                ],
                "title": "DataGridRouteCompanyBalanceResource"
            },
            "DomainAccountData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/DomainAccountMetaData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "type": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "namecheap"
                        ],
                        "default": "namecheap"
                    },
                    "is_active": {
                        "type": [
                            "boolean",
                            "null"
                        ],
                        "default": true
                    }
                },
                "required": [
                    "id",
                    "name",
                    "meta",
                    "type",
                    "is_active"
                ],
                "title": "DomainAccountData"
            },
            "DomainAccountDataRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/DomainAccountMetaDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "type": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "namecheap"
                        ],
                        "default": "namecheap"
                    },
                    "is_active": {
                        "type": [
                            "boolean",
                            "null"
                        ],
                        "default": true
                    }
                },
                "required": [
                    "name"
                ],
                "title": "DomainAccountDataRequest"
            },
            "DomainAccountMetaData": {
                "type": "object",
                "properties": {
                    "apiKey": {
                        "type": "string"
                    },
                    "apiUser": {
                        "type": "string"
                    },
                    "apiUrl": {
                        "type": "string"
                    },
                    "clientIp": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "city": {
                        "type": "string"
                    },
                    "stateProvince": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "techFirstName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techLastName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techAddress1": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techAddress2": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techCity": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techStateProvince": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techPostalCode": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techCountry": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techPhone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techEmail": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminLastName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminFirstName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminAddress1": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminAddress2": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminCity": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminStateProvince": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminPostalCode": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminCountry": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminPhone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminEmail": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingLastName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingFirstName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingAddress1": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingAddress2": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingCity": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingStateProvince": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingPostalCode": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingCountry": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingPhone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingEmail": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "apiKey",
                    "apiUser",
                    "apiUrl",
                    "clientIp",
                    "firstName",
                    "lastName",
                    "address1",
                    "address2",
                    "city",
                    "stateProvince",
                    "postalCode",
                    "country",
                    "phone",
                    "email",
                    "techFirstName",
                    "techLastName",
                    "techAddress1",
                    "techAddress2",
                    "techCity",
                    "techStateProvince",
                    "techPostalCode",
                    "techCountry",
                    "techPhone",
                    "techEmail",
                    "adminLastName",
                    "adminFirstName",
                    "adminAddress1",
                    "adminAddress2",
                    "adminCity",
                    "adminStateProvince",
                    "adminPostalCode",
                    "adminCountry",
                    "adminPhone",
                    "adminEmail",
                    "auxBillingLastName",
                    "auxBillingFirstName",
                    "auxBillingAddress1",
                    "auxBillingAddress2",
                    "auxBillingCity",
                    "auxBillingStateProvince",
                    "auxBillingPostalCode",
                    "auxBillingCountry",
                    "auxBillingPhone",
                    "auxBillingEmail"
                ],
                "title": "DomainAccountMetaData"
            },
            "DomainAccountMetaDataRequest": {
                "type": "object",
                "properties": {
                    "apiKey": {
                        "type": "string"
                    },
                    "apiUser": {
                        "type": "string"
                    },
                    "apiUrl": {
                        "type": "string"
                    },
                    "clientIp": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "city": {
                        "type": "string"
                    },
                    "stateProvince": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "techFirstName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techLastName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techAddress1": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techAddress2": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techCity": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techStateProvince": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techPostalCode": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techCountry": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techPhone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "techEmail": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminLastName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminFirstName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminAddress1": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminAddress2": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminCity": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminStateProvince": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminPostalCode": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminCountry": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminPhone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "adminEmail": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingLastName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingFirstName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingAddress1": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingAddress2": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingCity": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingStateProvince": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingPostalCode": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingCountry": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingPhone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "auxBillingEmail": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "apiKey",
                    "apiUser",
                    "apiUrl",
                    "firstName",
                    "lastName",
                    "address1",
                    "city",
                    "stateProvince",
                    "postalCode",
                    "country",
                    "phone",
                    "email"
                ],
                "title": "DomainAccountMetaDataRequest"
            },
            "DomainData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "domain": {
                        "type": "string"
                    },
                    "domain_plan_id": {
                        "type": "string"
                    },
                    "domain_account_tld_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "domain_proxy_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "cost": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "checked_availability_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "registered_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "configured_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "total_sms_sent": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "used_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "https_support": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "id",
                    "domain",
                    "domain_plan_id",
                    "domain_account_tld_id",
                    "domain_proxy_id",
                    "cost",
                    "checked_availability_at",
                    "registered_at",
                    "configured_at",
                    "total_sms_sent",
                    "used_at",
                    "status",
                    "https_support",
                    "created_at",
                    "updated_at",
                    "is_active"
                ],
                "title": "DomainData"
            },
            "DomainPlanData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/DomainPlanMetaData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "domain_accounts": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "domain_account_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_default": {
                        "type": "boolean",
                        "default": false
                    },
                    "is_purchasing_active": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "id",
                    "name",
                    "meta",
                    "domain_account_id",
                    "is_default",
                    "is_purchasing_active"
                ],
                "title": "DomainPlanData"
            },
            "DomainPlanDataRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/DomainPlanMetaDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "domain_accounts": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "domain_account_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_default": {
                        "type": "boolean",
                        "default": false
                    },
                    "is_purchasing_active": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "name"
                ],
                "title": "DomainPlanDataRequest"
            },
            "DomainPlanMetaData": {
                "type": "object",
                "properties": {
                    "default_rule_meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/DomainPlanRuleMetaData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "default_rule_meta"
                ],
                "title": "DomainPlanMetaData"
            },
            "DomainPlanMetaDataRequest": {
                "type": "object",
                "properties": {
                    "default_rule_meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/DomainPlanRuleMetaDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "title": "DomainPlanMetaDataRequest"
            },
            "DomainPlanRuleData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "country_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "sms_route_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "team_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "company_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/DomainPlanRuleMetaData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "priority": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "default": 0
                    }
                },
                "required": [
                    "id",
                    "country_id",
                    "sms_route_id",
                    "team_id",
                    "company_id",
                    "meta",
                    "priority"
                ],
                "title": "DomainPlanRuleData"
            },
            "DomainPlanRuleDataRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "country_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "sms_route_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "team_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "company_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/DomainPlanRuleMetaDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "priority": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "default": 0
                    }
                },
                "title": "DomainPlanRuleDataRequest"
            },
            "DomainPlanRuleMetaData": {
                "type": "object",
                "properties": {
                    "tld_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "default": "com"
                    },
                    "max_sms_per_domain": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "default": 50000,
                        "minimum": 0
                    },
                    "number_of_domains_in_rotation": {
                        "type": "integer",
                        "default": 3,
                        "minimum": 0
                    },
                    "number_of_domains_in_backlog": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "domain_name_pattern": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "tld_name",
                    "max_sms_per_domain",
                    "number_of_domains_in_rotation",
                    "number_of_domains_in_backlog",
                    "domain_name_pattern"
                ],
                "title": "DomainPlanRuleMetaData"
            },
            "DomainPlanRuleMetaDataRequest": {
                "type": "object",
                "properties": {
                    "tld_name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "default": "com"
                    },
                    "max_sms_per_domain": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "default": 50000,
                        "minimum": 0
                    },
                    "number_of_domains_in_rotation": {
                        "type": "integer",
                        "default": 3,
                        "minimum": 0
                    },
                    "number_of_domains_in_backlog": {
                        "type": "integer",
                        "default": 0,
                        "minimum": 0
                    },
                    "domain_name_pattern": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "DomainPlanRuleMetaDataRequest"
            },
            "DomainProxyResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "ip",
                    "meta",
                    "created_at",
                    "updated_at"
                ],
                "title": "DomainProxyResource"
            },
            "EmailCampaignTemplate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "type": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "deleted_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "team_id",
                    "name",
                    "subject",
                    "body",
                    "type",
                    "meta",
                    "is_active",
                    "deleted_at",
                    "created_at",
                    "updated_at"
                ],
                "title": "EmailCampaignTemplate"
            },
            "EmailCampaignTemplateData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "type": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/EmailCampaignTemplateTypeEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/EmailCampaignTemplateMetaData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": [
                    "id",
                    "created_at",
                    "updated_at",
                    "name",
                    "subject",
                    "body",
                    "type",
                    "meta",
                    "is_active"
                ],
                "title": "EmailCampaignTemplateData"
            },
            "EmailCampaignTemplateDataRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "type": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/EmailCampaignTemplateTypeEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/EmailCampaignTemplateMetaDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": [
                    "name",
                    "subject",
                    "body"
                ],
                "title": "EmailCampaignTemplateDataRequest"
            },
            "EmailCampaignTemplateMetaData": {
                "type": "object",
                "properties": {
                    "instruction": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "max_times_used": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "texts_in_rotation": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "instruction",
                    "max_times_used",
                    "texts_in_rotation"
                ],
                "title": "EmailCampaignTemplateMetaData"
            },
            "EmailCampaignTemplateMetaDataRequest": {
                "type": "object",
                "properties": {
                    "instruction": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "max_times_used": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "texts_in_rotation": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "title": "EmailCampaignTemplateMetaDataRequest"
            },
            "EmailCampaignTemplateTypeEnum": {
                "type": "string",
                "enum": [
                    "manual",
                    "generated"
                ],
                "title": "EmailCampaignTemplateTypeEnum"
            },
            "FilterModelData": {
                "type": "object",
                "properties": {
                    "filterType": {
                        "type": "string",
                        "enum": [
                            "text",
                            "number",
                            "date",
                            "multi"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "equal",
                            "not_equal",
                            "less",
                            "less_or_equal",
                            "greater",
                            "greater_or_equal",
                            "in",
                            "not_in",
                            "between",
                            "not_between",
                            "like",
                            "not_like",
                            "is_null",
                            "is_not_null"
                        ]
                    },
                    "filter": {
                        "type": "string"
                    }
                },
                "required": [
                    "filterType",
                    "type",
                    "filter"
                ],
                "title": "FilterModelData"
            },
            "GeneratedTextsResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "times_used": {
                        "type": "integer"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "stats": {
                        "type": "object",
                        "description": "Stats array structure",
                        "properties": {
                            "sent": {
                                "type": "integer"
                            },
                            "clicks": {
                                "type": "integer"
                            },
                            "leads": {
                                "type": "integer"
                            },
                            "sales": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "required": [
                    "id",
                    "text",
                    "times_used",
                    "is_active",
                    "stats"
                ],
                "title": "GeneratedTextsResource"
            },
            "HoursOfDay": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "string"
                    },
                    "end": {
                        "type": "string"
                    }
                },
                "required": [
                    "start",
                    "end"
                ],
                "title": "HoursOfDay"
            },
            "IntegrationBillingResource": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "date_created": {
                        "type": "string"
                    }
                },
                "required": [
                    "amount",
                    "reason",
                    "date_created"
                ],
                "title": "IntegrationBillingResource"
            },
            "IntegrationData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/IntegrationMetaData"
                    },
                    "type": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "team_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "status": {
                        "type": "string"
                    },
                    "vendor": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/IntegrationVendorData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "team": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/IntegrationTeamData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "meta",
                    "type",
                    "team_id",
                    "status",
                    "vendor",
                    "team"
                ],
                "title": "IntegrationData"
            },
            "IntegrationMetaData": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "overview": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "solutions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "SMS Marketing",
                                "SMS Hub"
                            ]
                        }
                    },
                    "service": {
                        "type": "string",
                        "enum": [
                            "Enrichment",
                            "Gateways",
                            "Domains"
                        ]
                    },
                    "type": {
                        "type": "string"
                    },
                    "scopes": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "method": {
                                    "type": "string"
                                },
                                "endpoint": {
                                    "type": "string"
                                },
                                "reason": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "webhooks": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "properties": {
                            "live": {
                                "type": "string"
                            },
                            "sandbox": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "required": [
                            "live"
                        ]
                    },
                    "events": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "properties": {
                            "subscribed": {
                                "type": [
                                    "array",
                                    "null"
                                ],
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "reason": {
                                            "type": "string"
                                        },
                                        "hold_until_response": {
                                            "type": "boolean"
                                        },
                                        "type_priority": {
                                            "type": "integer"
                                        },
                                        "is_optional": {
                                            "type": [
                                                "boolean",
                                                "null"
                                            ]
                                        }
                                    }
                                }
                            },
                            "errors": {
                                "type": [
                                    "array",
                                    "null"
                                ],
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "success_response": {
                                "type": [
                                    "array",
                                    "null"
                                ],
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "custom_fields": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "resource": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "billing": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "properties": {
                            "managed_balance": {
                                "type": "boolean"
                            },
                            "cost": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "amount": {
                                            "type": "number"
                                        },
                                        "currency": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "overview": {
                                "type": "string"
                            }
                        }
                    },
                    "required_fields": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "default": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "required": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "validate_api_key": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "tags": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "name",
                    "description",
                    "overview",
                    "solutions",
                    "service",
                    "type",
                    "scopes",
                    "webhooks",
                    "events",
                    "custom_fields",
                    "billing",
                    "required_fields",
                    "validate_api_key",
                    "tags"
                ],
                "title": "IntegrationMetaData"
            },
            "IntegrationMetaScopesData": {
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string",
                        "enum": [
                            "get",
                            "post",
                            "patch",
                            "delete",
                            "*"
                        ]
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "reason": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "method",
                    "endpoint",
                    "reason"
                ],
                "title": "IntegrationMetaScopesData"
            },
            "IntegrationRequestResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "event_type": {
                        "type": "string"
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "response": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "event_type",
                    "meta",
                    "response",
                    "created_at",
                    "updated_at"
                ],
                "title": "IntegrationRequestResource"
            },
            "IntegrationTeamData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "integration_id": {
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/IntegrationTeamMetaData"
                    }
                },
                "required": [
                    "id",
                    "integration_id",
                    "meta"
                ],
                "title": "IntegrationTeamData"
            },
            "IntegrationTeamMetaData": {
                "type": "object",
                "properties": {
                    "events": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "is_active": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "type",
                                "is_active"
                            ]
                        }
                    },
                    "required_fields": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "value"
                            ]
                        }
                    }
                },
                "required": [
                    "events",
                    "required_fields"
                ],
                "title": "IntegrationTeamMetaData"
            },
            "IntegrationTeamMetaDataRequest": {
                "type": "object",
                "properties": {
                    "events": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "is_active": {
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "type",
                                "is_active"
                            ]
                        }
                    },
                    "required_fields": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "value"
                            ]
                        }
                    }
                },
                "title": "IntegrationTeamMetaDataRequest"
            },
            "IntegrationVendorData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/IntegrationVendorMetaData"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "status",
                    "meta"
                ],
                "title": "IntegrationVendorData"
            },
            "IntegrationVendorMetaData": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "website": {
                        "type": "string"
                    },
                    "logo": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "email",
                    "website",
                    "logo"
                ],
                "title": "IntegrationVendorMetaData"
            },
            "JqFieldResource": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "operators": {
                        "type": "array",
                        "items": {}
                    }
                },
                "required": [
                    "field",
                    "label",
                    "type",
                    "operators"
                ],
                "title": "JqFieldResource"
            },
            "LeadSubmitterData": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "method": {
                        "type": "string",
                        "default": "POST"
                    },
                    "headers": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ]
                        }
                    },
                    "call_outcomes": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags_on_complete": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "transcript_as_text": {
                        "type": "boolean",
                        "default": false
                    },
                    "field_aliases": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "additional_data": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ]
                        }
                    }
                },
                "required": [
                    "url",
                    "enabled",
                    "method",
                    "headers",
                    "call_outcomes",
                    "tags_on_complete",
                    "transcript_as_text",
                    "field_aliases",
                    "additional_data"
                ],
                "title": "LeadSubmitterData"
            },
            "LivePhoneActionLogResource": {
                "type": "object",
                "properties": {
                    "": {
                        "type": "string"
                    },
                    "live_phone": {
                        "$ref": "#\/components\/schemas\/LivePhoneResource"
                    },
                    "sms_route": {
                        "$ref": "#\/components\/schemas\/SmsRoutingRouteResource"
                    }
                },
                "required": [
                    null
                ],
                "title": "LivePhoneActionLogResource"
            },
            "LivePhoneResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "phone_number": {
                        "type": "integer"
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "network_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "last_used_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "used_count": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "network_brand_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "email": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "phone_number",
                    "country_id",
                    "network_id",
                    "is_active",
                    "last_used_at",
                    "used_count",
                    "created_at",
                    "updated_at",
                    "deleted_at",
                    "network_brand_id",
                    "email"
                ],
                "title": "LivePhoneResource"
            },
            "LivePhoneSmsResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "live_phone_id": {
                        "type": "string"
                    },
                    "sms_route_id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "sender_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "foreign_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "dlr_status": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "dlr_received_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "dlr_error_code": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "sent_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "received_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "received_sender_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "status": {
                        "type": "string"
                    },
                    "deleted_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "method": {
                        "type": "string"
                    },
                    "pdu": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "live_phone": {
                        "$ref": "#\/components\/schemas\/LivePhoneResource"
                    },
                    "sms_route": {
                        "$ref": "#\/components\/schemas\/SmsRoutingRouteResource"
                    }
                },
                "required": [
                    "id",
                    "live_phone_id",
                    "sms_route_id",
                    "user_id",
                    "message",
                    "sender_id",
                    "foreign_id",
                    "dlr_status",
                    "dlr_received_at",
                    "dlr_error_code",
                    "created_at",
                    "updated_at",
                    "sent_at",
                    "received_at",
                    "received_sender_id",
                    "status",
                    "deleted_at",
                    "method",
                    "pdu"
                ],
                "title": "LivePhoneSmsResource"
            },
            "LoginRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password"
                ],
                "title": "LoginRequest"
            },
            "LookupCheckMetaData": {
                "type": "object",
                "properties": {
                    "filters": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        }
                    },
                    "status_reason": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/LookupCheckStatusReasonEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "notes": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "filters",
                    "status_reason",
                    "notes"
                ],
                "title": "LookupCheckMetaData"
            },
            "LookupCheckResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "integer"
                    },
                    "cost": {
                        "type": "number"
                    },
                    "filters": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "done_at": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/LookupCheckMetaData"
                    }
                },
                "required": [
                    "id",
                    "team_id",
                    "amount",
                    "cost",
                    "filters",
                    "created_at",
                    "done_at",
                    "status",
                    "meta"
                ],
                "title": "LookupCheckResource"
            },
            "LookupCheckStatusReasonEnum": {
                "type": "string",
                "enum": [
                    "No contacts"
                ],
                "title": "LookupCheckStatusReasonEnum"
            },
            "MailAddressResource": {
                "type": "object",
                "properties": {
                    "full": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string"
                    },
                    "mail": {
                        "type": "string"
                    },
                    "mailbox": {
                        "type": "string"
                    },
                    "personal": {
                        "type": "string"
                    }
                },
                "required": [
                    "full",
                    "host",
                    "mail",
                    "mailbox",
                    "personal"
                ],
                "title": "MailAddressResource"
            },
            "MetabaseData": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "card",
                            "dashboard"
                        ]
                    },
                    "target_id": {
                        "type": "string"
                    },
                    "source_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "type",
                    "target_id",
                    "source_id"
                ],
                "title": "MetabaseData"
            },
            "MobileNetworkResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "mcc": {
                        "type": "integer"
                    },
                    "mnc": {
                        "type": "integer"
                    },
                    "country_name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "country_code": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "network_brand_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "brand": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "operator": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "id",
                    "mcc",
                    "mnc",
                    "country_name",
                    "country_code",
                    "country_id",
                    "network_brand_id",
                    "brand",
                    "operator",
                    "status"
                ],
                "title": "MobileNetworkResource"
            },
            "NetworkBrandResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "country_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "NetworkBrandResource"
            },
            "NumberResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "number": {
                        "type": "integer"
                    },
                    "voice_account_id": {
                        "type": "string"
                    },
                    "inbound_agent_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "sip_config": {
                        "type": "string"
                    },
                    "disallowed_countries": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "voice_provider": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "number",
                    "voice_account_id",
                    "inbound_agent_id",
                    "sip_config",
                    "disallowed_countries",
                    "team_id",
                    "voice_provider",
                    "created_at",
                    "updated_at"
                ],
                "title": "NumberResource"
            },
            "OfferCampaignResource": {
                "type": "object",
                "properties": {
                    "offer_id": {
                        "type": "string"
                    },
                    "sms_campaign_id": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "is_deleted": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "offer_id",
                    "sms_campaign_id",
                    "is_active",
                    "created_at",
                    "updated_at",
                    "is_deleted"
                ],
                "title": "OfferCampaignResource"
            },
            "OfferResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "profit": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "url",
                    "profit",
                    "created_at",
                    "updated_at"
                ],
                "title": "OfferResource"
            },
            "PaginatedRequest": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "per_page": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "search": {
                        "type": "string"
                    },
                    "search_ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "title": "PaginatedRequest"
            },
            "PlatformDomainData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "domain": {
                        "type": "string"
                    },
                    "domain_proxy_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "status": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "https_support": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "id",
                    "domain",
                    "domain_proxy_id",
                    "status",
                    "https_support"
                ],
                "title": "PlatformDomainData"
            },
            "PriceParserColumnsDataRequest": {
                "type": "object",
                "properties": {
                    "mcc": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "rate": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "mnc": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "country": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "brand_name": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "operator_name": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    }
                },
                "required": [
                    "mcc",
                    "rate"
                ],
                "title": "PriceParserColumnsDataRequest"
            },
            "RateInboxResource": {
                "type": "object",
                "properties": {
                    "sms_route_id": {
                        "type": "string"
                    },
                    "sms_route_name": {
                        "type": "string"
                    },
                    "inbox_email": {
                        "type": "string"
                    },
                    "email_aliases": {
                        "type": "string"
                    },
                    "settings": {
                        "type": "object",
                        "properties": {
                            "columns": {
                                "type": "string"
                            },
                            "extra_settings": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "columns",
                            "extra_settings"
                        ]
                    },
                    "total_received": {
                        "type": "string"
                    },
                    "last_received": {
                        "type": "string"
                    }
                },
                "required": [
                    "sms_route_id",
                    "sms_route_name",
                    "inbox_email",
                    "email_aliases",
                    "settings",
                    "total_received",
                    "last_received"
                ],
                "title": "RateInboxResource"
            },
            "RecurringDay": {
                "type": "object",
                "properties": {
                    "send_time": {
                        "type": "string"
                    },
                    "send_amount": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "required": [
                    "send_time",
                    "send_amount"
                ],
                "title": "RecurringDay"
            },
            "RowGroupColsData": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#\/components\/schemas\/ContactSmsFieldEnum"
                    },
                    "show_as": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "hour",
                            "date",
                            "year-week",
                            "year-month"
                        ]
                    },
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "displayName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "field",
                    "show_as",
                    "id",
                    "displayName"
                ],
                "title": "RowGroupColsData"
            },
            "SampleRowsResource": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {}
                        }
                    },
                    "cols": {
                        "type": "integer"
                    }
                },
                "required": [
                    "rows",
                    "cols"
                ],
                "title": "SampleRowsResource"
            },
            "SegmentResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "query": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "name",
                    "query",
                    "is_active",
                    "created_at",
                    "updated_at"
                ],
                "title": "SegmentResource"
            },
            "SelectedRecurringTime": {
                "type": "object",
                "properties": {
                    "send_amount": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "send_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "send_amount",
                    "send_datetime"
                ],
                "title": "SelectedRecurringTime"
            },
            "SelectedRecurringTimeRequest": {
                "type": "object",
                "properties": {
                    "send_amount": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "send_datetime": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "send_amount"
                ],
                "title": "SelectedRecurringTimeRequest"
            },
            "SellerEmailUpdateResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "endpoint_id": {
                        "type": "string"
                    },
                    "client_email": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "team_id",
                    "endpoint_id",
                    "client_email",
                    "message",
                    "created_at"
                ],
                "title": "SellerEmailUpdateResource"
            },
            "SellerEndpointConnectionData": {
                "type": "object",
                "properties": {
                    "tx": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "rx": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "trx": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "tx",
                    "rx",
                    "trx"
                ],
                "title": "SellerEndpointConnectionData"
            },
            "SellerEndpointConnectionDataRequest": {
                "type": "object",
                "properties": {
                    "tx": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "rx": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "trx": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "title": "SellerEndpointConnectionDataRequest"
            },
            "SellerEndpointDataRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "client_company_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "sms_routing_plan_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "default_route_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "pricing_update_email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email"
                    },
                    "allowed_ips": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "default": [],
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "default": [],
                        "items": {
                            "type": "string"
                        }
                    },
                    "tx": {
                        "type": "integer",
                        "default": 1
                    },
                    "rx": {
                        "type": "integer",
                        "default": 1
                    },
                    "trx": {
                        "type": "integer",
                        "default": 1
                    },
                    "is_sending_allowed": {
                        "type": "boolean",
                        "default": true
                    },
                    "max_price": {
                        "type": "number",
                        "default": 0
                    },
                    "is_max_price_enabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "min_margin": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "active_connections": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SellerEndpointConnectionDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "username",
                    "password",
                    "client_company_id",
                    "sms_routing_plan_id"
                ],
                "title": "SellerEndpointDataRequest"
            },
            "SellerProfitLogicData": {
                "type": "object",
                "properties": {
                    "profit": {
                        "type": "number",
                        "default": 0,
                        "minimum": 0,
                        "maximum": 100
                    },
                    "margin_type": {
                        "$ref": "#\/components\/schemas\/SmsMarginTypeEnum"
                    },
                    "action_on_change_rate": {
                        "$ref": "#\/components\/schemas\/ActionOnRateChangeEnum"
                    },
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "profit",
                    "margin_type",
                    "action_on_change_rate",
                    "id"
                ],
                "title": "SellerProfitLogicData"
            },
            "SellerProfitLogicDataRequest": {
                "type": "object",
                "properties": {
                    "profit": {
                        "type": "number",
                        "default": 0,
                        "minimum": 0,
                        "maximum": 100
                    },
                    "margin_type": {
                        "$ref": "#\/components\/schemas\/SmsMarginTypeEnum"
                    },
                    "action_on_change_rate": {
                        "$ref": "#\/components\/schemas\/ActionOnRateChangeEnum"
                    },
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "SellerProfitLogicDataRequest"
            },
            "SellerProfitLogicRuleData": {
                "type": "object",
                "properties": {
                    "current_profit": {
                        "type": "number"
                    },
                    "country_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "network_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "client_company_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "network_brand_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "margin_type": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsMarginTypeEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "old_profit": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "upcoming_profit": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "applied_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "current_profit",
                    "country_id",
                    "id",
                    "network_id",
                    "client_company_id",
                    "network_brand_id",
                    "margin_type",
                    "old_profit",
                    "upcoming_profit",
                    "applied_at"
                ],
                "title": "SellerProfitLogicRuleData"
            },
            "SellerProfitLogicRuleDataRequest": {
                "type": "object",
                "properties": {
                    "current_profit": {
                        "type": "number"
                    },
                    "country_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "network_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "client_company_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "network_brand_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "margin_type": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsMarginTypeEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "old_profit": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "upcoming_profit": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "applied_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "current_profit"
                ],
                "title": "SellerProfitLogicRuleDataRequest"
            },
            "SimulateResponseData": {
                "type": "object",
                "properties": {
                    "contacts_count": {
                        "type": "integer"
                    },
                    "resource": {
                        "$ref": "#\/components\/schemas\/SmsRoutingSelectedData"
                    },
                    "country_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "network_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "contacts_count",
                    "resource",
                    "country_ids",
                    "network_ids"
                ],
                "title": "SimulateResponseData"
            },
            "SmsCampaignData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsCampaignMetaData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/SmsCampaignStatusEnum"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "meta",
                    "status"
                ],
                "title": "SmsCampaignData"
            },
            "SmsCampaignDataRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsCampaignMetaDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/SmsCampaignStatusEnum"
                    }
                },
                "title": "SmsCampaignDataRequest"
            },
            "SmsCampaignLogResource": {
                "type": "object",
                "properties": {
                    "caller_id": {
                        "type": "string"
                    },
                    "caller_type": {
                        "type": "string",
                        "enum": [
                            "Send",
                            "Campaign"
                        ]
                    },
                    "text": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "caller_id",
                    "caller_type",
                    "text",
                    "created_at"
                ],
                "title": "SmsCampaignLogResource"
            },
            "SmsCampaignMetaData": {
                "type": "object",
                "properties": {
                    "send_type": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsCampaignSendTypeEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "segment_ids": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "object"
                        }
                    },
                    "sms_routing_plan_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "filter_segment_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "domain_plan_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "use_dedicated_domains": {
                        "type": "boolean",
                        "default": false
                    },
                    "manual_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignManualData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "multistep_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignMultistepData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "planner_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignPlannerData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "multistep_status": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignMultistepStatusData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "send_type",
                    "segment_ids",
                    "sms_routing_plan_id",
                    "filter_segment_id",
                    "domain_plan_id",
                    "use_dedicated_domains",
                    "manual_data",
                    "multistep_data",
                    "planner_data",
                    "multistep_status"
                ],
                "title": "SmsCampaignMetaData"
            },
            "SmsCampaignMetaDataRequest": {
                "type": "object",
                "properties": {
                    "send_type": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsCampaignSendTypeEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "segment_ids": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "object"
                        }
                    },
                    "sms_routing_plan_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "filter_segment_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "domain_plan_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "use_dedicated_domains": {
                        "type": "boolean",
                        "default": false
                    },
                    "manual_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignManualDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "multistep_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignMultistepDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "planner_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignPlannerDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "multistep_status": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignMultistepStatusDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "title": "SmsCampaignMetaDataRequest"
            },
            "SmsCampaignResource": {
                "type": "object",
                "properties": {
                    "meta": {
                        "$ref": "#\/components\/schemas\/SmsCampaignMetaData"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/OfferResource"
                        }
                    },
                    "sends": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SmsCampaignSendResource"
                        }
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SmsCampaignLogResource"
                        }
                    }
                },
                "required": [
                    "meta",
                    "id",
                    "name",
                    "status",
                    "created_at",
                    "updated_at",
                    "team_id"
                ],
                "title": "SmsCampaignResource"
            },
            "SmsCampaignSendResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "next_step_timestamp": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/SmsCampaignMetaData"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "logs": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SmsCampaignLogResource"
                        }
                    },
                    "sms_campaign_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "next_step_timestamp",
                    "status",
                    "meta",
                    "created_at",
                    "updated_at",
                    "sms_campaign_id"
                ],
                "title": "SmsCampaignSendResource"
            },
            "SmsCampaignSendTypeEnum": {
                "type": "string",
                "enum": [
                    "manual",
                    "multistep",
                    "planner",
                    "recurring",
                    "feed"
                ],
                "title": "SmsCampaignSendTypeEnum"
            },
            "SmsCampaignSenderidResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "sms_campaign_id": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "sms_campaign_id",
                    "text",
                    "is_active",
                    "created_at",
                    "updated_at"
                ],
                "title": "SmsCampaignSenderidResource"
            },
            "SmsCampaignStatusEnum": {
                "type": "string",
                "enum": [
                    "draft",
                    "pending",
                    "running",
                    "in_progress",
                    "sent",
                    "failed",
                    "stopped"
                ],
                "title": "SmsCampaignStatusEnum"
            },
            "SmsCampaignTextData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsCampaignTextMetaData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "text": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#\/components\/schemas\/SmsCampaignTextTypeEnum"
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": [
                    "id",
                    "created_at",
                    "updated_at",
                    "meta",
                    "text",
                    "type",
                    "is_active"
                ],
                "title": "SmsCampaignTextData"
            },
            "SmsCampaignTextDataRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsCampaignTextMetaDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "text": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#\/components\/schemas\/SmsCampaignTextTypeEnum"
                    },
                    "is_active": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": [
                    "text",
                    "type"
                ],
                "title": "SmsCampaignTextDataRequest"
            },
            "SmsCampaignTextMetaData": {
                "type": "object",
                "properties": {
                    "instruction": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "max_times_used": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "texts_in_rotation": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "instruction",
                    "max_times_used",
                    "texts_in_rotation"
                ],
                "title": "SmsCampaignTextMetaData"
            },
            "SmsCampaignTextMetaDataRequest": {
                "type": "object",
                "properties": {
                    "instruction": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "max_times_used": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "texts_in_rotation": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "title": "SmsCampaignTextMetaDataRequest"
            },
            "SmsCampaignTextTypeEnum": {
                "type": "string",
                "enum": [
                    "manual",
                    "generated"
                ],
                "title": "SmsCampaignTextTypeEnum"
            },
            "SmsCampaignValidationErrorEnum": {
                "type": "string",
                "enum": [
                    "No segments selected",
                    "No timezones found",
                    "No contacts found",
                    "Planner is not active",
                    "Multistep is not active",
                    "Stopped by user",
                    "CTR lower than min CTR",
                    "Max SMS to send reached",
                    "Max time to send reached",
                    "Send timeout"
                ],
                "title": "SmsCampaignValidationErrorEnum"
            },
            "SmsCostsData": {
                "type": "object",
                "properties": {
                    "cost_platform_customer": {
                        "type": "number"
                    },
                    "cost_route_vendor": {
                        "type": "number"
                    },
                    "cost_route_seller": {
                        "type": "number",
                        "default": 0
                    },
                    "cost_platform_seller": {
                        "type": "number",
                        "default": 0
                    },
                    "sms_route_rate_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "cost_platform_customer",
                    "cost_route_vendor",
                    "cost_route_seller",
                    "cost_platform_seller",
                    "sms_route_rate_id"
                ],
                "title": "SmsCostsData"
            },
            "SmsMarginTypeEnum": {
                "type": "string",
                "enum": [
                    "percentage",
                    "fixed"
                ],
                "title": "SmsMarginTypeEnum"
            },
            "SmsRouteConnectionLogResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "connection_id": {
                        "type": "string"
                    },
                    "is_connected": {
                        "type": "string"
                    },
                    "error": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "connection_id",
                    "is_connected",
                    "error",
                    "created_at",
                    "updated_at"
                ],
                "title": "SmsRouteConnectionLogResource"
            },
            "SmsRoutePriceAttachmentResource": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "content_type": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    }
                },
                "required": [
                    "name",
                    "content_type",
                    "size"
                ],
                "title": "SmsRoutePriceAttachmentResource"
            },
            "SmsRoutePriceMailResource": {
                "type": "object",
                "properties": {
                    "subject": {
                        "type": "string"
                    },
                    "from": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/MailAddressResource"
                        }
                    },
                    "to": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/MailAddressResource"
                        }
                    },
                    "cc": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/MailAddressResource"
                        }
                    },
                    "bcc": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/MailAddressResource"
                        }
                    },
                    "date": {
                        "type": "string"
                    },
                    "message_id": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "description": "'text_plain' => $this->resource['text_plain'],",
                        "items": {
                            "$ref": "#\/components\/schemas\/SmsRoutePriceAttachmentResource"
                        }
                    }
                },
                "required": [
                    "subject",
                    "from",
                    "to",
                    "cc",
                    "bcc",
                    "date",
                    "message_id",
                    "attachments"
                ],
                "title": "SmsRoutePriceMailResource"
            },
            "SmsRoutePriceMessageFileResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "sms_route_id": {
                        "type": "string"
                    },
                    "sms_route_price_message_id": {
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "stats": {
                        "type": "string"
                    },
                    "info": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "sms_route_id",
                    "sms_route_price_message_id",
                    "file_name",
                    "stats",
                    "info",
                    "created_at"
                ],
                "title": "SmsRoutePriceMessageFileResource"
            },
            "SmsRoutePriceMessageLogResource": {
                "type": "object",
                "properties": {
                    "sms_route_price_message_id": {
                        "type": "string"
                    },
                    "sms_route_price_message_file_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "line_no": {
                        "type": "integer"
                    },
                    "event": {
                        "type": "string"
                    },
                    "fail_reason": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "meta": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    }
                },
                "required": [
                    "sms_route_price_message_id",
                    "sms_route_price_message_file_id",
                    "line_no",
                    "event",
                    "fail_reason",
                    "meta"
                ],
                "title": "SmsRoutePriceMessageLogResource"
            },
            "SmsRoutePriceMessageResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "sms_route_id": {
                        "type": "string"
                    },
                    "route_name": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    },
                    "stats": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "info": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mail": {
                        "$ref": "#\/components\/schemas\/SmsRoutePriceMailResource"
                    },
                    "state": {
                        "type": "string"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SmsRoutePriceMessageFileResource"
                        }
                    },
                    "settings": {
                        "type": "object",
                        "properties": {
                            "columns": {
                                "type": "string"
                            },
                            "extra_settings": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "columns",
                            "extra_settings"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "sms_route_id",
                    "route_name",
                    "company",
                    "stats",
                    "errors",
                    "info",
                    "mail",
                    "state",
                    "settings",
                    "created_at"
                ],
                "title": "SmsRoutePriceMessageResource"
            },
            "SmsRoutePriceUpdateResource": {
                "type": "object",
                "properties": {
                    "update_source": {
                        "type": "string",
                        "enum": [
                            "Manual",
                            "Email"
                        ]
                    },
                    "message_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "message": {
                        "$ref": "#\/components\/schemas\/SmsRoutePriceMessageResource"
                    },
                    "sms_route_id": {
                        "type": "string"
                    },
                    "sms_route": {
                        "$ref": "#\/components\/schemas\/SmsRoutingRouteResource"
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "country": {
                        "$ref": "#\/components\/schemas\/CountryResource"
                    },
                    "network_id": {
                        "type": "string"
                    },
                    "network": {
                        "$ref": "#\/components\/schemas\/MobileNetworkResource"
                    },
                    "old_rate": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "new_rate": {
                        "type": "number"
                    },
                    "updated_by": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "update_source",
                    "message_id",
                    "sms_route_id",
                    "country_id",
                    "network_id",
                    "old_rate",
                    "new_rate",
                    "updated_by",
                    "created_at"
                ],
                "title": "SmsRoutePriceUpdateResource"
            },
            "SmsRouteSmppConnectionResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "username": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "password": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "port": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "dlr_url": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "dlr_port": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "workers_count": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "workers_delay": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "system_type": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "type": {
                        "type": "string",
                        "example": "SMPP"
                    }
                },
                "required": [
                    "id",
                    "url",
                    "username",
                    "password",
                    "port",
                    "dlr_url",
                    "dlr_port",
                    "workers_count",
                    "workers_delay",
                    "system_type",
                    "created_at",
                    "type"
                ],
                "title": "SmsRouteSmppConnectionResource"
            },
            "SmsRoutingLogsCollection": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/SmsRoutingLogsResource"
                        }
                    }
                },
                "required": [
                    "data"
                ],
                "title": "SmsRoutingLogsCollection"
            },
            "SmsRoutingLogsResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "sms_route_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "country_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "network_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "network_brand_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "old_rate": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "new_rate": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "action",
                    "sms_route_id",
                    "country_id",
                    "network_id",
                    "network_brand_id",
                    "old_rate",
                    "new_rate",
                    "user_id",
                    "team_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "SmsRoutingLogsResource"
            },
            "SmsRoutingPlanResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "team": {
                        "$ref": "#\/components\/schemas\/TeamResource"
                    },
                    "name": {
                        "type": "string"
                    },
                    "is_default": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "connections_count": {
                        "type": "string"
                    },
                    "sms_routes_count": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "team_id",
                    "name",
                    "is_default",
                    "created_at",
                    "updated_at",
                    "connections_count",
                    "sms_routes_count"
                ],
                "title": "SmsRoutingPlanResource"
            },
            "SmsRoutingPlanRuleResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "sms_route_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "sms_routing_plan_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "network_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "network_brand_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "action": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "action_vars": {
                        "description": "Optional action vars for split action",
                        "$ref": "#\/components\/schemas\/SmsRoutingPlanRuleSplitActionVarsData"
                    }
                },
                "required": [
                    "id",
                    "sms_route_id",
                    "sms_routing_plan_id",
                    "country_id",
                    "network_id",
                    "network_brand_id",
                    "is_active",
                    "priority",
                    "action",
                    "created_at",
                    "updated_at",
                    "action_vars"
                ],
                "title": "SmsRoutingPlanRuleResource"
            },
            "SmsRoutingPlanRuleSplitActionVarsData": {
                "type": "object",
                "properties": {
                    "route_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "limit": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "route_ids",
                    "limit"
                ],
                "title": "SmsRoutingPlanRuleSplitActionVarsData"
            },
            "SmsRoutingPlanSelectorFailStatusEnum": {
                "type": "string",
                "enum": [
                    "No route found",
                    "Rule dropped"
                ],
                "title": "SmsRoutingPlanSelectorFailStatusEnum"
            },
            "SmsRoutingRateCountryResource": {
                "type": "object",
                "properties": {
                    "country_id": {
                        "type": "number",
                        "description": "'id' => $this->id,"
                    },
                    "max_rate": {
                        "type": "number"
                    },
                    "min_rate": {
                        "type": "number"
                    },
                    "sms_route_id": {
                        "type": "string"
                    },
                    "networks": {
                        "type": "number"
                    }
                },
                "required": [
                    "country_id",
                    "max_rate",
                    "min_rate",
                    "sms_route_id",
                    "networks"
                ],
                "title": "SmsRoutingRateCountryResource"
            },
            "SmsRoutingRateOperatorResource": {
                "type": "object",
                "properties": {
                    "country_id": {
                        "type": "integer"
                    },
                    "network_brand_id": {
                        "type": "string"
                    },
                    "sms_route_id": {
                        "type": "string"
                    },
                    "max_rate": {
                        "type": "number"
                    },
                    "min_rate": {
                        "type": "number"
                    },
                    "networks": {
                        "type": "string"
                    }
                },
                "required": [
                    "country_id",
                    "network_brand_id",
                    "sms_route_id",
                    "max_rate",
                    "min_rate",
                    "networks"
                ],
                "title": "SmsRoutingRateOperatorResource"
            },
            "SmsRoutingRateResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "rate": {
                        "type": "number"
                    },
                    "upcoming_rate": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "rate_updated_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "sms_route_id": {
                        "type": "string"
                    },
                    "network_id": {
                        "type": "integer"
                    },
                    "network_brand_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "id",
                    "country_id",
                    "rate",
                    "upcoming_rate",
                    "rate_updated_at",
                    "sms_route_id",
                    "network_id",
                    "network_brand_id"
                ],
                "title": "SmsRoutingRateResource"
            },
            "SmsRoutingRouteResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "company_id": {
                        "type": "string"
                    },
                    "company": {
                        "$ref": "#\/components\/schemas\/CompanyResource"
                    },
                    "connection": {
                        "type": "string"
                    },
                    "is_connected": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "connection_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "rates_total": {
                        "type": "integer",
                        "description": "'rates' => SmsRoutingRateResource::collection($this->whenLoaded('smsRouteRates')),"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "links": {
                        "type": "object",
                        "properties": {
                            "delete": {
                                "type": "string",
                                "description": "\"edit\" => action([SmsRoutingRoutesController::class, 'edit'], $this),\n\"update\" => action([SmsRoutingRoutesController::class, 'update'], $this),"
                            }
                        },
                        "required": [
                            "delete"
                        ]
                    },
                    "client_balance": {
                        "type": "number"
                    },
                    "vendor_balance": {
                        "type": "number"
                    },
                    "queue_info": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {}
                    }
                },
                "required": [
                    "id",
                    "name",
                    "company_id",
                    "is_connected",
                    "connection_id",
                    "rates_total",
                    "created_at",
                    "links",
                    "queue_info"
                ],
                "title": "SmsRoutingRouteResource"
            },
            "SmsRoutingSelectedData": {
                "type": "object",
                "properties": {
                    "to_send": {
                        "type": "boolean",
                        "default": true
                    },
                    "fail_reason": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsRoutingPlanSelectorFailStatusEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "status": {
                        "type": [
                            "object",
                            "null"
                        ]
                    },
                    "selected_method": {
                        "type": [
                            "object",
                            "null"
                        ]
                    },
                    "selected_action": {
                        "type": [
                            "object",
                            "null"
                        ]
                    },
                    "selected_rule_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "selected_route": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "costs": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsCostsData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "to_send",
                    "fail_reason",
                    "status",
                    "selected_method",
                    "selected_action",
                    "selected_rule_id",
                    "selected_route",
                    "costs"
                ],
                "title": "SmsRoutingSelectedData"
            },
            "SmsSendLogFieldEnum": {
                "type": "string",
                "enum": [
                    "sms_id",
                    "team_id",
                    "updated_datetime",
                    "sms_campaign_id",
                    "sms_campaign_send_id",
                    "segment_id",
                    "contact_id",
                    "phone_normalized",
                    "network_id",
                    "country_id",
                    "foreign_id",
                    "fail_reason",
                    "is_clicked",
                    "is_lead",
                    "is_sale",
                    "conversion_profit",
                    "unsubscribed_method",
                    "domain_id",
                    "shortened_url",
                    "offer_id",
                    "campaign_text_id",
                    "text_final",
                    "text_parts",
                    "routing_plan_id",
                    "routing_rule_id",
                    "routing_route_id",
                    "sender_id_id",
                    "sender_id_text",
                    "routing_dlr_code",
                    "routing_dlr_raw",
                    "cost_route_total",
                    "click_meta",
                    "sent_at",
                    "time_clicked",
                    "meta",
                    "seller_team_id",
                    "seller_connection_id",
                    "seller_plan_id",
                    "seller_route_id",
                    "seller_profit",
                    "campaign_name",
                    "network_brand",
                    "ctr",
                    "is_sent",
                    "is_delivered",
                    "country_name",
                    "segment_name",
                    "domain_name",
                    "offer_name",
                    "route_name",
                    "last_sent",
                    "contact_tags",
                    "segment_ids"
                ],
                "title": "SmsSendLogFieldEnum"
            },
            "SmsSendlogRowGroupColsData": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#\/components\/schemas\/SmsSendLogFieldEnum"
                    },
                    "show_as": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "minute",
                            "hour",
                            "date",
                            "year-week",
                            "year-month"
                        ]
                    },
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "displayName": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "field",
                    "show_as",
                    "id",
                    "displayName"
                ],
                "title": "SmsSendlogRowGroupColsData"
            },
            "SortModelData": {
                "type": "object",
                "properties": {
                    "colId": {
                        "$ref": "#\/components\/schemas\/ContactSmsFieldEnum"
                    },
                    "sort": {
                        "type": "string",
                        "enum": [
                            "asc",
                            "desc"
                        ]
                    }
                },
                "required": [
                    "colId",
                    "sort"
                ],
                "title": "SortModelData"
            },
            "StaticClientRateResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "seller_endpoint_id": {
                        "type": "string"
                    },
                    "sms_route_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "country_id": {
                        "type": "integer"
                    },
                    "network_id": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "network_brand_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "rate": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "seller_endpoint_id",
                    "sms_route_id",
                    "country_id",
                    "network_id",
                    "network_brand_id",
                    "rate",
                    "created_at",
                    "updated_at"
                ],
                "title": "StaticClientRateResource"
            },
            "TeamAccessTokenData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "access_token": {
                        "type": "string"
                    },
                    "scopes": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#\/components\/schemas\/IntegrationMetaScopesData"
                                }
                            }
                        },
                        "required": [
                            "data"
                        ]
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "access_token",
                    "scopes",
                    "team_id",
                    "created_at",
                    "updated_at"
                ],
                "title": "TeamAccessTokenData"
            },
            "TeamData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/TeamMetaData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "balance": {
                        "type": [
                            "number",
                            "null"
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "meta"
                ],
                "title": "TeamData"
            },
            "TeamInvoiceResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "has_document": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "payment_method": {
                        "type": "string"
                    },
                    "service": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "date": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "team_id",
                    "amount",
                    "currency",
                    "has_document",
                    "status",
                    "payment_method",
                    "service",
                    "created_at",
                    "date"
                ],
                "title": "TeamInvoiceResource"
            },
            "TeamMetaData": {
                "type": "object",
                "properties": {
                    "seller": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/TeamSellerData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "default_timezone": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "green_invoice_client_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "onboarding": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "voice_lead_submitter": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "seller",
                    "default_timezone",
                    "green_invoice_client_id",
                    "onboarding",
                    "voice_lead_submitter"
                ],
                "title": "TeamMetaData"
            },
            "TeamNotificationData": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#\/components\/schemas\/TeamNotificationTypeEnum"
                    },
                    "title": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "read_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "team_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/TeamNotificationMetaData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "hash": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "type",
                    "title",
                    "content",
                    "created_at",
                    "read_at",
                    "team_id",
                    "id",
                    "meta",
                    "hash"
                ],
                "title": "TeamNotificationData"
            },
            "TeamNotificationMetaData": {
                "type": "object",
                "properties": {
                    "object_id": {
                        "type": "string"
                    },
                    "object_type": {
                        "$ref": "#\/components\/schemas\/TeamNotificationObjectTypeEnum"
                    }
                },
                "required": [
                    "object_id",
                    "object_type"
                ],
                "title": "TeamNotificationMetaData"
            },
            "TeamNotificationObjectTypeEnum": {
                "type": "string",
                "enum": [
                    "integration",
                    "sms_campaign",
                    "sms_route",
                    "smpp_connection",
                    "company",
                    "lead_submission"
                ],
                "title": "TeamNotificationObjectTypeEnum"
            },
            "TeamNotificationTypeEnum": {
                "type": "string",
                "enum": [
                    "info",
                    "warning",
                    "error",
                    "success"
                ],
                "title": "TeamNotificationTypeEnum"
            },
            "TeamResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "balance": {
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "balance"
                ],
                "title": "TeamResource"
            },
            "TeamSellerData": {
                "type": "object",
                "properties": {
                    "margin_type": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsMarginTypeEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "margin_value": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "default": 30
                    }
                },
                "required": [
                    "margin_type",
                    "margin_value"
                ],
                "title": "TeamSellerData"
            },
            "TeamTopUpResource": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "string"
                    },
                    "threshold": {
                        "type": "integer"
                    },
                    "amount": {
                        "type": "string"
                    },
                    "reference": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "payment_method": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "balance": {
                        "type": "string"
                    },
                    "balance_number": {
                        "type": "number"
                    }
                },
                "required": [
                    "enabled",
                    "threshold",
                    "amount",
                    "reference",
                    "payment_method",
                    "created_at"
                ],
                "title": "TeamTopUpResource"
            },
            "TldResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "price"
                ],
                "title": "TldResource"
            },
            "UserData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "two_factor_confirmed_at": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "profile_photo_path": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "platform_domain_account_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "current_team": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/TeamData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "role": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "platform_role": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "email",
                    "created_at",
                    "two_factor_confirmed_at",
                    "profile_photo_path",
                    "platform_domain_account_id",
                    "role",
                    "platform_role"
                ],
                "title": "UserData"
            },
            "UserTeamData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/TeamMetaData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "is_current": {
                        "type": "boolean",
                        "default": false
                    },
                    "balance": {
                        "type": [
                            "number",
                            "null"
                        ]
                    },
                    "currency": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "role": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "members_count": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "meta",
                    "is_current",
                    "currency",
                    "role",
                    "members_count"
                ],
                "title": "UserTeamData"
            },
            "VoiceAccount": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "meta": {
                        "type": "array",
                        "items": {}
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "team_id",
                    "meta",
                    "created_at",
                    "updated_at"
                ],
                "title": "VoiceAccount"
            },
            "VoiceAccountMetaDataRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "twilio_account_sid": {
                        "type": "string"
                    },
                    "twilio_auth_token": {
                        "type": "string"
                    },
                    "default_voice_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "region": {
                        "type": "string",
                        "default": "us1"
                    }
                },
                "required": [
                    "name",
                    "twilio_account_sid",
                    "twilio_auth_token"
                ],
                "title": "VoiceAccountMetaDataRequest"
            },
            "VoiceAccountUpdateDataRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "twilio_account_sid": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "twilio_auth_token": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "default_voice_id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "region": {
                        "type": "string",
                        "default": "us1"
                    }
                },
                "required": [
                    "name"
                ],
                "title": "VoiceAccountUpdateDataRequest"
            },
            "VoiceCampaignData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/VoiceCampaignMetaData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/VoiceCampaignStatusEnum"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "meta",
                    "status"
                ],
                "title": "VoiceCampaignData"
            },
            "VoiceCampaignDataRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "name": {
                        "type": "string"
                    },
                    "meta": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/VoiceCampaignMetaDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "status": {
                        "$ref": "#\/components\/schemas\/VoiceCampaignStatusEnum"
                    }
                },
                "title": "VoiceCampaignDataRequest"
            },
            "VoiceCampaignMetaData": {
                "type": "object",
                "properties": {
                    "send_type": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsCampaignSendTypeEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "segment_ids": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "object"
                        }
                    },
                    "filter_segment_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "agent_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "number_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "agent_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "number_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "manual_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignManualData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "recurring_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignRecurringData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "feed_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignFeedData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "stopped_reason": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "required": [
                    "send_type",
                    "segment_ids",
                    "filter_segment_id",
                    "agent_id",
                    "number_id",
                    "agent_ids",
                    "number_ids",
                    "manual_data",
                    "recurring_data",
                    "feed_data",
                    "stopped_reason"
                ],
                "title": "VoiceCampaignMetaData"
            },
            "VoiceCampaignMetaDataRequest": {
                "type": "object",
                "properties": {
                    "send_type": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/SmsCampaignSendTypeEnum"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "segment_ids": {
                        "type": "array",
                        "default": [],
                        "items": {
                            "type": "object"
                        }
                    },
                    "filter_segment_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "agent_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "number_id": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "agent_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "number_ids": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "string"
                        }
                    },
                    "manual_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignManualDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "recurring_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignRecurringDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "feed_data": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/CampaignFeedDataRequest"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "stopped_reason": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "title": "VoiceCampaignMetaDataRequest"
            },
            "VoiceCampaignResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/VoiceCampaignMetaData"
                    },
                    "sends": {
                        "type": "array",
                        "items": {
                            "$ref": "#\/components\/schemas\/VoiceCampaignSendResource"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "status",
                    "meta"
                ],
                "title": "VoiceCampaignResource"
            },
            "VoiceCampaignSendResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "next_step_timestamp": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "status": {
                        "type": "string"
                    },
                    "meta": {
                        "$ref": "#\/components\/schemas\/VoiceCampaignMetaData"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "voice_campaign_id": {
                        "type": "string"
                    },
                    "calls_count": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "next_step_timestamp",
                    "status",
                    "meta",
                    "created_at",
                    "updated_at",
                    "voice_campaign_id",
                    "calls_count"
                ],
                "title": "VoiceCampaignSendResource"
            },
            "VoiceCampaignStatusEnum": {
                "type": "string",
                "enum": [
                    "draft",
                    "pending",
                    "running",
                    "in_progress",
                    "sent",
                    "failed",
                    "stopped"
                ],
                "title": "VoiceCampaignStatusEnum"
            },
            "VoiceLeadSubmitterLogResource": {
                "type": "string",
                "title": "VoiceLeadSubmitterLogResource"
            },
            "WeeklyScheduleData": {
                "type": "object",
                "properties": {
                    "default": {
                        "$ref": "#\/components\/schemas\/HoursOfDay"
                    },
                    "Mon": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "Tue": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "Wed": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "Thu": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "Fri": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "Sat": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "Sun": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "default",
                    "Mon",
                    "Tue",
                    "Wed",
                    "Thu",
                    "Fri",
                    "Sat",
                    "Sun"
                ],
                "title": "WeeklyScheduleData"
            },
            "WeeklyScheduleDataRequest": {
                "type": "object",
                "properties": {
                    "default": {
                        "$ref": "#\/components\/schemas\/HoursOfDay"
                    },
                    "Mon": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "Tue": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "Wed": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "Thu": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "Fri": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "Sat": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "Sun": {
                        "anyOf": [
                            {
                                "$ref": "#\/components\/schemas\/HoursOfDay"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "default"
                ],
                "title": "WeeklyScheduleDataRequest"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application\/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}